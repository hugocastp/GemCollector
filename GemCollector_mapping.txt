# compiler: R8
# compiler_version: 1.4.77
# min_api: 19
com.google.common.logging.Vr$1 -> a.a.a.a.a:
    int[] $SwitchMap$com$google$protobuf$GeneratedMessageLite$MethodToInvoke -> a
com.google.common.logging.Vr$VREvent$Application -> a.a.a.a.b:
    java.lang.String packageName_ -> g
    com.google.vr.sdk.deps.cp PARSER -> f
    java.lang.String version_ -> i
    com.google.common.logging.Vr$VREvent$Application DEFAULT_INSTANCE -> e
    java.lang.String name_ -> h
    java.lang.Object dynamicMethod(com.google.vr.sdk.deps.av$d,java.lang.Object,java.lang.Object) -> a
    com.google.common.logging.Vr$VREvent$Application access$800() -> s
    com.google.vr.sdk.deps.cp parser() -> t
com.google.common.logging.Vr$VREvent$Application$Builder -> a.a.a.a.b$a:
com.google.common.logging.Vr$VREvent$ApplicationOrBuilder -> a.a.a.a.c:
com.google.common.logging.Vr$VREvent$AudioStats -> a.a.a.a.d:
    com.google.vr.sdk.deps.cp PARSER -> f
    com.google.vr.sdk.deps.bi cpuMeasurementsPercent_ -> j
    com.google.common.logging.Vr$VREvent$AudioStats DEFAULT_INSTANCE -> e
    com.google.vr.sdk.deps.bi numberOfSimultaneousSoundObjects_ -> h
    com.google.vr.sdk.deps.bi numberOfSimultaneousSoundFields_ -> i
    com.google.vr.sdk.deps.bi renderingTimePerBufferMilliseconds_ -> g
    java.lang.Object dynamicMethod(com.google.vr.sdk.deps.av$d,java.lang.Object,java.lang.Object) -> a
    com.google.common.logging.Vr$VREvent$AudioStats access$87600() -> s
    com.google.vr.sdk.deps.cp parser() -> t
com.google.common.logging.Vr$VREvent$AudioStats$Builder -> a.a.a.a.d$a:
com.google.common.logging.Vr$VREvent$AudioStats$RenderingMode -> a.a.a.a.d$b:
    com.google.common.logging.Vr$VREvent$AudioStats$RenderingMode BINAURAL_HIGH_QUALITY -> d
    com.google.common.logging.Vr$VREvent$AudioStats$RenderingMode BINAURAL_LOW_QUALITY -> c
    com.google.common.logging.Vr$VREvent$AudioStats$RenderingMode STEREO_PANNING -> b
    com.google.vr.sdk.deps.bb internalValueMap -> e
    com.google.common.logging.Vr$VREvent$AudioStats$RenderingMode[] $VALUES -> f
    com.google.common.logging.Vr$VREvent$AudioStats$RenderingMode UNKNOWN -> a
    int value -> g
    com.google.common.logging.Vr$VREvent$AudioStats$RenderingMode forNumber(int) -> a
    int getNumber() -> c
    com.google.vr.sdk.deps.bc internalGetVerifier() -> h
com.google.common.logging.Vr$VREvent$AudioStats$RenderingMode$1 -> a.a.a.a.e:
    com.google.common.logging.Vr$VREvent$AudioStats$RenderingMode findValueByNumber(int) -> a
    com.google.vr.sdk.deps.ba findValueByNumber(int) -> a
com.google.common.logging.Vr$VREvent$AudioStats$RenderingMode$RenderingModeVerifier -> a.a.a.a.d$b$a:
    com.google.vr.sdk.deps.bc INSTANCE -> a
    boolean isInRange(int) -> a
com.google.common.logging.Vr$VREvent$AudioStatsOrBuilder -> a.a.a.a.f:
com.google.common.logging.Vr$VREvent$Bucket -> a.a.a.a.h:
    com.google.common.logging.Vr$VREvent$Bucket FOUR -> e
    com.google.common.logging.Vr$VREvent$Bucket FIVE -> f
    com.google.common.logging.Vr$VREvent$Bucket TWO -> c
    int value -> l
    com.google.common.logging.Vr$VREvent$Bucket THREE -> d
    com.google.vr.sdk.deps.bb internalValueMap -> j
    com.google.common.logging.Vr$VREvent$Bucket UNKNOWN_BUCKET -> a
    com.google.common.logging.Vr$VREvent$Bucket ONE -> b
    com.google.common.logging.Vr$VREvent$Bucket[] $VALUES -> k
    com.google.common.logging.Vr$VREvent$Bucket TWENTYONE_PLUS -> i
    com.google.common.logging.Vr$VREvent$Bucket SIX_TO_TEN -> g
    com.google.common.logging.Vr$VREvent$Bucket ELEVEN_TO_TWENTY -> h
    com.google.common.logging.Vr$VREvent$Bucket forNumber(int) -> a
    int getNumber() -> c
com.google.common.logging.Vr$VREvent$Bucket$1 -> a.a.a.a.g:
    com.google.common.logging.Vr$VREvent$Bucket findValueByNumber(int) -> a
    com.google.vr.sdk.deps.ba findValueByNumber(int) -> a
com.google.common.logging.Vr$VREvent$Cyclops$Capture$Outcome -> a.a.a.a.j:
    com.google.common.logging.Vr$VREvent$Cyclops$Capture$Outcome[] $VALUES -> g
    int value -> h
    com.google.vr.sdk.deps.bb internalValueMap -> f
    com.google.common.logging.Vr$VREvent$Cyclops$Capture$Outcome FAILURE_PROCESSING -> d
    com.google.common.logging.Vr$VREvent$Cyclops$Capture$Outcome USER_CANCELLED -> e
    com.google.common.logging.Vr$VREvent$Cyclops$Capture$Outcome SUCCESS -> b
    com.google.common.logging.Vr$VREvent$Cyclops$Capture$Outcome FAILURE_CAPTURE -> c
    com.google.common.logging.Vr$VREvent$Cyclops$Capture$Outcome UNKNOWN -> a
    com.google.common.logging.Vr$VREvent$Cyclops$Capture$Outcome forNumber(int) -> a
    int getNumber() -> c
com.google.common.logging.Vr$VREvent$Cyclops$Capture$Outcome$1 -> a.a.a.a.i:
    com.google.common.logging.Vr$VREvent$Cyclops$Capture$Outcome findValueByNumber(int) -> a
    com.google.vr.sdk.deps.ba findValueByNumber(int) -> a
com.google.common.logging.Vr$VREvent$Cyclops$Share -> a.a.a.a.k:
    com.google.vr.sdk.deps.cp PARSER -> f
    com.google.common.logging.Vr$VREvent$Cyclops$Share DEFAULT_INSTANCE -> e
    java.lang.Object dynamicMethod(com.google.vr.sdk.deps.av$d,java.lang.Object,java.lang.Object) -> a
    com.google.common.logging.Vr$VREvent$Cyclops$Share access$8800() -> s
    com.google.vr.sdk.deps.cp parser() -> t
com.google.common.logging.Vr$VREvent$Cyclops$Share$Builder -> a.a.a.a.k$a:
com.google.common.logging.Vr$VREvent$Cyclops$Share$Type -> a.a.a.a.k$b:
    com.google.common.logging.Vr$VREvent$Cyclops$Share$Type CANCELLED -> b
    com.google.common.logging.Vr$VREvent$Cyclops$Share$Type UNKNOWN -> a
    com.google.common.logging.Vr$VREvent$Cyclops$Share$Type SOCIAL_OTHER -> d
    com.google.vr.sdk.deps.bb internalValueMap -> i
    com.google.common.logging.Vr$VREvent$Cyclops$Share$Type COPY_LINK -> c
    int value -> k
    com.google.common.logging.Vr$VREvent$Cyclops$Share$Type[] $VALUES -> j
    com.google.common.logging.Vr$VREvent$Cyclops$Share$Type SOCIAL_TWITTER -> f
    com.google.common.logging.Vr$VREvent$Cyclops$Share$Type SOCIAL_FACEBOOK -> e
    com.google.common.logging.Vr$VREvent$Cyclops$Share$Type EMAIL -> h
    com.google.common.logging.Vr$VREvent$Cyclops$Share$Type SOCIAL_GPLUS -> g
    com.google.common.logging.Vr$VREvent$Cyclops$Share$Type forNumber(int) -> a
    int getNumber() -> c
    com.google.vr.sdk.deps.bc internalGetVerifier() -> h
com.google.common.logging.Vr$VREvent$Cyclops$Share$Type$1 -> a.a.a.a.l:
    com.google.common.logging.Vr$VREvent$Cyclops$Share$Type findValueByNumber(int) -> a
    com.google.vr.sdk.deps.ba findValueByNumber(int) -> a
com.google.common.logging.Vr$VREvent$Cyclops$Share$Type$TypeVerifier -> a.a.a.a.k$b$a:
    com.google.vr.sdk.deps.bc INSTANCE -> a
    boolean isInRange(int) -> a
com.google.common.logging.Vr$VREvent$Cyclops$ShareOrBuilder -> a.a.a.a.m:
com.google.common.logging.Vr$VREvent$Cyclops$ShareStart -> a.a.a.a.n:
    com.google.vr.sdk.deps.cp PARSER -> f
    com.google.common.logging.Vr$VREvent$Cyclops$ShareStart DEFAULT_INSTANCE -> e
    java.lang.Object dynamicMethod(com.google.vr.sdk.deps.av$d,java.lang.Object,java.lang.Object) -> a
    com.google.common.logging.Vr$VREvent$Cyclops$ShareStart access$9600() -> s
    com.google.vr.sdk.deps.cp parser() -> t
com.google.common.logging.Vr$VREvent$Cyclops$ShareStart$Builder -> a.a.a.a.n$a:
com.google.common.logging.Vr$VREvent$Cyclops$ShareStart$OriginScreen -> a.a.a.a.n$b:
    com.google.common.logging.Vr$VREvent$Cyclops$ShareStart$OriginScreen[] $VALUES -> e
    com.google.common.logging.Vr$VREvent$Cyclops$ShareStart$OriginScreen GALLERY -> b
    com.google.common.logging.Vr$VREvent$Cyclops$ShareStart$OriginScreen UNKNOWN -> a
    com.google.common.logging.Vr$VREvent$Cyclops$ShareStart$OriginScreen ONE_UP_VIEW -> c
    int value -> f
    com.google.vr.sdk.deps.bb internalValueMap -> d
    com.google.common.logging.Vr$VREvent$Cyclops$ShareStart$OriginScreen forNumber(int) -> a
    int getNumber() -> c
    com.google.vr.sdk.deps.bc internalGetVerifier() -> h
com.google.common.logging.Vr$VREvent$Cyclops$ShareStart$OriginScreen$1 -> a.a.a.a.o:
    com.google.common.logging.Vr$VREvent$Cyclops$ShareStart$OriginScreen findValueByNumber(int) -> a
    com.google.vr.sdk.deps.ba findValueByNumber(int) -> a
com.google.common.logging.Vr$VREvent$Cyclops$ShareStart$OriginScreen$OriginScreenVerifier -> a.a.a.a.n$b$a:
    com.google.vr.sdk.deps.bc INSTANCE -> a
    boolean isInRange(int) -> a
com.google.common.logging.Vr$VREvent$Cyclops$ShareStartOrBuilder -> a.a.a.a.p:
com.google.common.logging.Vr$VREvent$Cyclops$View$Orientation -> a.a.a.a.r:
    int value -> f
    com.google.vr.sdk.deps.bb internalValueMap -> d
    com.google.common.logging.Vr$VREvent$Cyclops$View$Orientation PORTRAIT -> c
    com.google.common.logging.Vr$VREvent$Cyclops$View$Orientation UNKNOWN -> a
    com.google.common.logging.Vr$VREvent$Cyclops$View$Orientation LANDSCAPE -> b
    com.google.common.logging.Vr$VREvent$Cyclops$View$Orientation[] $VALUES -> e
    com.google.common.logging.Vr$VREvent$Cyclops$View$Orientation forNumber(int) -> a
    int getNumber() -> c
com.google.common.logging.Vr$VREvent$Cyclops$View$Orientation$1 -> a.a.a.a.q:
    com.google.common.logging.Vr$VREvent$Cyclops$View$Orientation findValueByNumber(int) -> a
    com.google.vr.sdk.deps.ba findValueByNumber(int) -> a
com.google.common.logging.Vr$VREvent$EarthVr -> a.a.a.a.s:
    com.google.vr.sdk.deps.cp PARSER -> f
    com.google.common.logging.Vr$VREvent$EarthVr DEFAULT_INSTANCE -> e
    com.google.vr.sdk.deps.bi actors_ -> h
    com.google.vr.sdk.deps.bi errors_ -> i
    com.google.vr.sdk.deps.bi controllerStates_ -> g
    java.lang.Object dynamicMethod(com.google.vr.sdk.deps.av$d,java.lang.Object,java.lang.Object) -> a
    com.google.common.logging.Vr$VREvent$EarthVr access$132900() -> s
    com.google.vr.sdk.deps.cp parser() -> t
com.google.common.logging.Vr$VREvent$EarthVr$Actor -> a.a.a.a.s$a:
    com.google.vr.sdk.deps.cp PARSER -> f
    com.google.common.logging.Vr$VREvent$EarthVr$Actor DEFAULT_INSTANCE -> e
    com.google.vr.sdk.deps.bi controllerStates_ -> g
    java.lang.Object dynamicMethod(com.google.vr.sdk.deps.av$d,java.lang.Object,java.lang.Object) -> a
    com.google.common.logging.Vr$VREvent$EarthVr$Actor access$123200() -> s
com.google.common.logging.Vr$VREvent$EarthVr$Actor$Builder -> a.a.a.a.s$a$a:
com.google.common.logging.Vr$VREvent$EarthVr$Actor$ControllerState -> a.a.a.a.s$a$b:
    com.google.vr.sdk.deps.cp PARSER -> f
    com.google.common.logging.Vr$VREvent$EarthVr$Actor$ControllerState DEFAULT_INSTANCE -> e
    java.lang.Object dynamicMethod(com.google.vr.sdk.deps.av$d,java.lang.Object,java.lang.Object) -> a
    com.google.common.logging.Vr$VREvent$EarthVr$Actor$ControllerState access$122200() -> s
com.google.common.logging.Vr$VREvent$EarthVr$Actor$ControllerState$Builder -> a.a.a.a.s$a$b$a:
com.google.common.logging.Vr$VREvent$EarthVr$Actor$ControllerState$Role -> a.a.a.a.s$a$b$b:
    com.google.common.logging.Vr$VREvent$EarthVr$Actor$ControllerState$Role SECONDARY -> c
    com.google.common.logging.Vr$VREvent$EarthVr$Actor$ControllerState$Role PRIMARY -> b
    com.google.common.logging.Vr$VREvent$EarthVr$Actor$ControllerState$Role UNKNOWN -> a
    com.google.common.logging.Vr$VREvent$EarthVr$Actor$ControllerState$Role[] $VALUES -> e
    int value -> f
    com.google.vr.sdk.deps.bb internalValueMap -> d
    com.google.common.logging.Vr$VREvent$EarthVr$Actor$ControllerState$Role forNumber(int) -> a
    int getNumber() -> c
    com.google.vr.sdk.deps.bc internalGetVerifier() -> h
com.google.common.logging.Vr$VREvent$EarthVr$Actor$ControllerState$Role$1 -> a.a.a.a.t:
    com.google.common.logging.Vr$VREvent$EarthVr$Actor$ControllerState$Role findValueByNumber(int) -> a
    com.google.vr.sdk.deps.ba findValueByNumber(int) -> a
com.google.common.logging.Vr$VREvent$EarthVr$Actor$ControllerState$Role$RoleVerifier -> a.a.a.a.s$a$b$b$a:
    com.google.vr.sdk.deps.bc INSTANCE -> a
    boolean isInRange(int) -> a
com.google.common.logging.Vr$VREvent$EarthVr$Actor$ControllerState$Type -> a.a.a.a.s$a$b$c:
    com.google.common.logging.Vr$VREvent$EarthVr$Actor$ControllerState$Type TYPE_OCULUS_TOUCH_LEFT_CONTROLLER -> c
    com.google.common.logging.Vr$VREvent$EarthVr$Actor$ControllerState$Type TYPE_OCULUS_TOUCH_RIGHT_CONTROLLER -> d
    com.google.common.logging.Vr$VREvent$EarthVr$Actor$ControllerState$Type TYPE_DAYDREAM_PAPRIKA_CONTROLLER -> e
    int value -> h
    com.google.vr.sdk.deps.bb internalValueMap -> f
    com.google.common.logging.Vr$VREvent$EarthVr$Actor$ControllerState$Type[] $VALUES -> g
    com.google.common.logging.Vr$VREvent$EarthVr$Actor$ControllerState$Type TYPE_UNKNOWN -> a
    com.google.common.logging.Vr$VREvent$EarthVr$Actor$ControllerState$Type TYPE_HTC_VIVE_CONTROLLER -> b
    com.google.common.logging.Vr$VREvent$EarthVr$Actor$ControllerState$Type forNumber(int) -> a
    int getNumber() -> c
    com.google.vr.sdk.deps.bc internalGetVerifier() -> h
com.google.common.logging.Vr$VREvent$EarthVr$Actor$ControllerState$Type$1 -> a.a.a.a.u:
    com.google.common.logging.Vr$VREvent$EarthVr$Actor$ControllerState$Type findValueByNumber(int) -> a
    com.google.vr.sdk.deps.ba findValueByNumber(int) -> a
com.google.common.logging.Vr$VREvent$EarthVr$Actor$ControllerState$Type$TypeVerifier -> a.a.a.a.s$a$b$c$a:
    com.google.vr.sdk.deps.bc INSTANCE -> a
    boolean isInRange(int) -> a
com.google.common.logging.Vr$VREvent$EarthVr$Actor$ControllerStateOrBuilder -> a.a.a.a.s$a$c:
com.google.common.logging.Vr$VREvent$EarthVr$Actor$VrSdk -> a.a.a.a.s$a$d:
    com.google.common.logging.Vr$VREvent$EarthVr$Actor$VrSdk VR_SDK_UNKNOWN -> a
    com.google.common.logging.Vr$VREvent$EarthVr$Actor$VrSdk VR_SDK_OVR -> c
    com.google.common.logging.Vr$VREvent$EarthVr$Actor$VrSdk VR_SDK_OPEN_VR -> b
    int value -> f
    com.google.vr.sdk.deps.bb internalValueMap -> d
    com.google.common.logging.Vr$VREvent$EarthVr$Actor$VrSdk[] $VALUES -> e
    com.google.common.logging.Vr$VREvent$EarthVr$Actor$VrSdk forNumber(int) -> a
    int getNumber() -> c
    com.google.vr.sdk.deps.bc internalGetVerifier() -> h
com.google.common.logging.Vr$VREvent$EarthVr$Actor$VrSdk$1 -> a.a.a.a.v:
    com.google.common.logging.Vr$VREvent$EarthVr$Actor$VrSdk findValueByNumber(int) -> a
    com.google.vr.sdk.deps.ba findValueByNumber(int) -> a
com.google.common.logging.Vr$VREvent$EarthVr$Actor$VrSdk$VrSdkVerifier -> a.a.a.a.s$a$d$a:
    com.google.vr.sdk.deps.bc INSTANCE -> a
    boolean isInRange(int) -> a
com.google.common.logging.Vr$VREvent$EarthVr$Actor$VrSystemType -> a.a.a.a.s$a$e:
    com.google.common.logging.Vr$VREvent$EarthVr$Actor$VrSystemType VR_SYSTEM_TYPE_UNKNOWN -> a
    com.google.common.logging.Vr$VREvent$EarthVr$Actor$VrSystemType VR_SYSTEM_TYPE_HTC_VIVE -> b
    com.google.common.logging.Vr$VREvent$EarthVr$Actor$VrSystemType[] $VALUES -> e
    com.google.common.logging.Vr$VREvent$EarthVr$Actor$VrSystemType VR_SYSTEM_TYPE_OCULUS_RIFT -> c
    int value -> f
    com.google.vr.sdk.deps.bb internalValueMap -> d
    com.google.common.logging.Vr$VREvent$EarthVr$Actor$VrSystemType forNumber(int) -> a
    int getNumber() -> c
    com.google.vr.sdk.deps.bc internalGetVerifier() -> h
com.google.common.logging.Vr$VREvent$EarthVr$Actor$VrSystemType$1 -> a.a.a.a.w:
    com.google.common.logging.Vr$VREvent$EarthVr$Actor$VrSystemType findValueByNumber(int) -> a
    com.google.vr.sdk.deps.ba findValueByNumber(int) -> a
com.google.common.logging.Vr$VREvent$EarthVr$Actor$VrSystemType$VrSystemTypeVerifier -> a.a.a.a.s$a$e$a:
    com.google.vr.sdk.deps.bc INSTANCE -> a
    boolean isInRange(int) -> a
com.google.common.logging.Vr$VREvent$EarthVr$ActorOrBuilder -> a.a.a.a.s$b:
com.google.common.logging.Vr$VREvent$EarthVr$Builder -> a.a.a.a.s$c:
com.google.common.logging.Vr$VREvent$EarthVr$ControllerState -> a.a.a.a.s$d:
    com.google.vr.sdk.deps.cp PARSER -> f
    com.google.common.logging.Vr$VREvent$EarthVr$ControllerState DEFAULT_INSTANCE -> e
    java.lang.Object dynamicMethod(com.google.vr.sdk.deps.av$d,java.lang.Object,java.lang.Object) -> a
    com.google.common.logging.Vr$VREvent$EarthVr$ControllerState access$132100() -> s
com.google.common.logging.Vr$VREvent$EarthVr$ControllerState$Builder -> a.a.a.a.s$d$a:
com.google.common.logging.Vr$VREvent$EarthVr$ControllerState$Role -> a.a.a.a.s$d$b:
    int value -> f
    com.google.common.logging.Vr$VREvent$EarthVr$ControllerState$Role UNKNOWN -> a
    com.google.vr.sdk.deps.bb internalValueMap -> d
    com.google.common.logging.Vr$VREvent$EarthVr$ControllerState$Role PRIMARY -> b
    com.google.common.logging.Vr$VREvent$EarthVr$ControllerState$Role SECONDARY -> c
    com.google.common.logging.Vr$VREvent$EarthVr$ControllerState$Role[] $VALUES -> e
    com.google.common.logging.Vr$VREvent$EarthVr$ControllerState$Role forNumber(int) -> a
    int getNumber() -> c
    com.google.vr.sdk.deps.bc internalGetVerifier() -> h
com.google.common.logging.Vr$VREvent$EarthVr$ControllerState$Role$1 -> a.a.a.a.x:
    com.google.common.logging.Vr$VREvent$EarthVr$ControllerState$Role findValueByNumber(int) -> a
    com.google.vr.sdk.deps.ba findValueByNumber(int) -> a
com.google.common.logging.Vr$VREvent$EarthVr$ControllerState$Role$RoleVerifier -> a.a.a.a.s$d$b$a:
    com.google.vr.sdk.deps.bc INSTANCE -> a
    boolean isInRange(int) -> a
com.google.common.logging.Vr$VREvent$EarthVr$ControllerStateOrBuilder -> a.a.a.a.s$e:
com.google.common.logging.Vr$VREvent$EarthVr$VrSdkError -> a.a.a.a.s$f:
    java.lang.String sdkFunction_ -> g
    com.google.vr.sdk.deps.cp PARSER -> f
    com.google.common.logging.Vr$VREvent$EarthVr$VrSdkError DEFAULT_INSTANCE -> e
    java.lang.Object dynamicMethod(com.google.vr.sdk.deps.av$d,java.lang.Object,java.lang.Object) -> a
    com.google.common.logging.Vr$VREvent$EarthVr$VrSdkError access$131200() -> s
com.google.common.logging.Vr$VREvent$EarthVr$VrSdkError$Builder -> a.a.a.a.s$f$a:
com.google.common.logging.Vr$VREvent$EarthVr$VrSdkError$ShutdownReason -> a.a.a.a.s$f$b:
    com.google.common.logging.Vr$VREvent$EarthVr$VrSdkError$ShutdownReason SHUTDOWN_REASON_UNKNOWN -> a
    com.google.common.logging.Vr$VREvent$EarthVr$VrSdkError$ShutdownReason SHUTDOWN_REASON_SDK_INIT_FAILED -> b
    com.google.common.logging.Vr$VREvent$EarthVr$VrSdkError$ShutdownReason[] $VALUES -> e
    int value -> f
    com.google.vr.sdk.deps.bb internalValueMap -> d
    com.google.common.logging.Vr$VREvent$EarthVr$VrSdkError$ShutdownReason SHUTDOWN_REASON_ENTITLEMENT_CHECK_FAILED -> c
    com.google.common.logging.Vr$VREvent$EarthVr$VrSdkError$ShutdownReason forNumber(int) -> a
    int getNumber() -> c
    com.google.vr.sdk.deps.bc internalGetVerifier() -> h
com.google.common.logging.Vr$VREvent$EarthVr$VrSdkError$ShutdownReason$1 -> a.a.a.a.y:
    com.google.common.logging.Vr$VREvent$EarthVr$VrSdkError$ShutdownReason findValueByNumber(int) -> a
    com.google.vr.sdk.deps.ba findValueByNumber(int) -> a
com.google.common.logging.Vr$VREvent$EarthVr$VrSdkError$ShutdownReason$ShutdownReasonVerifier -> a.a.a.a.s$f$b$a:
    com.google.vr.sdk.deps.bc INSTANCE -> a
    boolean isInRange(int) -> a
com.google.common.logging.Vr$VREvent$EarthVr$VrSdkErrorOrBuilder -> a.a.a.a.s$g:
com.google.common.logging.Vr$VREvent$EarthVrOrBuilder -> a.a.a.a.z:
com.google.common.logging.Vr$VREvent$EmbedVrWidget -> a.a.a.a.A:
    java.lang.String errorMsg_ -> g
    com.google.vr.sdk.deps.cp PARSER -> f
    com.google.common.logging.Vr$VREvent$EmbedVrWidget DEFAULT_INSTANCE -> e
    java.lang.Object dynamicMethod(com.google.vr.sdk.deps.av$d,java.lang.Object,java.lang.Object) -> a
    com.google.common.logging.Vr$VREvent$EmbedVrWidget access$93800() -> s
    com.google.vr.sdk.deps.cp parser() -> t
com.google.common.logging.Vr$VREvent$EmbedVrWidget$Builder -> a.a.a.a.A$a:
com.google.common.logging.Vr$VREvent$EmbedVrWidget$ViewMode -> a.a.a.a.A$b:
    com.google.common.logging.Vr$VREvent$EmbedVrWidget$ViewMode[] $VALUES -> f
    com.google.vr.sdk.deps.bb internalValueMap -> e
    com.google.common.logging.Vr$VREvent$EmbedVrWidget$ViewMode EMBEDDED -> b
    com.google.common.logging.Vr$VREvent$EmbedVrWidget$ViewMode FULLSCREEN_MONO -> c
    int value -> g
    com.google.common.logging.Vr$VREvent$EmbedVrWidget$ViewMode UNKNOWN_MODE -> a
    com.google.common.logging.Vr$VREvent$EmbedVrWidget$ViewMode FULLSCREEN_VR -> d
    com.google.common.logging.Vr$VREvent$EmbedVrWidget$ViewMode forNumber(int) -> a
    int getNumber() -> c
    com.google.vr.sdk.deps.bc internalGetVerifier() -> h
com.google.common.logging.Vr$VREvent$EmbedVrWidget$ViewMode$1 -> a.a.a.a.B:
    com.google.common.logging.Vr$VREvent$EmbedVrWidget$ViewMode findValueByNumber(int) -> a
    com.google.vr.sdk.deps.ba findValueByNumber(int) -> a
com.google.common.logging.Vr$VREvent$EmbedVrWidget$ViewMode$ViewModeVerifier -> a.a.a.a.A$b$a:
    com.google.vr.sdk.deps.bc INSTANCE -> a
    boolean isInRange(int) -> a
com.google.common.logging.Vr$VREvent$EmbedVrWidgetOrBuilder -> a.a.a.a.C:
com.google.common.logging.Vr$VREvent$Eva$BluetoothSession -> a.a.a.a.D:
    com.google.common.logging.Vr$VREvent$Eva$BluetoothSession DEFAULT_INSTANCE -> e
    com.google.vr.sdk.deps.cp PARSER -> f
    java.lang.Object dynamicMethod(com.google.vr.sdk.deps.av$d,java.lang.Object,java.lang.Object) -> a
    com.google.common.logging.Vr$VREvent$Eva$BluetoothSession access$28200() -> s
    com.google.vr.sdk.deps.cp parser() -> t
com.google.common.logging.Vr$VREvent$Eva$BluetoothSession$Builder -> a.a.a.a.D$a:
com.google.common.logging.Vr$VREvent$Eva$BluetoothSessionOrBuilder -> a.a.a.a.E:
com.google.common.logging.Vr$VREvent$Eva$CameraFirmwareUpdate -> a.a.a.a.F:
    com.google.vr.sdk.deps.cp PARSER -> f
    com.google.common.logging.Vr$VREvent$Eva$CameraFirmwareUpdate DEFAULT_INSTANCE -> e
    java.lang.Object dynamicMethod(com.google.vr.sdk.deps.av$d,java.lang.Object,java.lang.Object) -> a
    com.google.common.logging.Vr$VREvent$Eva$CameraFirmwareUpdate access$35200() -> s
    com.google.vr.sdk.deps.cp parser() -> t
com.google.common.logging.Vr$VREvent$Eva$CameraFirmwareUpdate$Builder -> a.a.a.a.F$a:
com.google.common.logging.Vr$VREvent$Eva$CameraFirmwareUpdate$UpdateOutcome -> a.a.a.a.F$b:
    com.google.common.logging.Vr$VREvent$Eva$CameraFirmwareUpdate$UpdateOutcome[] $VALUES -> g
    int value -> h
    com.google.vr.sdk.deps.bb internalValueMap -> f
    com.google.common.logging.Vr$VREvent$Eva$CameraFirmwareUpdate$UpdateOutcome UPDATE_OUTCOME_PUSH_ERROR -> d
    com.google.common.logging.Vr$VREvent$Eva$CameraFirmwareUpdate$UpdateOutcome UPDATE_OUTCOME_RETRIEVE_ERROR -> c
    com.google.common.logging.Vr$VREvent$Eva$CameraFirmwareUpdate$UpdateOutcome UPDATE_OUTCOME_PUSH_SUCCESS -> e
    com.google.common.logging.Vr$VREvent$Eva$CameraFirmwareUpdate$UpdateOutcome UPDATE_OUTCOME_NO_UPDATE_AVAILABLE -> b
    com.google.common.logging.Vr$VREvent$Eva$CameraFirmwareUpdate$UpdateOutcome UPDATE_OUTCOME_UNKNOWN -> a
    com.google.common.logging.Vr$VREvent$Eva$CameraFirmwareUpdate$UpdateOutcome forNumber(int) -> a
    int getNumber() -> c
    com.google.vr.sdk.deps.bc internalGetVerifier() -> h
com.google.common.logging.Vr$VREvent$Eva$CameraFirmwareUpdate$UpdateOutcome$1 -> a.a.a.a.G:
    com.google.common.logging.Vr$VREvent$Eva$CameraFirmwareUpdate$UpdateOutcome findValueByNumber(int) -> a
    com.google.vr.sdk.deps.ba findValueByNumber(int) -> a
com.google.common.logging.Vr$VREvent$Eva$CameraFirmwareUpdate$UpdateOutcome$UpdateOutcomeVerifier -> a.a.a.a.F$b$a:
    com.google.vr.sdk.deps.bc INSTANCE -> a
    boolean isInRange(int) -> a
com.google.common.logging.Vr$VREvent$Eva$CameraFirmwareUpdateOrBuilder -> a.a.a.a.H:
com.google.common.logging.Vr$VREvent$Eva$CameraInfo$CameraType -> a.a.a.a.J:
    com.google.common.logging.Vr$VREvent$Eva$CameraInfo$CameraType LENOVO -> c
    com.google.common.logging.Vr$VREvent$Eva$CameraInfo$CameraType YI -> d
    com.google.common.logging.Vr$VREvent$Eva$CameraInfo$CameraType UNKNOWN_CAMERA_TYPE -> a
    com.google.vr.sdk.deps.bb internalValueMap -> e
    com.google.common.logging.Vr$VREvent$Eva$CameraInfo$CameraType EMULATOR -> b
    int value -> g
    com.google.common.logging.Vr$VREvent$Eva$CameraInfo$CameraType[] $VALUES -> f
    com.google.common.logging.Vr$VREvent$Eva$CameraInfo$CameraType forNumber(int) -> a
    int getNumber() -> c
com.google.common.logging.Vr$VREvent$Eva$CameraInfo$CameraType$1 -> a.a.a.a.I:
    com.google.common.logging.Vr$VREvent$Eva$CameraInfo$CameraType findValueByNumber(int) -> a
    com.google.vr.sdk.deps.ba findValueByNumber(int) -> a
com.google.common.logging.Vr$VREvent$Eva$CameraStatus -> a.a.a.a.K:
    com.google.common.logging.Vr$VREvent$Eva$CameraStatus DEFAULT_INSTANCE -> e
    com.google.vr.sdk.deps.cp PARSER -> f
    java.lang.Object dynamicMethod(com.google.vr.sdk.deps.av$d,java.lang.Object,java.lang.Object) -> a
    com.google.common.logging.Vr$VREvent$Eva$CameraStatus access$26000() -> s
    com.google.vr.sdk.deps.cp parser() -> t
com.google.common.logging.Vr$VREvent$Eva$CameraStatus$Builder -> a.a.a.a.K$a:
com.google.common.logging.Vr$VREvent$Eva$CameraStatus$TemperatureState -> a.a.a.a.K$b:
    com.google.common.logging.Vr$VREvent$Eva$CameraStatus$TemperatureState TEMPERATURE_STATE_OVERHEATED -> e
    com.google.common.logging.Vr$VREvent$Eva$CameraStatus$TemperatureState TEMPERATURE_STATE_WARNING -> c
    int value -> h
    com.google.common.logging.Vr$VREvent$Eva$CameraStatus$TemperatureState TEMPERATURE_STATE_CRITICAL -> d
    com.google.vr.sdk.deps.bb internalValueMap -> f
    com.google.common.logging.Vr$VREvent$Eva$CameraStatus$TemperatureState[] $VALUES -> g
    com.google.common.logging.Vr$VREvent$Eva$CameraStatus$TemperatureState TEMPERATURE_STATE_UNKNOWN -> a
    com.google.common.logging.Vr$VREvent$Eva$CameraStatus$TemperatureState TEMPERATURE_STATE_OK -> b
    com.google.common.logging.Vr$VREvent$Eva$CameraStatus$TemperatureState forNumber(int) -> a
    int getNumber() -> c
    com.google.vr.sdk.deps.bc internalGetVerifier() -> h
com.google.common.logging.Vr$VREvent$Eva$CameraStatus$TemperatureState$1 -> a.a.a.a.L:
    com.google.common.logging.Vr$VREvent$Eva$CameraStatus$TemperatureState findValueByNumber(int) -> a
    com.google.vr.sdk.deps.ba findValueByNumber(int) -> a
com.google.common.logging.Vr$VREvent$Eva$CameraStatus$TemperatureState$TemperatureStateVerifier -> a.a.a.a.K$b$a:
    com.google.vr.sdk.deps.bc INSTANCE -> a
    boolean isInRange(int) -> a
com.google.common.logging.Vr$VREvent$Eva$CameraStatusOrBuilder -> a.a.a.a.M:
com.google.common.logging.Vr$VREvent$Eva$Capture$CaptureType -> a.a.a.a.O:
    com.google.common.logging.Vr$VREvent$Eva$Capture$CaptureType PHOTO -> c
    com.google.common.logging.Vr$VREvent$Eva$Capture$CaptureType LIVE -> d
    com.google.common.logging.Vr$VREvent$Eva$Capture$CaptureType TIMELAPSE -> e
    int value -> h
    com.google.vr.sdk.deps.bb internalValueMap -> f
    com.google.common.logging.Vr$VREvent$Eva$Capture$CaptureType[] $VALUES -> g
    com.google.common.logging.Vr$VREvent$Eva$Capture$CaptureType UNKNOWN_CAPTURE_TYPE -> a
    com.google.common.logging.Vr$VREvent$Eva$Capture$CaptureType VIDEO -> b
    com.google.common.logging.Vr$VREvent$Eva$Capture$CaptureType forNumber(int) -> a
    int getNumber() -> c
com.google.common.logging.Vr$VREvent$Eva$Capture$CaptureType$1 -> a.a.a.a.N:
    com.google.common.logging.Vr$VREvent$Eva$Capture$CaptureType findValueByNumber(int) -> a
    com.google.vr.sdk.deps.ba findValueByNumber(int) -> a
com.google.common.logging.Vr$VREvent$Eva$Capture$LiveStreamStats -> a.a.a.a.P:
    com.google.vr.sdk.deps.cp PARSER -> f
    com.google.common.logging.Vr$VREvent$Eva$Capture$LiveStreamStats DEFAULT_INSTANCE -> e
    java.lang.Object dynamicMethod(com.google.vr.sdk.deps.av$d,java.lang.Object,java.lang.Object) -> a
    com.google.common.logging.Vr$VREvent$Eva$Capture$LiveStreamStats access$18800() -> s
    com.google.vr.sdk.deps.cp parser() -> t
com.google.common.logging.Vr$VREvent$Eva$Capture$LiveStreamStats$Builder -> a.a.a.a.P$a:
com.google.common.logging.Vr$VREvent$Eva$Capture$LiveStreamStats$LiveStreamError -> a.a.a.a.P$b:
    com.google.common.logging.Vr$VREvent$Eva$Capture$LiveStreamStats$LiveStreamError[] $VALUES -> i
    com.google.common.logging.Vr$VREvent$Eva$Capture$LiveStreamStats$LiveStreamError LIVE_STREAM_ERROR_UNKNOWN -> a
    com.google.common.logging.Vr$VREvent$Eva$Capture$LiveStreamStats$LiveStreamError LIVE_STREAM_ERROR_NO_ERROR -> b
    int value -> j
    com.google.common.logging.Vr$VREvent$Eva$Capture$LiveStreamStats$LiveStreamError LIVE_STREAM_ERROR_SERVER_NOT_REACHABLE -> c
    com.google.vr.sdk.deps.bb internalValueMap -> h
    com.google.common.logging.Vr$VREvent$Eva$Capture$LiveStreamStats$LiveStreamError LIVE_STREAM_ERROR_PROTOCOL_ERROR -> d
    com.google.common.logging.Vr$VREvent$Eva$Capture$LiveStreamStats$LiveStreamError LIVE_STREAM_ERROR_NO_STREAMING_TARGET -> e
    com.google.common.logging.Vr$VREvent$Eva$Capture$LiveStreamStats$LiveStreamError LIVE_STREAM_ERROR_STREAM_ERROR -> f
    com.google.common.logging.Vr$VREvent$Eva$Capture$LiveStreamStats$LiveStreamError LIVE_STREAM_ERROR_CODEC_ERROR -> g
    com.google.common.logging.Vr$VREvent$Eva$Capture$LiveStreamStats$LiveStreamError forNumber(int) -> a
    int getNumber() -> c
    com.google.vr.sdk.deps.bc internalGetVerifier() -> h
com.google.common.logging.Vr$VREvent$Eva$Capture$LiveStreamStats$LiveStreamError$1 -> a.a.a.a.Q:
    com.google.common.logging.Vr$VREvent$Eva$Capture$LiveStreamStats$LiveStreamError findValueByNumber(int) -> a
    com.google.vr.sdk.deps.ba findValueByNumber(int) -> a
com.google.common.logging.Vr$VREvent$Eva$Capture$LiveStreamStats$LiveStreamError$LiveStreamErrorVerifier -> a.a.a.a.P$b$a:
    com.google.vr.sdk.deps.bc INSTANCE -> a
    boolean isInRange(int) -> a
com.google.common.logging.Vr$VREvent$Eva$Capture$LiveStreamStatsOrBuilder -> a.a.a.a.S:
com.google.common.logging.Vr$VREvent$Eva$ExportMedia$Action -> a.a.a.a.U:
    com.google.common.logging.Vr$VREvent$Eva$ExportMedia$Action EXPORT_MEDIA_ACTION_CANCEL -> b
    com.google.common.logging.Vr$VREvent$Eva$ExportMedia$Action EXPORT_MEDIA_ACTION_UNKNOWN -> a
    com.google.common.logging.Vr$VREvent$Eva$ExportMedia$Action[] $VALUES -> f
    com.google.vr.sdk.deps.bb internalValueMap -> e
    int value -> g
    com.google.common.logging.Vr$VREvent$Eva$ExportMedia$Action EXPORT_MEDIA_ACTION_SHARE -> d
    com.google.common.logging.Vr$VREvent$Eva$ExportMedia$Action EXPORT_MEDIA_ACTION_SAVE -> c
    com.google.common.logging.Vr$VREvent$Eva$ExportMedia$Action forNumber(int) -> a
    int getNumber() -> c
com.google.common.logging.Vr$VREvent$Eva$ExportMedia$Action$1 -> a.a.a.a.T:
    com.google.common.logging.Vr$VREvent$Eva$ExportMedia$Action findValueByNumber(int) -> a
    com.google.vr.sdk.deps.ba findValueByNumber(int) -> a
com.google.common.logging.Vr$VREvent$Eva$ExportMedia$FailureType -> a.a.a.a.W:
    com.google.vr.sdk.deps.bb internalValueMap -> e
    int value -> g
    com.google.common.logging.Vr$VREvent$Eva$ExportMedia$FailureType[] $VALUES -> f
    com.google.common.logging.Vr$VREvent$Eva$ExportMedia$FailureType EXPORT_MEDIA_FAILED_UNKNOWN -> a
    com.google.common.logging.Vr$VREvent$Eva$ExportMedia$FailureType EXPORT_MEDIA_INIT_FAILED -> b
    com.google.common.logging.Vr$VREvent$Eva$ExportMedia$FailureType EXPORT_MEDIA_RENDER_ENCODE_FAILED -> c
    com.google.common.logging.Vr$VREvent$Eva$ExportMedia$FailureType EXPORT_MEDIA_SAVE_FAILED -> d
    com.google.common.logging.Vr$VREvent$Eva$ExportMedia$FailureType forNumber(int) -> a
    int getNumber() -> c
com.google.common.logging.Vr$VREvent$Eva$ExportMedia$FailureType$1 -> a.a.a.a.V:
    com.google.common.logging.Vr$VREvent$Eva$ExportMedia$FailureType findValueByNumber(int) -> a
    com.google.vr.sdk.deps.ba findValueByNumber(int) -> a
com.google.common.logging.Vr$VREvent$Eva$ExportMedia$Type -> a.a.a.a.Y:
    com.google.common.logging.Vr$VREvent$Eva$ExportMedia$Type[] $VALUES -> e
    com.google.common.logging.Vr$VREvent$Eva$ExportMedia$Type EXPORT_MEDIA_TYPE_2D_PHOTO -> b
    int value -> f
    com.google.common.logging.Vr$VREvent$Eva$ExportMedia$Type EXPORT_MEDIA_TYPE_UNKNOWN -> a
    com.google.vr.sdk.deps.bb internalValueMap -> d
    com.google.common.logging.Vr$VREvent$Eva$ExportMedia$Type EXPORT_MEDIA_TYPE_WIGGLEGRAM -> c
    com.google.common.logging.Vr$VREvent$Eva$ExportMedia$Type forNumber(int) -> a
    int getNumber() -> c
com.google.common.logging.Vr$VREvent$Eva$ExportMedia$Type$1 -> a.a.a.a.X:
    com.google.common.logging.Vr$VREvent$Eva$ExportMedia$Type findValueByNumber(int) -> a
    com.google.vr.sdk.deps.ba findValueByNumber(int) -> a
com.google.common.logging.Vr$VREvent$Eva$FileTransfer$FileType -> a.a.a.a.aa:
    com.google.common.logging.Vr$VREvent$Eva$FileTransfer$FileType PHOTO -> c
    com.google.common.logging.Vr$VREvent$Eva$FileTransfer$FileType VIDEO -> b
    com.google.common.logging.Vr$VREvent$Eva$FileTransfer$FileType UNKNOWN_TYPE -> a
    com.google.common.logging.Vr$VREvent$Eva$FileTransfer$FileType[] $VALUES -> e
    int value -> f
    com.google.vr.sdk.deps.bb internalValueMap -> d
    com.google.common.logging.Vr$VREvent$Eva$FileTransfer$FileType forNumber(int) -> a
    int getNumber() -> c
com.google.common.logging.Vr$VREvent$Eva$FileTransfer$FileType$1 -> a.a.a.a.Z:
    com.google.common.logging.Vr$VREvent$Eva$FileTransfer$FileType findValueByNumber(int) -> a
    com.google.vr.sdk.deps.ba findValueByNumber(int) -> a
com.google.common.logging.Vr$VREvent$Eva$FileTransfer$Outcome -> a.a.a.a.ca:
    com.google.common.logging.Vr$VREvent$Eva$FileTransfer$Outcome UNKNOWN_OUTCOME -> a
    com.google.common.logging.Vr$VREvent$Eva$FileTransfer$Outcome SUCCESS -> b
    com.google.vr.sdk.deps.bb internalValueMap -> g
    com.google.common.logging.Vr$VREvent$Eva$FileTransfer$Outcome USER_CANCEL -> c
    com.google.common.logging.Vr$VREvent$Eva$FileTransfer$Outcome FAILURE -> d
    com.google.common.logging.Vr$VREvent$Eva$FileTransfer$Outcome[] $VALUES -> h
    com.google.common.logging.Vr$VREvent$Eva$FileTransfer$Outcome FAILURE_TO_EXPORT -> e
    int value -> i
    com.google.common.logging.Vr$VREvent$Eva$FileTransfer$Outcome FAILURE_TO_DOWNLOAD -> f
    com.google.common.logging.Vr$VREvent$Eva$FileTransfer$Outcome forNumber(int) -> a
    int getNumber() -> c
com.google.common.logging.Vr$VREvent$Eva$FileTransfer$Outcome$1 -> a.a.a.a.ba:
    com.google.common.logging.Vr$VREvent$Eva$FileTransfer$Outcome findValueByNumber(int) -> a
    com.google.vr.sdk.deps.ba findValueByNumber(int) -> a
com.google.common.logging.Vr$VREvent$Eva$FileTransfer$TransferInterface -> a.a.a.a.ea:
    com.google.common.logging.Vr$VREvent$Eva$FileTransfer$TransferInterface BLE -> f
    com.google.common.logging.Vr$VREvent$Eva$FileTransfer$TransferInterface SHARED_WIFI -> d
    com.google.vr.sdk.deps.bb internalValueMap -> g
    com.google.common.logging.Vr$VREvent$Eva$FileTransfer$TransferInterface USB -> e
    com.google.common.logging.Vr$VREvent$Eva$FileTransfer$TransferInterface WIFI_DIRECT -> b
    com.google.common.logging.Vr$VREvent$Eva$FileTransfer$TransferInterface CAMERA_WIFI -> c
    int value -> i
    com.google.common.logging.Vr$VREvent$Eva$FileTransfer$TransferInterface UNKNOWN_INTERFACE -> a
    com.google.common.logging.Vr$VREvent$Eva$FileTransfer$TransferInterface[] $VALUES -> h
    com.google.common.logging.Vr$VREvent$Eva$FileTransfer$TransferInterface forNumber(int) -> a
    int getNumber() -> c
com.google.common.logging.Vr$VREvent$Eva$FileTransfer$TransferInterface$1 -> a.a.a.a.da:
    com.google.common.logging.Vr$VREvent$Eva$FileTransfer$TransferInterface findValueByNumber(int) -> a
    com.google.vr.sdk.deps.ba findValueByNumber(int) -> a
com.google.common.logging.Vr$VREvent$Eva$LocalGalleryStats -> a.a.a.a.fa:
    com.google.vr.sdk.deps.cp PARSER -> f
    com.google.common.logging.Vr$VREvent$Eva$LocalGalleryStats DEFAULT_INSTANCE -> e
    java.lang.Object dynamicMethod(com.google.vr.sdk.deps.av$d,java.lang.Object,java.lang.Object) -> a
    com.google.common.logging.Vr$VREvent$Eva$LocalGalleryStats access$16800() -> s
    com.google.vr.sdk.deps.cp parser() -> t
com.google.common.logging.Vr$VREvent$Eva$LocalGalleryStats$Builder -> a.a.a.a.fa$a:
com.google.common.logging.Vr$VREvent$Eva$LocalGalleryStatsOrBuilder -> a.a.a.a.ga:
com.google.common.logging.Vr$VREvent$Eva$Pairing$Outcome -> a.a.a.a.ia:
    com.google.vr.sdk.deps.bb internalValueMap -> e
    com.google.common.logging.Vr$VREvent$Eva$Pairing$Outcome SUCCESS -> b
    com.google.common.logging.Vr$VREvent$Eva$Pairing$Outcome[] $VALUES -> f
    com.google.common.logging.Vr$VREvent$Eva$Pairing$Outcome UNKNOWN_PAIRING_OUTCOME -> a
    int value -> g
    com.google.common.logging.Vr$VREvent$Eva$Pairing$Outcome FAILURE -> d
    com.google.common.logging.Vr$VREvent$Eva$Pairing$Outcome USER_CANCEL -> c
    com.google.common.logging.Vr$VREvent$Eva$Pairing$Outcome forNumber(int) -> a
    int getNumber() -> c
com.google.common.logging.Vr$VREvent$Eva$Pairing$Outcome$1 -> a.a.a.a.ha:
    com.google.common.logging.Vr$VREvent$Eva$Pairing$Outcome findValueByNumber(int) -> a
    com.google.vr.sdk.deps.ba findValueByNumber(int) -> a
com.google.common.logging.Vr$VREvent$Eva$SelectionAction -> a.a.a.a.ka:
    com.google.vr.sdk.deps.cp PARSER -> f
    com.google.common.logging.Vr$VREvent$Eva$SelectionAction DEFAULT_INSTANCE -> e
    java.lang.Object dynamicMethod(com.google.vr.sdk.deps.av$d,java.lang.Object,java.lang.Object) -> a
    com.google.common.logging.Vr$VREvent$Eva$SelectionAction access$35600() -> s
    com.google.vr.sdk.deps.cp parser() -> t
com.google.common.logging.Vr$VREvent$Eva$SelectionAction$ActionEntryPoint -> a.a.a.a.ka$a:
    int value -> h
    com.google.vr.sdk.deps.bb internalValueMap -> f
    com.google.common.logging.Vr$VREvent$Eva$SelectionAction$ActionEntryPoint[] $VALUES -> g
    com.google.common.logging.Vr$VREvent$Eva$SelectionAction$ActionEntryPoint ACTION_ENTRY_POINT_SELECT_TRANSFERRED -> e
    com.google.common.logging.Vr$VREvent$Eva$SelectionAction$ActionEntryPoint ACTION_ENTRY_POINT_SELECT_NEW -> d
    com.google.common.logging.Vr$VREvent$Eva$SelectionAction$ActionEntryPoint ACTION_ENTRY_POINT_SELECT_ALL -> c
    com.google.common.logging.Vr$VREvent$Eva$SelectionAction$ActionEntryPoint ACTION_ENTRY_POINT_SELECT -> b
    com.google.common.logging.Vr$VREvent$Eva$SelectionAction$ActionEntryPoint ACTION_ENTRY_POINT_UNKNOWN -> a
    com.google.common.logging.Vr$VREvent$Eva$SelectionAction$ActionEntryPoint forNumber(int) -> a
    int getNumber() -> c
    com.google.vr.sdk.deps.bc internalGetVerifier() -> h
com.google.common.logging.Vr$VREvent$Eva$SelectionAction$ActionEntryPoint$1 -> a.a.a.a.ja:
    com.google.common.logging.Vr$VREvent$Eva$SelectionAction$ActionEntryPoint findValueByNumber(int) -> a
    com.google.vr.sdk.deps.ba findValueByNumber(int) -> a
com.google.common.logging.Vr$VREvent$Eva$SelectionAction$ActionEntryPoint$ActionEntryPointVerifier -> a.a.a.a.ka$a$a:
    com.google.vr.sdk.deps.bc INSTANCE -> a
    boolean isInRange(int) -> a
com.google.common.logging.Vr$VREvent$Eva$SelectionAction$ActionOutcome -> a.a.a.a.ka$b:
    com.google.common.logging.Vr$VREvent$Eva$SelectionAction$ActionOutcome ACTION_OUTCOME_CANCEL -> e
    com.google.common.logging.Vr$VREvent$Eva$SelectionAction$ActionOutcome ACTION_OUTCOME_DOWNLOAD -> c
    com.google.common.logging.Vr$VREvent$Eva$SelectionAction$ActionOutcome ACTION_OUTCOME_BACKUP -> d
    int value -> h
    com.google.vr.sdk.deps.bb internalValueMap -> f
    com.google.common.logging.Vr$VREvent$Eva$SelectionAction$ActionOutcome[] $VALUES -> g
    com.google.common.logging.Vr$VREvent$Eva$SelectionAction$ActionOutcome ACTION_OUTCOME_UNKNOWN -> a
    com.google.common.logging.Vr$VREvent$Eva$SelectionAction$ActionOutcome ACTION_OUTCOME_DELETE -> b
    com.google.common.logging.Vr$VREvent$Eva$SelectionAction$ActionOutcome forNumber(int) -> a
    int getNumber() -> c
    com.google.vr.sdk.deps.bc internalGetVerifier() -> h
com.google.common.logging.Vr$VREvent$Eva$SelectionAction$ActionOutcome$1 -> a.a.a.a.la:
    com.google.common.logging.Vr$VREvent$Eva$SelectionAction$ActionOutcome findValueByNumber(int) -> a
    com.google.vr.sdk.deps.ba findValueByNumber(int) -> a
com.google.common.logging.Vr$VREvent$Eva$SelectionAction$ActionOutcome$ActionOutcomeVerifier -> a.a.a.a.ka$b$a:
    com.google.vr.sdk.deps.bc INSTANCE -> a
    boolean isInRange(int) -> a
com.google.common.logging.Vr$VREvent$Eva$SelectionAction$Builder -> a.a.a.a.ka$c:
com.google.common.logging.Vr$VREvent$Eva$SelectionActionOrBuilder -> a.a.a.a.ma:
com.google.common.logging.Vr$VREvent$Eva$Share$ShareApp -> a.a.a.a.oa:
    com.google.common.logging.Vr$VREvent$Eva$Share$ShareApp[] $VALUES -> g
    int value -> h
    com.google.vr.sdk.deps.bb internalValueMap -> f
    com.google.common.logging.Vr$VREvent$Eva$Share$ShareApp SHARE_APP_WIGGLEGRAM -> e
    com.google.common.logging.Vr$VREvent$Eva$Share$ShareApp SHARE_APP_2D_EXPORT -> d
    com.google.common.logging.Vr$VREvent$Eva$Share$ShareApp SHARE_APP_UNKNOWN -> a
    com.google.common.logging.Vr$VREvent$Eva$Share$ShareApp SHARE_APP_YOUTUBE -> c
    com.google.common.logging.Vr$VREvent$Eva$Share$ShareApp SHARE_APP_PHOTOS -> b
    com.google.common.logging.Vr$VREvent$Eva$Share$ShareApp forNumber(int) -> a
    int getNumber() -> c
com.google.common.logging.Vr$VREvent$Eva$Share$ShareApp$1 -> a.a.a.a.na:
    com.google.common.logging.Vr$VREvent$Eva$Share$ShareApp findValueByNumber(int) -> a
    com.google.vr.sdk.deps.ba findValueByNumber(int) -> a
com.google.common.logging.Vr$VREvent$Eva$Share$ShareType -> a.a.a.a.qa:
    com.google.common.logging.Vr$VREvent$Eva$Share$ShareType[] $VALUES -> h
    com.google.vr.sdk.deps.bb internalValueMap -> g
    com.google.common.logging.Vr$VREvent$Eva$Share$ShareType SHARE_TYPE_WIGGLEGRAMS -> f
    com.google.common.logging.Vr$VREvent$Eva$Share$ShareType SHARE_TYPE_2D_PHOTO -> e
    int value -> i
    com.google.common.logging.Vr$VREvent$Eva$Share$ShareType SHARE_TYPE_LIVE -> d
    com.google.common.logging.Vr$VREvent$Eva$Share$ShareType SHARE_TYPE_PHOTO -> c
    com.google.common.logging.Vr$VREvent$Eva$Share$ShareType SHARE_TYPE_VIDEO -> b
    com.google.common.logging.Vr$VREvent$Eva$Share$ShareType SHARE_TYPE_UNKNOWN -> a
    com.google.common.logging.Vr$VREvent$Eva$Share$ShareType forNumber(int) -> a
    int getNumber() -> c
com.google.common.logging.Vr$VREvent$Eva$Share$ShareType$1 -> a.a.a.a.pa:
    com.google.common.logging.Vr$VREvent$Eva$Share$ShareType findValueByNumber(int) -> a
    com.google.vr.sdk.deps.ba findValueByNumber(int) -> a
com.google.common.logging.Vr$VREvent$Eva$VideoInfo -> a.a.a.a.ra:
    com.google.vr.sdk.deps.cp PARSER -> f
    com.google.common.logging.Vr$VREvent$Eva$VideoInfo DEFAULT_INSTANCE -> e
    java.lang.Object dynamicMethod(com.google.vr.sdk.deps.av$d,java.lang.Object,java.lang.Object) -> a
    com.google.common.logging.Vr$VREvent$Eva$VideoInfo access$18200() -> s
    com.google.vr.sdk.deps.cp parser() -> t
com.google.common.logging.Vr$VREvent$Eva$VideoInfo$Builder -> a.a.a.a.ra$a:
com.google.common.logging.Vr$VREvent$Eva$VideoInfo$Codec -> a.a.a.a.ra$b:
    com.google.common.logging.Vr$VREvent$Eva$VideoInfo$Codec VP9 -> d
    com.google.common.logging.Vr$VREvent$Eva$VideoInfo$Codec[] $VALUES -> f
    com.google.vr.sdk.deps.bb internalValueMap -> e
    int value -> g
    com.google.common.logging.Vr$VREvent$Eva$VideoInfo$Codec UNKNOWN_CODEC -> a
    com.google.common.logging.Vr$VREvent$Eva$VideoInfo$Codec H264 -> b
    com.google.common.logging.Vr$VREvent$Eva$VideoInfo$Codec H265 -> c
    com.google.common.logging.Vr$VREvent$Eva$VideoInfo$Codec forNumber(int) -> a
    int getNumber() -> c
    com.google.vr.sdk.deps.bc internalGetVerifier() -> h
com.google.common.logging.Vr$VREvent$Eva$VideoInfo$Codec$1 -> a.a.a.a.sa:
    com.google.common.logging.Vr$VREvent$Eva$VideoInfo$Codec findValueByNumber(int) -> a
    com.google.vr.sdk.deps.ba findValueByNumber(int) -> a
com.google.common.logging.Vr$VREvent$Eva$VideoInfo$Codec$CodecVerifier -> a.a.a.a.ra$b$a:
    com.google.vr.sdk.deps.bc INSTANCE -> a
    boolean isInRange(int) -> a
com.google.common.logging.Vr$VREvent$Eva$VideoInfoOrBuilder -> a.a.a.a.ta:
com.google.common.logging.Vr$VREvent$Eva$View$MediaType -> a.a.a.a.va:
    com.google.common.logging.Vr$VREvent$Eva$View$MediaType[] $VALUES -> e
    int value -> f
    com.google.vr.sdk.deps.bb internalValueMap -> d
    com.google.common.logging.Vr$VREvent$Eva$View$MediaType VR_PHOTO -> b
    com.google.common.logging.Vr$VREvent$Eva$View$MediaType VR_VIDEO -> c
    com.google.common.logging.Vr$VREvent$Eva$View$MediaType UNKNOWN_MEDIA_TYPE -> a
    com.google.common.logging.Vr$VREvent$Eva$View$MediaType forNumber(int) -> a
    int getNumber() -> c
com.google.common.logging.Vr$VREvent$Eva$View$MediaType$1 -> a.a.a.a.ua:
    com.google.common.logging.Vr$VREvent$Eva$View$MediaType findValueByNumber(int) -> a
    com.google.vr.sdk.deps.ba findValueByNumber(int) -> a
com.google.common.logging.Vr$VREvent$Eva$View$TriggerAction -> a.a.a.a.xa:
    com.google.common.logging.Vr$VREvent$Eva$View$TriggerAction[] $VALUES -> f
    com.google.vr.sdk.deps.bb internalValueMap -> e
    com.google.common.logging.Vr$VREvent$Eva$View$TriggerAction UNKNOWN_TRIGGER_ACTION -> a
    int value -> g
    com.google.common.logging.Vr$VREvent$Eva$View$TriggerAction ONE_UP_SELECTION -> c
    com.google.common.logging.Vr$VREvent$Eva$View$TriggerAction GALLERY_SELECTION -> b
    com.google.common.logging.Vr$VREvent$Eva$View$TriggerAction VR_ENTRY -> d
    com.google.common.logging.Vr$VREvent$Eva$View$TriggerAction forNumber(int) -> a
    int getNumber() -> c
com.google.common.logging.Vr$VREvent$Eva$View$TriggerAction$1 -> a.a.a.a.wa:
    com.google.common.logging.Vr$VREvent$Eva$View$TriggerAction findValueByNumber(int) -> a
    com.google.vr.sdk.deps.ba findValueByNumber(int) -> a
com.google.common.logging.Vr$VREvent$Eva$View$ViewSource -> a.a.a.a.za:
    com.google.common.logging.Vr$VREvent$Eva$View$ViewSource UNKNOWN_VIEW_SOURCE -> a
    com.google.common.logging.Vr$VREvent$Eva$View$ViewSource[] $VALUES -> f
    com.google.common.logging.Vr$VREvent$Eva$View$ViewSource LOCAL -> b
    com.google.common.logging.Vr$VREvent$Eva$View$ViewSource CAMERA -> c
    com.google.common.logging.Vr$VREvent$Eva$View$ViewSource EXTENSION -> d
    com.google.vr.sdk.deps.bb internalValueMap -> e
    int value -> g
    com.google.common.logging.Vr$VREvent$Eva$View$ViewSource forNumber(int) -> a
    int getNumber() -> c
com.google.common.logging.Vr$VREvent$Eva$View$ViewSource$1 -> a.a.a.a.ya:
    com.google.common.logging.Vr$VREvent$Eva$View$ViewSource findValueByNumber(int) -> a
    com.google.vr.sdk.deps.ba findValueByNumber(int) -> a
com.google.common.logging.Vr$VREvent$Eva$View$ViewType -> a.a.a.a.Ba:
    com.google.common.logging.Vr$VREvent$Eva$View$ViewType[] $VALUES -> f
    com.google.vr.sdk.deps.bb internalValueMap -> e
    int value -> g
    com.google.common.logging.Vr$VREvent$Eva$View$ViewType DAYDREAM -> d
    com.google.common.logging.Vr$VREvent$Eva$View$ViewType CARDBOARD -> c
    com.google.common.logging.Vr$VREvent$Eva$View$ViewType FLAT -> b
    com.google.common.logging.Vr$VREvent$Eva$View$ViewType UNKNOWN_VIEW_TYPE -> a
    com.google.common.logging.Vr$VREvent$Eva$View$ViewType forNumber(int) -> a
    int getNumber() -> c
com.google.common.logging.Vr$VREvent$Eva$View$ViewType$1 -> a.a.a.a.Aa:
    com.google.common.logging.Vr$VREvent$Eva$View$ViewType findValueByNumber(int) -> a
    com.google.vr.sdk.deps.ba findValueByNumber(int) -> a
com.google.common.logging.Vr$VREvent$Eva$WifiSetupSession -> a.a.a.a.Ca:
    com.google.common.logging.Vr$VREvent$Eva$WifiSetupSession DEFAULT_INSTANCE -> e
    com.google.vr.sdk.deps.cp PARSER -> f
    java.lang.Object dynamicMethod(com.google.vr.sdk.deps.av$d,java.lang.Object,java.lang.Object) -> a
    com.google.common.logging.Vr$VREvent$Eva$WifiSetupSession access$29600() -> s
    com.google.vr.sdk.deps.cp parser() -> t
com.google.common.logging.Vr$VREvent$Eva$WifiSetupSession$Builder -> a.a.a.a.Ca$a:
com.google.common.logging.Vr$VREvent$Eva$WifiSetupSession$WifiConnectionAttemptType -> a.a.a.a.Ca$b:
    int value -> f
    com.google.common.logging.Vr$VREvent$Eva$WifiSetupSession$WifiConnectionAttemptType MANUAL_CONNECTION_ATTEMPT_TYPE -> c
    com.google.vr.sdk.deps.bb internalValueMap -> d
    com.google.common.logging.Vr$VREvent$Eva$WifiSetupSession$WifiConnectionAttemptType MANAGED_CONNECTION_ATTEMPT_TYPE -> b
    com.google.common.logging.Vr$VREvent$Eva$WifiSetupSession$WifiConnectionAttemptType UNKNOWN_CONNECTION_ATTEMPT_TYPE -> a
    com.google.common.logging.Vr$VREvent$Eva$WifiSetupSession$WifiConnectionAttemptType[] $VALUES -> e
    com.google.common.logging.Vr$VREvent$Eva$WifiSetupSession$WifiConnectionAttemptType forNumber(int) -> a
    int getNumber() -> c
    com.google.vr.sdk.deps.bc internalGetVerifier() -> h
com.google.common.logging.Vr$VREvent$Eva$WifiSetupSession$WifiConnectionAttemptType$1 -> a.a.a.a.Da:
    com.google.common.logging.Vr$VREvent$Eva$WifiSetupSession$WifiConnectionAttemptType findValueByNumber(int) -> a
    com.google.vr.sdk.deps.ba findValueByNumber(int) -> a
com.google.common.logging.Vr$VREvent$Eva$WifiSetupSession$WifiConnectionAttemptType$WifiConnectionAttemptTypeVerifier -> a.a.a.a.Ca$b$a:
    com.google.vr.sdk.deps.bc INSTANCE -> a
    boolean isInRange(int) -> a
com.google.common.logging.Vr$VREvent$Eva$WifiSetupSession$WifiConnectionType -> a.a.a.a.Ca$c:
    com.google.common.logging.Vr$VREvent$Eva$WifiSetupSession$WifiConnectionType WIFI_DIRECT -> d
    com.google.vr.sdk.deps.bb internalValueMap -> e
    int value -> g
    com.google.common.logging.Vr$VREvent$Eva$WifiSetupSession$WifiConnectionType[] $VALUES -> f
    com.google.common.logging.Vr$VREvent$Eva$WifiSetupSession$WifiConnectionType UNKNOWN_CONNECTION_TYPE -> a
    com.google.common.logging.Vr$VREvent$Eva$WifiSetupSession$WifiConnectionType CAMERA_WIFI -> c
    com.google.common.logging.Vr$VREvent$Eva$WifiSetupSession$WifiConnectionType SHARED_WIFI -> b
    com.google.common.logging.Vr$VREvent$Eva$WifiSetupSession$WifiConnectionType forNumber(int) -> a
    int getNumber() -> c
    com.google.vr.sdk.deps.bc internalGetVerifier() -> h
com.google.common.logging.Vr$VREvent$Eva$WifiSetupSession$WifiConnectionType$1 -> a.a.a.a.Ea:
    com.google.common.logging.Vr$VREvent$Eva$WifiSetupSession$WifiConnectionType findValueByNumber(int) -> a
    com.google.vr.sdk.deps.ba findValueByNumber(int) -> a
com.google.common.logging.Vr$VREvent$Eva$WifiSetupSession$WifiConnectionType$WifiConnectionTypeVerifier -> a.a.a.a.Ca$c$a:
    com.google.vr.sdk.deps.bc INSTANCE -> a
    boolean isInRange(int) -> a
com.google.common.logging.Vr$VREvent$Eva$WifiSetupSessionOrBuilder -> a.a.a.a.Fa:
com.google.common.logging.Vr$VREvent$Eva$WigglegramGeneration$Status -> a.a.a.a.Ha:
    com.google.common.logging.Vr$VREvent$Eva$WigglegramGeneration$Status STATUS_ERROR -> c
    com.google.common.logging.Vr$VREvent$Eva$WigglegramGeneration$Status STATUS_COMPLETE -> b
    com.google.common.logging.Vr$VREvent$Eva$WigglegramGeneration$Status STATUS_UNKNOWN -> a
    int value -> f
    com.google.vr.sdk.deps.bb internalValueMap -> d
    com.google.common.logging.Vr$VREvent$Eva$WigglegramGeneration$Status[] $VALUES -> e
    com.google.common.logging.Vr$VREvent$Eva$WigglegramGeneration$Status forNumber(int) -> a
    int getNumber() -> c
com.google.common.logging.Vr$VREvent$Eva$WigglegramGeneration$Status$1 -> a.a.a.a.Ga:
    com.google.common.logging.Vr$VREvent$Eva$WigglegramGeneration$Status findValueByNumber(int) -> a
    com.google.vr.sdk.deps.ba findValueByNumber(int) -> a
com.google.common.logging.Vr$VREvent$EventSource -> a.a.a.a.Ja:
    com.google.common.logging.Vr$VREvent$EventSource VR_CORE_LOGGING_SERVICE -> c
    com.google.common.logging.Vr$VREvent$EventSource VR_CORE -> b
    com.google.common.logging.Vr$VREvent$EventSource DAYDREAM_HOME -> e
    com.google.common.logging.Vr$VREvent$EventSource CARDBOARD_HOME -> d
    int value -> h
    com.google.vr.sdk.deps.bb internalValueMap -> f
    com.google.common.logging.Vr$VREvent$EventSource[] $VALUES -> g
    com.google.common.logging.Vr$VREvent$EventSource UNKNOWN_EVENT_SOURCE -> a
    com.google.common.logging.Vr$VREvent$EventSource forNumber(int) -> a
    int getNumber() -> c
com.google.common.logging.Vr$VREvent$EventSource$1 -> a.a.a.a.Ia:
    com.google.common.logging.Vr$VREvent$EventSource findValueByNumber(int) -> a
    com.google.vr.sdk.deps.ba findValueByNumber(int) -> a
com.google.common.logging.Vr$VREvent$Expeditions -> a.a.a.a.Ka:
    java.lang.String contentId_ -> g
    com.google.vr.sdk.deps.cp PARSER -> f
    com.google.common.logging.Vr$VREvent$Expeditions DEFAULT_INSTANCE -> e
    java.lang.Object dynamicMethod(com.google.vr.sdk.deps.av$d,java.lang.Object,java.lang.Object) -> a
    com.google.common.logging.Vr$VREvent$Expeditions access$182300() -> s
    com.google.vr.sdk.deps.cp parser() -> t
com.google.common.logging.Vr$VREvent$Expeditions$Builder -> a.a.a.a.Ka$a:
com.google.common.logging.Vr$VREvent$ExpeditionsOrBuilder -> a.a.a.a.La:
com.google.common.logging.Vr$VREvent$GConfigUpdate -> a.a.a.a.Ma:
    com.google.vr.sdk.deps.cp PARSER -> f
    com.google.common.logging.Vr$VREvent$GConfigUpdate DEFAULT_INSTANCE -> e
    com.google.vr.sdk.deps.bi gConfigValue_ -> g
    java.lang.Object dynamicMethod(com.google.vr.sdk.deps.av$d,java.lang.Object,java.lang.Object) -> a
    com.google.common.logging.Vr$VREvent$GConfigUpdate access$154100() -> s
    com.google.vr.sdk.deps.cp parser() -> t
com.google.common.logging.Vr$VREvent$GConfigUpdate$Builder -> a.a.a.a.Ma$a:
com.google.common.logging.Vr$VREvent$GConfigUpdate$GConfigValue -> a.a.a.a.Ma$b:
    java.lang.String gConfigKey_ -> g
    com.google.vr.sdk.deps.cp PARSER -> f
    java.lang.String stringValue_ -> h
    com.google.common.logging.Vr$VREvent$GConfigUpdate$GConfigValue DEFAULT_INSTANCE -> e
    java.lang.Object dynamicMethod(com.google.vr.sdk.deps.av$d,java.lang.Object,java.lang.Object) -> a
    com.google.common.logging.Vr$VREvent$GConfigUpdate$GConfigValue access$153300() -> s
com.google.common.logging.Vr$VREvent$GConfigUpdate$GConfigValue$Builder -> a.a.a.a.Ma$b$a:
com.google.common.logging.Vr$VREvent$GConfigUpdate$GConfigValueOrBuilder -> a.a.a.a.Ma$c:
com.google.common.logging.Vr$VREvent$GConfigUpdateOrBuilder -> a.a.a.a.Na:
com.google.common.logging.Vr$VREvent$HeadTracking$FallBackReason -> a.a.a.a.Pa:
    com.google.common.logging.Vr$VREvent$HeadTracking$FallBackReason DVR_POSE_FLAG_SERVICE_EXCEPTION -> a
    com.google.common.logging.Vr$VREvent$HeadTracking$FallBackReason DVR_POSE_FLAG_FISHEYE_UNDER_EXPOSED -> c
    com.google.vr.sdk.deps.bb internalValueMap -> i
    com.google.common.logging.Vr$VREvent$HeadTracking$FallBackReason DVR_POSE_FLAG_FISHEYE_OVER_EXPOSED -> b
    com.google.common.logging.Vr$VREvent$HeadTracking$FallBackReason DVR_POSE_FLAG_COLOR_UNDER_EXPOSED -> e
    com.google.common.logging.Vr$VREvent$HeadTracking$FallBackReason DVR_POSE_FLAG_COLOR_OVER_EXPOSED -> d
    int value -> k
    com.google.common.logging.Vr$VREvent$HeadTracking$FallBackReason NO_FALLBACK -> g
    com.google.common.logging.Vr$VREvent$HeadTracking$FallBackReason DVR_POSE_FLAG_TOO_FEW_FEATURES_TRACKED -> f
    com.google.common.logging.Vr$VREvent$HeadTracking$FallBackReason ERROR_FALLBACK -> h
    com.google.common.logging.Vr$VREvent$HeadTracking$FallBackReason[] $VALUES -> j
    com.google.common.logging.Vr$VREvent$HeadTracking$FallBackReason forNumber(int) -> a
    int getNumber() -> c
com.google.common.logging.Vr$VREvent$HeadTracking$FallBackReason$1 -> a.a.a.a.Oa:
    com.google.common.logging.Vr$VREvent$HeadTracking$FallBackReason findValueByNumber(int) -> a
    com.google.vr.sdk.deps.ba findValueByNumber(int) -> a
com.google.common.logging.Vr$VREvent$HeadTracking$PeriodicReport$RecenterEvent -> a.a.a.a.Qa:
    com.google.vr.sdk.deps.cp PARSER -> f
    com.google.common.logging.Vr$VREvent$HeadTracking$PeriodicReport$RecenterEvent DEFAULT_INSTANCE -> e
    java.lang.Object dynamicMethod(com.google.vr.sdk.deps.av$d,java.lang.Object,java.lang.Object) -> a
    com.google.common.logging.Vr$VREvent$HeadTracking$PeriodicReport$RecenterEvent access$173800() -> s
    com.google.vr.sdk.deps.cp parser() -> t
com.google.common.logging.Vr$VREvent$HeadTracking$PeriodicReport$RecenterEvent$Builder -> a.a.a.a.Qa$a:
com.google.common.logging.Vr$VREvent$HeadTracking$PeriodicReport$RecenterEventOrBuilder -> a.a.a.a.Ra:
com.google.common.logging.Vr$VREvent$HistogramBucket -> a.a.a.a.Sa:
    com.google.common.logging.Vr$VREvent$HistogramBucket DEFAULT_INSTANCE -> e
    com.google.vr.sdk.deps.cp PARSER -> f
    java.lang.Object dynamicMethod(com.google.vr.sdk.deps.av$d,java.lang.Object,java.lang.Object) -> a
    com.google.common.logging.Vr$VREvent$HistogramBucket access$66900() -> s
    com.google.vr.sdk.deps.cp parser() -> t
com.google.common.logging.Vr$VREvent$HistogramBucket$Builder -> a.a.a.a.Sa$a:
com.google.common.logging.Vr$VREvent$HistogramBucketOrBuilder -> a.a.a.a.Ta:
com.google.common.logging.Vr$VREvent$JumpInspector -> a.a.a.a.Ua:
    com.google.common.logging.Vr$VREvent$JumpInspector DEFAULT_INSTANCE -> e
    com.google.vr.sdk.deps.cp PARSER -> f
    java.lang.Object dynamicMethod(com.google.vr.sdk.deps.av$d,java.lang.Object,java.lang.Object) -> a
    com.google.common.logging.Vr$VREvent$JumpInspector access$166900() -> s
    com.google.vr.sdk.deps.cp parser() -> t
com.google.common.logging.Vr$VREvent$JumpInspector$Builder -> a.a.a.a.Ua$a:
com.google.common.logging.Vr$VREvent$JumpInspectorOrBuilder -> a.a.a.a.Va:
com.google.common.logging.Vr$VREvent$Keyboard -> a.a.a.a.Wa:
    com.google.vr.sdk.deps.cp PARSER -> f
    com.google.common.logging.Vr$VREvent$Keyboard DEFAULT_INSTANCE -> e
    com.google.vr.sdk.deps.bi keyboardEvents_ -> g
    java.lang.Object dynamicMethod(com.google.vr.sdk.deps.av$d,java.lang.Object,java.lang.Object) -> a
    com.google.common.logging.Vr$VREvent$Keyboard access$146900() -> s
    com.google.vr.sdk.deps.cp parser() -> t
com.google.common.logging.Vr$VREvent$Keyboard$Builder -> a.a.a.a.Wa$a:
com.google.common.logging.Vr$VREvent$Keyboard$KeyboardEvent -> a.a.a.a.Wa$b:
    com.google.common.logging.Vr$VREvent$Keyboard$KeyboardEvent DEFAULT_INSTANCE -> e
    com.google.vr.sdk.deps.cp PARSER -> f
    java.lang.String language_ -> i
    java.lang.String layout_ -> j
    com.google.vr.sdk.deps.bi voiceInputLanguages_ -> k
    com.google.vr.sdk.deps.bi enabledLanguages_ -> h
    com.google.vr.sdk.deps.bi systemLanguages_ -> g
    java.lang.Object dynamicMethod(com.google.vr.sdk.deps.av$d,java.lang.Object,java.lang.Object) -> a
    com.google.common.logging.Vr$VREvent$Keyboard$KeyboardEvent access$143000() -> s
com.google.common.logging.Vr$VREvent$Keyboard$KeyboardEvent$Builder -> a.a.a.a.Wa$b$a:
com.google.common.logging.Vr$VREvent$Keyboard$KeyboardEventOrBuilder -> a.a.a.a.Wa$c:
com.google.common.logging.Vr$VREvent$Keyboard$KeyboardEventType -> a.a.a.a.Wa$d:
    com.google.common.logging.Vr$VREvent$Keyboard$KeyboardEventType KEYBOARD_ERROR_NOT_INSTALLED -> l
    com.google.common.logging.Vr$VREvent$Keyboard$KeyboardEventType KEYBOARD_USER_EVENT_CANCEL_VOICE_INPUT -> k
    com.google.common.logging.Vr$VREvent$Keyboard$KeyboardEventType KEYBOARD_USER_EVENT_START_VOICE_INPUT -> j
    com.google.common.logging.Vr$VREvent$Keyboard$KeyboardEventType KEYBOARD_USER_EVENT_CHANGE_LAYOUT -> i
    com.google.common.logging.Vr$VREvent$Keyboard$KeyboardEventType KEYBOARD_USER_EVENT_CHANGE_LANGUAGE -> h
    com.google.common.logging.Vr$VREvent$Keyboard$KeyboardEventType KEYBOARD_USER_EVENT_DISMISS -> g
    com.google.common.logging.Vr$VREvent$Keyboard$KeyboardEventType KEYBOARD_USER_EVENT_RETURN -> f
    com.google.common.logging.Vr$VREvent$Keyboard$KeyboardEventType KEYBOARD_USER_EVENT_DELETE -> e
    com.google.vr.sdk.deps.bb internalValueMap -> s
    com.google.common.logging.Vr$VREvent$Keyboard$KeyboardEventType KEYBOARD_DECODE_EVENT_RECEIVE_SUGGESTION -> r
    com.google.common.logging.Vr$VREvent$Keyboard$KeyboardEventType[] $VALUES -> t
    com.google.common.logging.Vr$VREvent$Keyboard$KeyboardEventType KEYBOARD_DECODE_EVENT_SEND_BACKSPACE -> q
    com.google.common.logging.Vr$VREvent$Keyboard$KeyboardEventType KEYBOARD_DECODE_EVENT_SEND_KEY -> p
    com.google.common.logging.Vr$VREvent$Keyboard$KeyboardEventType KEYBOARD_EVENT_REQUEST_RECORD_AUDIO_PERMISSION -> o
    com.google.common.logging.Vr$VREvent$Keyboard$KeyboardEventType KEYBOARD_EVENT_CONNECTED -> n
    com.google.common.logging.Vr$VREvent$Keyboard$KeyboardEventType KEYBOARD_ERROR_NO_LOCALES -> m
    com.google.common.logging.Vr$VREvent$Keyboard$KeyboardEventType KEYBOARD_USER_EVENT_COMMIT -> d
    com.google.common.logging.Vr$VREvent$Keyboard$KeyboardEventType KEYBOARD_USER_EVENT_HIDE -> c
    com.google.common.logging.Vr$VREvent$Keyboard$KeyboardEventType KEYBOARD_USER_EVENT_SHOW -> b
    com.google.common.logging.Vr$VREvent$Keyboard$KeyboardEventType KEYBOARD_EVENT_UNKNOWN -> a
    int value -> u
    com.google.common.logging.Vr$VREvent$Keyboard$KeyboardEventType forNumber(int) -> a
    int getNumber() -> c
    com.google.vr.sdk.deps.bc internalGetVerifier() -> h
com.google.common.logging.Vr$VREvent$Keyboard$KeyboardEventType$1 -> a.a.a.a.Xa:
    com.google.common.logging.Vr$VREvent$Keyboard$KeyboardEventType findValueByNumber(int) -> a
    com.google.vr.sdk.deps.ba findValueByNumber(int) -> a
com.google.common.logging.Vr$VREvent$Keyboard$KeyboardEventType$KeyboardEventTypeVerifier -> a.a.a.a.Wa$d$a:
    com.google.vr.sdk.deps.bc INSTANCE -> a
    boolean isInRange(int) -> a
com.google.common.logging.Vr$VREvent$Keyboard$KeyboardInputType -> a.a.a.a.Wa$e:
    com.google.common.logging.Vr$VREvent$Keyboard$KeyboardInputType KEYBOARD_INPUT_TYPE_UNKNOWN -> a
    com.google.common.logging.Vr$VREvent$Keyboard$KeyboardInputType KEYBOARD_INPUT_TYPE_DEFAULT -> b
    com.google.vr.sdk.deps.bb internalValueMap -> c
    com.google.common.logging.Vr$VREvent$Keyboard$KeyboardInputType[] $VALUES -> d
    int value -> e
    com.google.common.logging.Vr$VREvent$Keyboard$KeyboardInputType forNumber(int) -> a
    int getNumber() -> c
    com.google.vr.sdk.deps.bc internalGetVerifier() -> h
com.google.common.logging.Vr$VREvent$Keyboard$KeyboardInputType$1 -> a.a.a.a.Ya:
    com.google.common.logging.Vr$VREvent$Keyboard$KeyboardInputType findValueByNumber(int) -> a
    com.google.vr.sdk.deps.ba findValueByNumber(int) -> a
com.google.common.logging.Vr$VREvent$Keyboard$KeyboardInputType$KeyboardInputTypeVerifier -> a.a.a.a.Wa$e$a:
    com.google.vr.sdk.deps.bc INSTANCE -> a
    boolean isInRange(int) -> a
com.google.common.logging.Vr$VREvent$KeyboardOrBuilder -> a.a.a.a.Za:
com.google.common.logging.Vr$VREvent$Launcher -> a.a.a.a._a:
    com.google.common.logging.Vr$VREvent$Launcher DEFAULT_INSTANCE -> e
    com.google.vr.sdk.deps.cp PARSER -> f
    java.lang.Object dynamicMethod(com.google.vr.sdk.deps.av$d,java.lang.Object,java.lang.Object) -> a
    com.google.common.logging.Vr$VREvent$Launcher access$141400() -> s
    com.google.vr.sdk.deps.cp parser() -> t
com.google.common.logging.Vr$VREvent$Launcher$Builder -> a.a.a.a._a$a:
com.google.common.logging.Vr$VREvent$Launcher$NavItem -> a.a.a.a._a$b:
    com.google.common.logging.Vr$VREvent$Launcher$NavItem DISCOVERY -> e
    com.google.common.logging.Vr$VREvent$Launcher$NavItem LIBRARY -> f
    com.google.common.logging.Vr$VREvent$Launcher$NavItem FEEDBACK -> c
    com.google.common.logging.Vr$VREvent$Launcher$NavItem HELP -> d
    com.google.common.logging.Vr$VREvent$Launcher$NavItem UNKNOWN -> a
    int value -> j
    com.google.common.logging.Vr$VREvent$Launcher$NavItem SETTINGS -> b
    com.google.vr.sdk.deps.bb internalValueMap -> h
    com.google.common.logging.Vr$VREvent$Launcher$NavItem[] $VALUES -> i
    com.google.common.logging.Vr$VREvent$Launcher$NavItem WISHLIST -> g
    com.google.common.logging.Vr$VREvent$Launcher$NavItem forNumber(int) -> a
    int getNumber() -> c
    com.google.vr.sdk.deps.bc internalGetVerifier() -> h
com.google.common.logging.Vr$VREvent$Launcher$NavItem$1 -> a.a.a.a.ab:
    com.google.common.logging.Vr$VREvent$Launcher$NavItem findValueByNumber(int) -> a
    com.google.vr.sdk.deps.ba findValueByNumber(int) -> a
com.google.common.logging.Vr$VREvent$Launcher$NavItem$NavItemVerifier -> a.a.a.a._a$b$a:
    com.google.vr.sdk.deps.bc INSTANCE -> a
    boolean isInRange(int) -> a
com.google.common.logging.Vr$VREvent$LauncherOrBuilder -> a.a.a.a.bb:
com.google.common.logging.Vr$VREvent$Lullaby$LoadTime -> a.a.a.a.db:
    com.google.vr.sdk.deps.cp PARSER -> f
    com.google.common.logging.Vr$VREvent$Lullaby$LoadTime DEFAULT_INSTANCE -> e
    java.lang.Object dynamicMethod(com.google.vr.sdk.deps.av$d,java.lang.Object,java.lang.Object) -> a
    com.google.common.logging.Vr$VREvent$Lullaby$LoadTime access$148000() -> s
    com.google.vr.sdk.deps.cp parser() -> t
com.google.common.logging.Vr$VREvent$Lullaby$LoadTime$AssetType -> a.a.a.a.db$a:
    int value -> n
    com.google.common.logging.Vr$VREvent$Lullaby$LoadTime$AssetType PAGE -> b
    com.google.common.logging.Vr$VREvent$Lullaby$LoadTime$AssetType UNKNOWN -> a
    com.google.common.logging.Vr$VREvent$Lullaby$LoadTime$AssetType[] $VALUES -> m
    com.google.vr.sdk.deps.bb internalValueMap -> l
    com.google.common.logging.Vr$VREvent$Lullaby$LoadTime$AssetType TEXTURE_FIFE_WEBP -> k
    com.google.common.logging.Vr$VREvent$Lullaby$LoadTime$AssetType TEXTURE_PNG -> f
    com.google.common.logging.Vr$VREvent$Lullaby$LoadTime$AssetType SOUND_OGG -> e
    com.google.common.logging.Vr$VREvent$Lullaby$LoadTime$AssetType SOUND_WAV -> d
    com.google.common.logging.Vr$VREvent$Lullaby$LoadTime$AssetType TEXT -> c
    com.google.common.logging.Vr$VREvent$Lullaby$LoadTime$AssetType TEXTURE_FIFE_JPEG -> j
    com.google.common.logging.Vr$VREvent$Lullaby$LoadTime$AssetType TEXTURE_FIFE_PNG -> i
    com.google.common.logging.Vr$VREvent$Lullaby$LoadTime$AssetType TEXTURE_WEBP -> h
    com.google.common.logging.Vr$VREvent$Lullaby$LoadTime$AssetType TEXTURE_JPEG -> g
    com.google.common.logging.Vr$VREvent$Lullaby$LoadTime$AssetType forNumber(int) -> a
    int getNumber() -> c
    com.google.vr.sdk.deps.bc internalGetVerifier() -> h
com.google.common.logging.Vr$VREvent$Lullaby$LoadTime$AssetType$1 -> a.a.a.a.cb:
    com.google.common.logging.Vr$VREvent$Lullaby$LoadTime$AssetType findValueByNumber(int) -> a
    com.google.vr.sdk.deps.ba findValueByNumber(int) -> a
com.google.common.logging.Vr$VREvent$Lullaby$LoadTime$AssetType$AssetTypeVerifier -> a.a.a.a.db$a$a:
    com.google.vr.sdk.deps.bc INSTANCE -> a
    boolean isInRange(int) -> a
com.google.common.logging.Vr$VREvent$Lullaby$LoadTime$Builder -> a.a.a.a.db$b:
com.google.common.logging.Vr$VREvent$Lullaby$LoadTimeOrBuilder -> a.a.a.a.eb:
com.google.common.logging.Vr$VREvent$PerformanceStats$RenderTargetSize -> a.a.a.a.fb:
    com.google.vr.sdk.deps.cp PARSER -> f
    com.google.common.logging.Vr$VREvent$PerformanceStats$RenderTargetSize DEFAULT_INSTANCE -> e
    java.lang.Object dynamicMethod(com.google.vr.sdk.deps.av$d,java.lang.Object,java.lang.Object) -> a
    com.google.common.logging.Vr$VREvent$PerformanceStats$RenderTargetSize access$71400() -> s
    com.google.vr.sdk.deps.cp parser() -> t
com.google.common.logging.Vr$VREvent$PerformanceStats$RenderTargetSize$Builder -> a.a.a.a.fb$a:
com.google.common.logging.Vr$VREvent$PerformanceStats$RenderTargetSizeOrBuilder -> a.a.a.a.gb:
com.google.common.logging.Vr$VREvent$PhoneAlignment -> a.a.a.a.hb:
    com.google.common.logging.Vr$VREvent$Vector2 lensOffset_ -> i
    com.google.common.logging.Vr$VREvent$PhoneAlignment DEFAULT_INSTANCE -> e
    com.google.vr.sdk.deps.cp PARSER -> f
    float angleDegrees_ -> j
    int bitField0_ -> g
    com.google.vr.sdk.deps.bi touchLocations_ -> h
    void access$169200(com.google.common.logging.Vr$VREvent$PhoneAlignment,com.google.common.logging.Vr$VREvent$Vector2) -> a
    void access$170300(com.google.common.logging.Vr$VREvent$PhoneAlignment,float) -> a
    void addTouchLocations(com.google.common.logging.Vr$VREvent$Vector2) -> a
    java.lang.Object dynamicMethod(com.google.vr.sdk.deps.av$d,java.lang.Object,java.lang.Object) -> a
    void setAngleDegrees(float) -> a
    void access$169900(com.google.common.logging.Vr$VREvent$PhoneAlignment,com.google.common.logging.Vr$VREvent$Vector2) -> b
    void setLensOffset(com.google.common.logging.Vr$VREvent$Vector2) -> b
    com.google.common.logging.Vr$VREvent$PhoneAlignment access$168900() -> s
    com.google.common.logging.Vr$VREvent$PhoneAlignment$Builder newBuilder() -> t
    com.google.vr.sdk.deps.cp parser() -> u
    void ensureTouchLocationsIsMutable() -> v
com.google.common.logging.Vr$VREvent$PhoneAlignment$Builder -> a.a.a.a.hb$a:
    com.google.common.logging.Vr$VREvent$PhoneAlignment$Builder addTouchLocations(com.google.common.logging.Vr$VREvent$Vector2) -> a
    com.google.common.logging.Vr$VREvent$PhoneAlignment$Builder setAngleDegrees(float) -> a
    com.google.common.logging.Vr$VREvent$PhoneAlignment$Builder setLensOffset(com.google.common.logging.Vr$VREvent$Vector2) -> b
com.google.common.logging.Vr$VREvent$PhoneAlignmentOrBuilder -> a.a.a.a.ib:
com.google.common.logging.Vr$VREvent$Photos -> a.a.a.a.jb:
    com.google.vr.sdk.deps.cp PARSER -> f
    com.google.common.logging.Vr$VREvent$Photos DEFAULT_INSTANCE -> e
    java.lang.Object dynamicMethod(com.google.vr.sdk.deps.av$d,java.lang.Object,java.lang.Object) -> a
    com.google.common.logging.Vr$VREvent$Photos access$14200() -> s
    com.google.vr.sdk.deps.cp parser() -> t
com.google.common.logging.Vr$VREvent$Photos$Builder -> a.a.a.a.jb$a:
com.google.common.logging.Vr$VREvent$PhotosOrBuilder -> a.a.a.a.kb:
com.google.common.logging.Vr$VREvent$QrCodeScan -> a.a.a.a.lb:
    java.lang.String headMountConfigUrl_ -> g
    com.google.vr.sdk.deps.cp PARSER -> f
    com.google.common.logging.Vr$VREvent$QrCodeScan DEFAULT_INSTANCE -> e
    java.lang.Object dynamicMethod(com.google.vr.sdk.deps.av$d,java.lang.Object,java.lang.Object) -> a
    com.google.common.logging.Vr$VREvent$QrCodeScan access$66200() -> s
    com.google.vr.sdk.deps.cp parser() -> t
com.google.common.logging.Vr$VREvent$QrCodeScan$Builder -> a.a.a.a.lb$a:
com.google.common.logging.Vr$VREvent$QrCodeScan$Status -> a.a.a.a.lb$b:
    com.google.common.logging.Vr$VREvent$QrCodeScan$Status[] $VALUES -> f
    com.google.vr.sdk.deps.bb internalValueMap -> e
    com.google.common.logging.Vr$VREvent$QrCodeScan$Status UNKNOWN -> a
    int value -> g
    com.google.common.logging.Vr$VREvent$QrCodeScan$Status UNEXPECTED_FORMAT -> c
    com.google.common.logging.Vr$VREvent$QrCodeScan$Status OK -> b
    com.google.common.logging.Vr$VREvent$QrCodeScan$Status CONNECTION_ERROR -> d
    com.google.common.logging.Vr$VREvent$QrCodeScan$Status forNumber(int) -> a
    int getNumber() -> c
    com.google.vr.sdk.deps.bc internalGetVerifier() -> h
com.google.common.logging.Vr$VREvent$QrCodeScan$Status$1 -> a.a.a.a.mb:
    com.google.common.logging.Vr$VREvent$QrCodeScan$Status findValueByNumber(int) -> a
    com.google.vr.sdk.deps.ba findValueByNumber(int) -> a
com.google.common.logging.Vr$VREvent$QrCodeScan$Status$StatusVerifier -> a.a.a.a.lb$b$a:
    com.google.vr.sdk.deps.bc INSTANCE -> a
    boolean isInRange(int) -> a
com.google.common.logging.Vr$VREvent$QrCodeScanOrBuilder -> a.a.a.a.nb:
com.google.common.logging.Vr$VREvent$Renderer -> a.a.a.a.ob:
    java.lang.String glVendor_ -> g
    com.google.common.logging.Vr$VREvent$Renderer DEFAULT_INSTANCE -> e
    com.google.vr.sdk.deps.cp PARSER -> f
    java.lang.String glVersion_ -> i
    java.lang.String glRenderer_ -> h
    java.lang.Object dynamicMethod(com.google.vr.sdk.deps.av$d,java.lang.Object,java.lang.Object) -> a
    com.google.common.logging.Vr$VREvent$Renderer access$1900() -> s
    com.google.vr.sdk.deps.cp parser() -> t
com.google.common.logging.Vr$VREvent$Renderer$Builder -> a.a.a.a.ob$a:
com.google.common.logging.Vr$VREvent$RendererOrBuilder -> a.a.a.a.pb:
com.google.common.logging.Vr$VREvent$SdkConfigurationParams -> a.a.a.a.qb:
    com.google.common.logging.Vr$VREvent$SdkConfigurationParams$ScreenCaptureConfig screenCaptureConfig_ -> v
    com.google.common.logging.Vr$VREvent$SdkConfigurationParams DEFAULT_INSTANCE -> e
    boolean useOnlineMagnetometerCalibration_ -> n
    com.google.vr.sdk.deps.cp PARSER -> f
    int daydreamImageAlignment_ -> l
    boolean useDeviceIdleDetection_ -> o
    boolean useStationaryBiasCorrection_ -> p
    boolean useMagnetometerInSensorFusion_ -> i
    boolean allowDynamicLibraryLoading_ -> j
    boolean cpuLateLatchingEnabled_ -> k
    boolean enableForcedTrackingCompat_ -> u
    int bitField0_ -> g
    boolean disallowMultiview_ -> w
    boolean dimUiLayer_ -> x
    boolean allowDynamicJavaLibraryLoading_ -> q
    boolean touchOverlayEnabled_ -> r
    boolean allowVrcoreHeadTracking_ -> s
    boolean allowVrcoreCompositing_ -> t
    boolean useDirectModeSensors_ -> y
    boolean allowPassthrough_ -> z
    com.google.common.logging.Vr$VREvent$SdkConfigurationParams$AsyncReprojectionConfig asyncReprojectionConfig_ -> m
    boolean useSystemClockForSensorTimestamps_ -> h
    boolean allowHighPriorityAppRenderThread_ -> A
    boolean hasAsyncReprojectionConfig() -> A
    boolean hasDimUiLayer() -> B
    boolean hasUseDeviceIdleDetection() -> C
    com.google.common.logging.Vr$VREvent$SdkConfigurationParams$Builder newBuilder() -> D
    com.google.vr.sdk.deps.cp parser() -> E
    void access$100100(com.google.common.logging.Vr$VREvent$SdkConfigurationParams,com.google.common.logging.Vr$VREvent$SdkConfigurationParams$AsyncReprojectionConfig) -> a
    void access$100500(com.google.common.logging.Vr$VREvent$SdkConfigurationParams,boolean) -> a
    void access$102500(com.google.common.logging.Vr$VREvent$SdkConfigurationParams,com.google.common.logging.Vr$VREvent$SdkConfigurationParams$ScreenCaptureConfig) -> a
    void access$99900(com.google.common.logging.Vr$VREvent$SdkConfigurationParams,com.google.common.logging.Vr$VREvent$SdkConfigurationParams$DaydreamImageAlignment) -> a
    java.lang.Object dynamicMethod(com.google.vr.sdk.deps.av$d,java.lang.Object,java.lang.Object) -> a
    void setAllowDynamicJavaLibraryLoading(boolean) -> a
    void setAsyncReprojectionConfig(com.google.common.logging.Vr$VREvent$SdkConfigurationParams$AsyncReprojectionConfig) -> a
    void setDaydreamImageAlignment(com.google.common.logging.Vr$VREvent$SdkConfigurationParams$DaydreamImageAlignment) -> a
    void setScreenCaptureConfig(com.google.common.logging.Vr$VREvent$SdkConfigurationParams$ScreenCaptureConfig) -> a
    void access$100700(com.google.common.logging.Vr$VREvent$SdkConfigurationParams,boolean) -> b
    void setAllowDynamicLibraryLoading(boolean) -> b
    void access$100900(com.google.common.logging.Vr$VREvent$SdkConfigurationParams,boolean) -> c
    void setAllowHighPriorityAppRenderThread(boolean) -> c
    void access$101100(com.google.common.logging.Vr$VREvent$SdkConfigurationParams,boolean) -> d
    void setAllowPassthrough(boolean) -> d
    void access$101300(com.google.common.logging.Vr$VREvent$SdkConfigurationParams,boolean) -> e
    void setAllowVrcoreCompositing(boolean) -> e
    void access$101500(com.google.common.logging.Vr$VREvent$SdkConfigurationParams,boolean) -> f
    void setAllowVrcoreHeadTracking(boolean) -> f
    void access$101700(com.google.common.logging.Vr$VREvent$SdkConfigurationParams,boolean) -> g
    void setCpuLateLatchingEnabled(boolean) -> g
    void access$102300(com.google.common.logging.Vr$VREvent$SdkConfigurationParams,boolean) -> h
    void setDimUiLayer(boolean) -> h
    void access$102900(com.google.common.logging.Vr$VREvent$SdkConfigurationParams,boolean) -> i
    void setDisallowMultiview(boolean) -> i
    void access$103100(com.google.common.logging.Vr$VREvent$SdkConfigurationParams,boolean) -> j
    void setEnableForcedTrackingCompat(boolean) -> j
    void access$103300(com.google.common.logging.Vr$VREvent$SdkConfigurationParams,boolean) -> k
    void setTouchOverlayEnabled(boolean) -> k
    void access$103500(com.google.common.logging.Vr$VREvent$SdkConfigurationParams,boolean) -> l
    void setUseDeviceIdleDetection(boolean) -> l
    void access$103700(com.google.common.logging.Vr$VREvent$SdkConfigurationParams,boolean) -> m
    void setUseDirectModeSensors(boolean) -> m
    void access$99100(com.google.common.logging.Vr$VREvent$SdkConfigurationParams,boolean) -> n
    void setUseMagnetometerInSensorFusion(boolean) -> n
    void access$99300(com.google.common.logging.Vr$VREvent$SdkConfigurationParams,boolean) -> o
    void setUseOnlineMagnetometerCalibration(boolean) -> o
    void access$99500(com.google.common.logging.Vr$VREvent$SdkConfigurationParams,boolean) -> p
    void setUseStationaryBiasCorrection(boolean) -> p
    void access$99700(com.google.common.logging.Vr$VREvent$SdkConfigurationParams,boolean) -> q
    void setUseSystemClockForSensorTimestamps(boolean) -> q
    com.google.common.logging.Vr$VREvent$SdkConfigurationParams access$98800() -> s
    boolean getAllowDynamicJavaLibraryLoading() -> t
    com.google.common.logging.Vr$VREvent$SdkConfigurationParams$AsyncReprojectionConfig getAsyncReprojectionConfig() -> u
    com.google.common.logging.Vr$VREvent$SdkConfigurationParams$DaydreamImageAlignment getDaydreamImageAlignment() -> v
    boolean getDimUiLayer() -> w
    boolean getTouchOverlayEnabled() -> x
    boolean getUseDeviceIdleDetection() -> y
    boolean hasAllowDynamicJavaLibraryLoading() -> z
com.google.common.logging.Vr$VREvent$SdkConfigurationParams$AsyncReprojectionConfig -> a.a.a.a.qb$a:
    com.google.common.logging.Vr$VREvent$SdkConfigurationParams$AsyncReprojectionConfig DEFAULT_INSTANCE -> e
    com.google.vr.sdk.deps.cp PARSER -> f
    long flags_ -> h
    int bitField0_ -> g
    java.lang.Object dynamicMethod(com.google.vr.sdk.deps.av$d,java.lang.Object,java.lang.Object) -> a
    com.google.common.logging.Vr$VREvent$SdkConfigurationParams$AsyncReprojectionConfig access$95300() -> s
    com.google.common.logging.Vr$VREvent$SdkConfigurationParams$AsyncReprojectionConfig getDefaultInstance() -> t
    long getFlags() -> u
    boolean hasFlags() -> v
com.google.common.logging.Vr$VREvent$SdkConfigurationParams$AsyncReprojectionConfig$Builder -> a.a.a.a.qb$a$a:
com.google.common.logging.Vr$VREvent$SdkConfigurationParams$AsyncReprojectionConfigOrBuilder -> a.a.a.a.qb$b:
com.google.common.logging.Vr$VREvent$SdkConfigurationParams$Builder -> a.a.a.a.qb$c:
    com.google.common.logging.Vr$VREvent$SdkConfigurationParams$Builder setAllowDynamicJavaLibraryLoading(boolean) -> a
    com.google.common.logging.Vr$VREvent$SdkConfigurationParams$Builder setAsyncReprojectionConfig(com.google.common.logging.Vr$VREvent$SdkConfigurationParams$AsyncReprojectionConfig) -> a
    com.google.common.logging.Vr$VREvent$SdkConfigurationParams$Builder setDaydreamImageAlignment(com.google.common.logging.Vr$VREvent$SdkConfigurationParams$DaydreamImageAlignment) -> a
    com.google.common.logging.Vr$VREvent$SdkConfigurationParams$Builder setScreenCaptureConfig(com.google.common.logging.Vr$VREvent$SdkConfigurationParams$ScreenCaptureConfig) -> a
    com.google.common.logging.Vr$VREvent$SdkConfigurationParams$Builder setAllowDynamicLibraryLoading(boolean) -> b
    com.google.common.logging.Vr$VREvent$SdkConfigurationParams$Builder setAllowHighPriorityAppRenderThread(boolean) -> c
    com.google.common.logging.Vr$VREvent$SdkConfigurationParams$Builder setAllowPassthrough(boolean) -> d
    com.google.common.logging.Vr$VREvent$SdkConfigurationParams$Builder setAllowVrcoreCompositing(boolean) -> e
    com.google.common.logging.Vr$VREvent$SdkConfigurationParams$Builder setAllowVrcoreHeadTracking(boolean) -> f
    com.google.common.logging.Vr$VREvent$SdkConfigurationParams$Builder setCpuLateLatchingEnabled(boolean) -> g
    com.google.common.logging.Vr$VREvent$SdkConfigurationParams$Builder setDimUiLayer(boolean) -> h
    com.google.common.logging.Vr$VREvent$SdkConfigurationParams$Builder setDisallowMultiview(boolean) -> i
    com.google.common.logging.Vr$VREvent$SdkConfigurationParams$Builder setEnableForcedTrackingCompat(boolean) -> j
    com.google.common.logging.Vr$VREvent$SdkConfigurationParams$Builder setTouchOverlayEnabled(boolean) -> k
    com.google.common.logging.Vr$VREvent$SdkConfigurationParams$Builder setUseDeviceIdleDetection(boolean) -> l
    com.google.common.logging.Vr$VREvent$SdkConfigurationParams$Builder setUseDirectModeSensors(boolean) -> m
    com.google.common.logging.Vr$VREvent$SdkConfigurationParams$Builder setUseMagnetometerInSensorFusion(boolean) -> n
    com.google.common.logging.Vr$VREvent$SdkConfigurationParams$Builder setUseOnlineMagnetometerCalibration(boolean) -> o
    com.google.common.logging.Vr$VREvent$SdkConfigurationParams$Builder setUseStationaryBiasCorrection(boolean) -> p
    com.google.common.logging.Vr$VREvent$SdkConfigurationParams$Builder setUseSystemClockForSensorTimestamps(boolean) -> q
com.google.common.logging.Vr$VREvent$SdkConfigurationParams$DaydreamImageAlignment -> a.a.a.a.qb$d:
    com.google.vr.sdk.deps.bb internalValueMap -> e
    com.google.common.logging.Vr$VREvent$SdkConfigurationParams$DaydreamImageAlignment ENABLED_WITH_MEDIAN_FILTER -> d
    int value -> g
    com.google.common.logging.Vr$VREvent$SdkConfigurationParams$DaydreamImageAlignment DISABLED -> b
    com.google.common.logging.Vr$VREvent$SdkConfigurationParams$DaydreamImageAlignment ENABLED_NO_FILTERING -> c
    com.google.common.logging.Vr$VREvent$SdkConfigurationParams$DaydreamImageAlignment UNKNOWN_ALIGNMENT -> a
    com.google.common.logging.Vr$VREvent$SdkConfigurationParams$DaydreamImageAlignment[] $VALUES -> f
    com.google.common.logging.Vr$VREvent$SdkConfigurationParams$DaydreamImageAlignment forNumber(int) -> a
    int getNumber() -> c
    com.google.vr.sdk.deps.bc internalGetVerifier() -> h
com.google.common.logging.Vr$VREvent$SdkConfigurationParams$DaydreamImageAlignment$1 -> a.a.a.a.rb:
    com.google.common.logging.Vr$VREvent$SdkConfigurationParams$DaydreamImageAlignment findValueByNumber(int) -> a
    com.google.vr.sdk.deps.ba findValueByNumber(int) -> a
com.google.common.logging.Vr$VREvent$SdkConfigurationParams$DaydreamImageAlignment$DaydreamImageAlignmentVerifier -> a.a.a.a.qb$d$a:
    com.google.vr.sdk.deps.bc INSTANCE -> a
    boolean isInRange(int) -> a
com.google.common.logging.Vr$VREvent$SdkConfigurationParams$ScreenCaptureConfig -> a.a.a.a.qb$e:
    com.google.common.logging.Vr$VREvent$SdkConfigurationParams$ScreenCaptureConfig DEFAULT_INSTANCE -> e
    com.google.vr.sdk.deps.cp PARSER -> f
    java.lang.Object dynamicMethod(com.google.vr.sdk.deps.av$d,java.lang.Object,java.lang.Object) -> a
    com.google.common.logging.Vr$VREvent$SdkConfigurationParams$ScreenCaptureConfig access$98000() -> s
    com.google.common.logging.Vr$VREvent$SdkConfigurationParams$ScreenCaptureConfig getDefaultInstance() -> t
com.google.common.logging.Vr$VREvent$SdkConfigurationParams$ScreenCaptureConfig$Builder -> a.a.a.a.qb$e$a:
com.google.common.logging.Vr$VREvent$SdkConfigurationParams$ScreenCaptureConfigOrBuilder -> a.a.a.a.qb$f:
com.google.common.logging.Vr$VREvent$SdkConfigurationParamsOrBuilder -> a.a.a.a.sb:
com.google.common.logging.Vr$VREvent$SensorStats -> a.a.a.a.tb:
    com.google.vr.sdk.deps.cp PARSER -> f
    com.google.common.logging.Vr$VREvent$SensorStats DEFAULT_INSTANCE -> e
    java.lang.Object dynamicMethod(com.google.vr.sdk.deps.av$d,java.lang.Object,java.lang.Object) -> a
    com.google.common.logging.Vr$VREvent$SensorStats access$87000() -> s
    com.google.vr.sdk.deps.cp parser() -> t
com.google.common.logging.Vr$VREvent$SensorStats$Builder -> a.a.a.a.tb$a:
com.google.common.logging.Vr$VREvent$SensorStatsOrBuilder -> a.a.a.a.ub:
com.google.common.logging.Vr$VREvent$StandaloneHeadset$HeadSetOnOffStats -> a.a.a.a.vb:
    com.google.vr.sdk.deps.cp PARSER -> f
    com.google.common.logging.Vr$VREvent$StandaloneHeadset$HeadSetOnOffStats DEFAULT_INSTANCE -> e
    java.lang.Object dynamicMethod(com.google.vr.sdk.deps.av$d,java.lang.Object,java.lang.Object) -> a
    com.google.common.logging.Vr$VREvent$StandaloneHeadset$HeadSetOnOffStats access$184400() -> s
    com.google.vr.sdk.deps.cp parser() -> t
com.google.common.logging.Vr$VREvent$StandaloneHeadset$HeadSetOnOffStats$Builder -> a.a.a.a.vb$a:
com.google.common.logging.Vr$VREvent$StandaloneHeadset$HeadSetOnOffStatsOrBuilder -> a.a.a.a.wb:
com.google.common.logging.Vr$VREvent$StandaloneHeadset$IdleMetrics -> a.a.a.a.yb:
    com.google.vr.sdk.deps.cp PARSER -> g
    com.google.vr.sdk.deps.be idleReason_ -> h
    com.google.common.logging.Vr$VREvent$StandaloneHeadset$IdleMetrics DEFAULT_INSTANCE -> f
    com.google.vr.sdk.deps.bg idleReason_converter_ -> e
    java.lang.Object dynamicMethod(com.google.vr.sdk.deps.av$d,java.lang.Object,java.lang.Object) -> a
    com.google.common.logging.Vr$VREvent$StandaloneHeadset$IdleMetrics access$184800() -> s
    com.google.vr.sdk.deps.cp parser() -> t
com.google.common.logging.Vr$VREvent$StandaloneHeadset$IdleMetrics$1 -> a.a.a.a.xb:
com.google.common.logging.Vr$VREvent$StandaloneHeadset$IdleMetrics$Builder -> a.a.a.a.yb$a:
com.google.common.logging.Vr$VREvent$StandaloneHeadset$IdleMetrics$IdleReason -> a.a.a.a.yb$b:
    com.google.vr.sdk.deps.bb internalValueMap -> e
    int value -> g
    com.google.common.logging.Vr$VREvent$StandaloneHeadset$IdleMetrics$IdleReason MOTION -> c
    com.google.common.logging.Vr$VREvent$StandaloneHeadset$IdleMetrics$IdleReason CONTROLLER -> d
    com.google.common.logging.Vr$VREvent$StandaloneHeadset$IdleMetrics$IdleReason UNKNOWN_IDLE_REASON -> a
    com.google.common.logging.Vr$VREvent$StandaloneHeadset$IdleMetrics$IdleReason TRACKING -> b
    com.google.common.logging.Vr$VREvent$StandaloneHeadset$IdleMetrics$IdleReason[] $VALUES -> f
    com.google.common.logging.Vr$VREvent$StandaloneHeadset$IdleMetrics$IdleReason forNumber(int) -> a
    int getNumber() -> c
    com.google.vr.sdk.deps.bc internalGetVerifier() -> h
com.google.common.logging.Vr$VREvent$StandaloneHeadset$IdleMetrics$IdleReason$1 -> a.a.a.a.zb:
    com.google.common.logging.Vr$VREvent$StandaloneHeadset$IdleMetrics$IdleReason findValueByNumber(int) -> a
    com.google.vr.sdk.deps.ba findValueByNumber(int) -> a
com.google.common.logging.Vr$VREvent$StandaloneHeadset$IdleMetrics$IdleReason$IdleReasonVerifier -> a.a.a.a.yb$b$a:
    com.google.vr.sdk.deps.bc INSTANCE -> a
    boolean isInRange(int) -> a
com.google.common.logging.Vr$VREvent$StandaloneHeadset$IdleMetrics$ScreenState -> a.a.a.a.yb$c:
    com.google.common.logging.Vr$VREvent$StandaloneHeadset$IdleMetrics$ScreenState[] $VALUES -> e
    int value -> f
    com.google.common.logging.Vr$VREvent$StandaloneHeadset$IdleMetrics$ScreenState UNKNOWN_SCREEN_STATE -> a
    com.google.vr.sdk.deps.bb internalValueMap -> d
    com.google.common.logging.Vr$VREvent$StandaloneHeadset$IdleMetrics$ScreenState ON -> b
    com.google.common.logging.Vr$VREvent$StandaloneHeadset$IdleMetrics$ScreenState OFF -> c
    com.google.common.logging.Vr$VREvent$StandaloneHeadset$IdleMetrics$ScreenState forNumber(int) -> a
    int getNumber() -> c
    com.google.vr.sdk.deps.bc internalGetVerifier() -> h
com.google.common.logging.Vr$VREvent$StandaloneHeadset$IdleMetrics$ScreenState$1 -> a.a.a.a.Ab:
    com.google.common.logging.Vr$VREvent$StandaloneHeadset$IdleMetrics$ScreenState findValueByNumber(int) -> a
    com.google.vr.sdk.deps.ba findValueByNumber(int) -> a
com.google.common.logging.Vr$VREvent$StandaloneHeadset$IdleMetrics$ScreenState$ScreenStateVerifier -> a.a.a.a.yb$c$a:
    com.google.vr.sdk.deps.bc INSTANCE -> a
    boolean isInRange(int) -> a
com.google.common.logging.Vr$VREvent$StandaloneHeadset$IdleMetricsOrBuilder -> a.a.a.a.Bb:
com.google.common.logging.Vr$VREvent$StandaloneHeadset$MemoryStats -> a.a.a.a.Cb:
    com.google.vr.sdk.deps.cp PARSER -> f
    com.google.common.logging.Vr$VREvent$StandaloneHeadset$MemoryStats DEFAULT_INSTANCE -> e
    java.lang.Object dynamicMethod(com.google.vr.sdk.deps.av$d,java.lang.Object,java.lang.Object) -> a
    com.google.common.logging.Vr$VREvent$StandaloneHeadset$MemoryStats access$183400() -> s
    com.google.vr.sdk.deps.cp parser() -> t
com.google.common.logging.Vr$VREvent$StandaloneHeadset$MemoryStats$Builder -> a.a.a.a.Cb$a:
com.google.common.logging.Vr$VREvent$StandaloneHeadset$MemoryStatsOrBuilder -> a.a.a.a.Db:
com.google.common.logging.Vr$VREvent$StandaloneHeadset$PowerState -> a.a.a.a.Eb:
    com.google.vr.sdk.deps.cp PARSER -> f
    com.google.common.logging.Vr$VREvent$StandaloneHeadset$PowerState DEFAULT_INSTANCE -> e
    java.lang.Object dynamicMethod(com.google.vr.sdk.deps.av$d,java.lang.Object,java.lang.Object) -> a
    com.google.common.logging.Vr$VREvent$StandaloneHeadset$PowerState access$182800() -> s
    com.google.vr.sdk.deps.cp parser() -> t
com.google.common.logging.Vr$VREvent$StandaloneHeadset$PowerState$Builder -> a.a.a.a.Eb$a:
com.google.common.logging.Vr$VREvent$StandaloneHeadset$PowerState$PowerStates -> a.a.a.a.Eb$b:
    com.google.common.logging.Vr$VREvent$StandaloneHeadset$PowerState$PowerStates SUSPEND -> e
    com.google.common.logging.Vr$VREvent$StandaloneHeadset$PowerState$PowerStates APP_STANDBY_PENDING -> c
    int value -> h
    com.google.common.logging.Vr$VREvent$StandaloneHeadset$PowerState$PowerStates APP_STANDBY -> d
    com.google.vr.sdk.deps.bb internalValueMap -> f
    com.google.common.logging.Vr$VREvent$StandaloneHeadset$PowerState$PowerStates UNKNOWN -> a
    com.google.common.logging.Vr$VREvent$StandaloneHeadset$PowerState$PowerStates ACTIVE -> b
    com.google.common.logging.Vr$VREvent$StandaloneHeadset$PowerState$PowerStates[] $VALUES -> g
    com.google.common.logging.Vr$VREvent$StandaloneHeadset$PowerState$PowerStates forNumber(int) -> a
    int getNumber() -> c
    com.google.vr.sdk.deps.bc internalGetVerifier() -> h
com.google.common.logging.Vr$VREvent$StandaloneHeadset$PowerState$PowerStates$1 -> a.a.a.a.Fb:
    com.google.common.logging.Vr$VREvent$StandaloneHeadset$PowerState$PowerStates findValueByNumber(int) -> a
    com.google.vr.sdk.deps.ba findValueByNumber(int) -> a
com.google.common.logging.Vr$VREvent$StandaloneHeadset$PowerState$PowerStates$PowerStatesVerifier -> a.a.a.a.Eb$b$a:
    com.google.vr.sdk.deps.bc INSTANCE -> a
    boolean isInRange(int) -> a
com.google.common.logging.Vr$VREvent$StandaloneHeadset$PowerStateOrBuilder -> a.a.a.a.Gb:
com.google.common.logging.Vr$VREvent$StreetView -> a.a.a.a.Hb:
    com.google.vr.sdk.deps.cp PARSER -> f
    com.google.common.logging.Vr$VREvent$StreetView DEFAULT_INSTANCE -> e
    java.lang.Object dynamicMethod(com.google.vr.sdk.deps.av$d,java.lang.Object,java.lang.Object) -> a
    com.google.common.logging.Vr$VREvent$StreetView access$152300() -> s
    com.google.vr.sdk.deps.cp parser() -> t
com.google.common.logging.Vr$VREvent$StreetView$Builder -> a.a.a.a.Hb$a:
com.google.common.logging.Vr$VREvent$StreetViewOrBuilder -> a.a.a.a.Ib:
com.google.common.logging.Vr$VREvent$TimeSeriesData -> a.a.a.a.Jb:
    com.google.vr.sdk.deps.cp PARSER -> f
    com.google.common.logging.Vr$VREvent$TimeSeriesData DEFAULT_INSTANCE -> e
    com.google.vr.sdk.deps.bi timeIntervalData_ -> g
    java.lang.Object dynamicMethod(com.google.vr.sdk.deps.av$d,java.lang.Object,java.lang.Object) -> a
    com.google.common.logging.Vr$VREvent$TimeSeriesData access$70100() -> s
    com.google.vr.sdk.deps.cp parser() -> t
com.google.common.logging.Vr$VREvent$TimeSeriesData$Builder -> a.a.a.a.Jb$a:
com.google.common.logging.Vr$VREvent$TimeSeriesData$TimeIntervalData -> a.a.a.a.Jb$b:
    com.google.vr.sdk.deps.cp PARSER -> f
    com.google.vr.sdk.deps.bd batteryTemperature_ -> i
    com.google.vr.sdk.deps.bd cpuTemperature_ -> g
    com.google.vr.sdk.deps.bd gpuTemperature_ -> h
    com.google.common.logging.Vr$VREvent$TimeSeriesData$TimeIntervalData DEFAULT_INSTANCE -> e
    java.lang.Object dynamicMethod(com.google.vr.sdk.deps.av$d,java.lang.Object,java.lang.Object) -> a
    com.google.common.logging.Vr$VREvent$TimeSeriesData$TimeIntervalData access$67500() -> s
com.google.common.logging.Vr$VREvent$TimeSeriesData$TimeIntervalData$Builder -> a.a.a.a.Jb$b$a:
com.google.common.logging.Vr$VREvent$TimeSeriesData$TimeIntervalDataOrBuilder -> a.a.a.a.Jb$c:
com.google.common.logging.Vr$VREvent$TimeSeriesDataOrBuilder -> a.a.a.a.Kb:
com.google.common.logging.Vr$VREvent$Vector2 -> a.a.a.a.Lb:
    com.google.vr.sdk.deps.cp PARSER -> f
    float y_ -> i
    com.google.common.logging.Vr$VREvent$Vector2 DEFAULT_INSTANCE -> e
    float x_ -> h
    int bitField0_ -> g
    void access$168400(com.google.common.logging.Vr$VREvent$Vector2,float) -> a
    java.lang.Object dynamicMethod(com.google.vr.sdk.deps.av$d,java.lang.Object,java.lang.Object) -> a
    void setX(float) -> a
    void access$168600(com.google.common.logging.Vr$VREvent$Vector2,float) -> b
    void setY(float) -> b
    com.google.common.logging.Vr$VREvent$Vector2 access$168300() -> s
    com.google.common.logging.Vr$VREvent$Vector2$Builder newBuilder() -> t
com.google.common.logging.Vr$VREvent$Vector2$Builder -> a.a.a.a.Lb$a:
    com.google.common.logging.Vr$VREvent$Vector2$Builder setX(float) -> a
    com.google.common.logging.Vr$VREvent$Vector2$Builder setY(float) -> b
com.google.common.logging.Vr$VREvent$Vector2OrBuilder -> a.a.a.a.Mb:
com.google.common.logging.Vr$VREvent$Vr180Creator -> a.a.a.a.Nb:
    com.google.vr.sdk.deps.cp PARSER -> f
    com.google.common.logging.Vr$VREvent$Vr180Creator DEFAULT_INSTANCE -> e
    java.lang.Object dynamicMethod(com.google.vr.sdk.deps.av$d,java.lang.Object,java.lang.Object) -> a
    com.google.common.logging.Vr$VREvent$Vr180Creator access$57900() -> s
    com.google.vr.sdk.deps.cp parser() -> t
com.google.common.logging.Vr$VREvent$Vr180Creator$Builder -> a.a.a.a.Nb$a:
com.google.common.logging.Vr$VREvent$Vr180CreatorOrBuilder -> a.a.a.a.Ob:
com.google.common.logging.Vr$VREvent$VrCore$CaptureEvent -> a.a.a.a.Pb:
    com.google.vr.sdk.deps.cp PARSER -> f
    com.google.common.logging.Vr$VREvent$VrCore$CaptureEvent DEFAULT_INSTANCE -> e
    java.lang.Object dynamicMethod(com.google.vr.sdk.deps.av$d,java.lang.Object,java.lang.Object) -> a
    com.google.common.logging.Vr$VREvent$VrCore$CaptureEvent access$110900() -> s
    com.google.vr.sdk.deps.cp parser() -> t
com.google.common.logging.Vr$VREvent$VrCore$CaptureEvent$Builder -> a.a.a.a.Pb$a:
com.google.common.logging.Vr$VREvent$VrCore$CaptureEventOrBuilder -> a.a.a.a.Qb:
com.google.common.logging.Vr$VREvent$VrCore$CompositionType -> a.a.a.a.Sb:
    com.google.common.logging.Vr$VREvent$VrCore$CompositionType UNKNOWN_COMPOSITION_TYPE -> a
    com.google.common.logging.Vr$VREvent$VrCore$CompositionType CARDBOARD_COMPOSITION -> b
    com.google.common.logging.Vr$VREvent$VrCore$CompositionType IN_PROCESS_COMPOSITION -> c
    com.google.common.logging.Vr$VREvent$VrCore$CompositionType OUT_OF_PROCESS_COMPOSITION -> d
    com.google.vr.sdk.deps.bb internalValueMap -> e
    com.google.common.logging.Vr$VREvent$VrCore$CompositionType[] $VALUES -> f
    int value -> g
    com.google.common.logging.Vr$VREvent$VrCore$CompositionType forNumber(int) -> a
    int getNumber() -> c
com.google.common.logging.Vr$VREvent$VrCore$CompositionType$1 -> a.a.a.a.Rb:
    com.google.common.logging.Vr$VREvent$VrCore$CompositionType findValueByNumber(int) -> a
    com.google.vr.sdk.deps.ba findValueByNumber(int) -> a
com.google.common.logging.Vr$VREvent$VrCore$Controller$SensorType -> a.a.a.a.Ub:
    com.google.common.logging.Vr$VREvent$VrCore$Controller$SensorType SENSOR_GYRO -> c
    com.google.common.logging.Vr$VREvent$VrCore$Controller$SensorType SENSOR_ACCEL -> b
    com.google.common.logging.Vr$VREvent$VrCore$Controller$SensorType SENSOR_UNKNOWN -> a
    int value -> f
    com.google.vr.sdk.deps.bb internalValueMap -> d
    com.google.common.logging.Vr$VREvent$VrCore$Controller$SensorType[] $VALUES -> e
    com.google.common.logging.Vr$VREvent$VrCore$Controller$SensorType forNumber(int) -> a
    int getNumber() -> c
com.google.common.logging.Vr$VREvent$VrCore$Controller$SensorType$1 -> a.a.a.a.Tb:
    com.google.common.logging.Vr$VREvent$VrCore$Controller$SensorType findValueByNumber(int) -> a
    com.google.vr.sdk.deps.ba findValueByNumber(int) -> a
com.google.common.logging.Vr$VREvent$VrCore$DashboardEvent -> a.a.a.a.Vb:
    java.lang.String sessionId_ -> g
    com.google.vr.sdk.deps.cp PARSER -> f
    com.google.common.logging.Vr$VREvent$VrCore$DashboardEvent DEFAULT_INSTANCE -> e
    java.lang.Object dynamicMethod(com.google.vr.sdk.deps.av$d,java.lang.Object,java.lang.Object) -> a
    com.google.common.logging.Vr$VREvent$VrCore$DashboardEvent access$108800() -> s
    com.google.vr.sdk.deps.cp parser() -> t
com.google.common.logging.Vr$VREvent$VrCore$DashboardEvent$Builder -> a.a.a.a.Vb$a:
com.google.common.logging.Vr$VREvent$VrCore$DashboardEvent$DashboardEventType -> a.a.a.a.Vb$b:
    com.google.common.logging.Vr$VREvent$VrCore$DashboardEvent$DashboardEventType DASHBOARD_DISMISSED -> d
    com.google.common.logging.Vr$VREvent$VrCore$DashboardEvent$DashboardEventType DASHBOARD_STARTED -> b
    com.google.common.logging.Vr$VREvent$VrCore$DashboardEvent$DashboardEventType DASHBOARD_RENDERED -> c
    com.google.vr.sdk.deps.bb internalValueMap -> e
    int value -> g
    com.google.common.logging.Vr$VREvent$VrCore$DashboardEvent$DashboardEventType[] $VALUES -> f
    com.google.common.logging.Vr$VREvent$VrCore$DashboardEvent$DashboardEventType UNKNOWN -> a
    com.google.common.logging.Vr$VREvent$VrCore$DashboardEvent$DashboardEventType forNumber(int) -> a
    int getNumber() -> c
    com.google.vr.sdk.deps.bc internalGetVerifier() -> h
com.google.common.logging.Vr$VREvent$VrCore$DashboardEvent$DashboardEventType$1 -> a.a.a.a.Wb:
    com.google.common.logging.Vr$VREvent$VrCore$DashboardEvent$DashboardEventType findValueByNumber(int) -> a
    com.google.vr.sdk.deps.ba findValueByNumber(int) -> a
com.google.common.logging.Vr$VREvent$VrCore$DashboardEvent$DashboardEventType$DashboardEventTypeVerifier -> a.a.a.a.Vb$b$a:
    com.google.vr.sdk.deps.bc INSTANCE -> a
    boolean isInRange(int) -> a
com.google.common.logging.Vr$VREvent$VrCore$DashboardEventOrBuilder -> a.a.a.a.Xb:
com.google.common.logging.Vr$VREvent$VrCore$LockScreenEvent -> a.a.a.a.Yb:
    com.google.common.logging.Vr$VREvent$VrCore$LockScreenEvent DEFAULT_INSTANCE -> e
    com.google.vr.sdk.deps.cp PARSER -> f
    java.lang.Object dynamicMethod(com.google.vr.sdk.deps.av$d,java.lang.Object,java.lang.Object) -> a
    com.google.common.logging.Vr$VREvent$VrCore$LockScreenEvent access$111300() -> s
    com.google.vr.sdk.deps.cp parser() -> t
com.google.common.logging.Vr$VREvent$VrCore$LockScreenEvent$Builder -> a.a.a.a.Yb$a:
com.google.common.logging.Vr$VREvent$VrCore$LockScreenEvent$LockScreenEventType -> a.a.a.a.Yb$b:
    com.google.common.logging.Vr$VREvent$VrCore$LockScreenEvent$LockScreenEventType LOCK_SCREEN_EVENT_UNKNOWN -> a
    com.google.common.logging.Vr$VREvent$VrCore$LockScreenEvent$LockScreenEventType LOCK_SCREEN_EVENT_UNLOCKED -> c
    com.google.common.logging.Vr$VREvent$VrCore$LockScreenEvent$LockScreenEventType LOCK_SCREEN_EVENT_SHOWN -> b
    com.google.common.logging.Vr$VREvent$VrCore$LockScreenEvent$LockScreenEventType[] $VALUES -> e
    int value -> f
    com.google.vr.sdk.deps.bb internalValueMap -> d
    com.google.common.logging.Vr$VREvent$VrCore$LockScreenEvent$LockScreenEventType forNumber(int) -> a
    int getNumber() -> c
    com.google.vr.sdk.deps.bc internalGetVerifier() -> h
com.google.common.logging.Vr$VREvent$VrCore$LockScreenEvent$LockScreenEventType$1 -> a.a.a.a.Zb:
    com.google.common.logging.Vr$VREvent$VrCore$LockScreenEvent$LockScreenEventType findValueByNumber(int) -> a
    com.google.vr.sdk.deps.ba findValueByNumber(int) -> a
com.google.common.logging.Vr$VREvent$VrCore$LockScreenEvent$LockScreenEventType$LockScreenEventTypeVerifier -> a.a.a.a.Yb$b$a:
    com.google.vr.sdk.deps.bc INSTANCE -> a
    boolean isInRange(int) -> a
com.google.common.logging.Vr$VREvent$VrCore$LockScreenEventOrBuilder -> a.a.a.a._b:
com.google.common.logging.Vr$VREvent$VrCore$Permission -> a.a.a.a.bc:
    com.google.common.logging.Vr$VREvent$VrCore$Permission ACCESS_NOTIFICATION_POLICY -> i
    int value -> l
    com.google.vr.sdk.deps.bb internalValueMap -> j
    com.google.common.logging.Vr$VREvent$VrCore$Permission WRITE_EXTERNAL_STORAGE -> e
    com.google.common.logging.Vr$VREvent$VrCore$Permission SYSTEM_ALERT_WINDOW -> f
    com.google.common.logging.Vr$VREvent$VrCore$Permission BIND_NOTIFICATION_LISTENER_SERVICE -> g
    com.google.common.logging.Vr$VREvent$VrCore$Permission BIND_CONDITION_PROVIDER_SERVICE -> h
    com.google.common.logging.Vr$VREvent$VrCore$Permission UNKNOWN_PERMISSION -> a
    com.google.common.logging.Vr$VREvent$VrCore$Permission[] $VALUES -> k
    com.google.common.logging.Vr$VREvent$VrCore$Permission ACCESS_COARSE_LOCATION -> b
    com.google.common.logging.Vr$VREvent$VrCore$Permission CAMERA -> c
    com.google.common.logging.Vr$VREvent$VrCore$Permission READ_EXTERNAL_STORAGE -> d
    com.google.common.logging.Vr$VREvent$VrCore$Permission forNumber(int) -> a
    int getNumber() -> c
com.google.common.logging.Vr$VREvent$VrCore$Permission$1 -> a.a.a.a.ac:
    com.google.common.logging.Vr$VREvent$VrCore$Permission findValueByNumber(int) -> a
    com.google.vr.sdk.deps.ba findValueByNumber(int) -> a
com.google.common.logging.Vr$VREvent$VrHome -> a.a.a.a.cc:
    com.google.vr.sdk.deps.cp PARSER -> f
    com.google.common.logging.Vr$VREvent$VrHome DEFAULT_INSTANCE -> e
    java.lang.Object dynamicMethod(com.google.vr.sdk.deps.av$d,java.lang.Object,java.lang.Object) -> a
    com.google.common.logging.Vr$VREvent$VrHome access$64400() -> s
    com.google.vr.sdk.deps.cp parser() -> t
com.google.common.logging.Vr$VREvent$VrHome$Builder -> a.a.a.a.cc$a:
com.google.common.logging.Vr$VREvent$VrHomeOrBuilder -> a.a.a.a.dc:
com.google.common.logging.Vr$VREvent$VrStreaming -> a.a.a.a.ec:
    com.google.vr.sdk.deps.cp PARSER -> f
    com.google.common.logging.Vr$VREvent$VrStreaming DEFAULT_INSTANCE -> e
    com.google.vr.sdk.deps.bi frame_ -> g
    java.lang.Object dynamicMethod(com.google.vr.sdk.deps.av$d,java.lang.Object,java.lang.Object) -> a
    com.google.common.logging.Vr$VREvent$VrStreaming access$172300() -> s
    com.google.vr.sdk.deps.cp parser() -> t
com.google.common.logging.Vr$VREvent$VrStreaming$Builder -> a.a.a.a.ec$a:
com.google.common.logging.Vr$VREvent$VrStreaming$Frame -> a.a.a.a.ec$b:
    com.google.common.logging.Vr$VREvent$VrStreaming$Frame DEFAULT_INSTANCE -> e
    com.google.vr.sdk.deps.cp PARSER -> f
    java.lang.Object dynamicMethod(com.google.vr.sdk.deps.av$d,java.lang.Object,java.lang.Object) -> a
    com.google.common.logging.Vr$VREvent$VrStreaming$Frame access$171100() -> s
com.google.common.logging.Vr$VREvent$VrStreaming$Frame$Builder -> a.a.a.a.ec$b$a:
com.google.common.logging.Vr$VREvent$VrStreaming$FrameOrBuilder -> a.a.a.a.ec$c:
com.google.common.logging.Vr$VREvent$VrStreamingOrBuilder -> a.a.a.a.fc:
com.google.common.logging.VrBaseOuterClass$1 -> a.a.a.a.gc:
    int[] $SwitchMap$com$google$protobuf$GeneratedMessageLite$MethodToInvoke -> a
com.google.common.logging.VrBaseOuterClass$VrBase$HeadMount -> a.a.a.a.hc:
    java.lang.String vendor_ -> g
    com.google.vr.sdk.deps.cp PARSER -> f
    java.lang.String model_ -> h
    com.google.common.logging.VrBaseOuterClass$VrBase$HeadMount DEFAULT_INSTANCE -> e
    java.lang.Object dynamicMethod(com.google.vr.sdk.deps.av$d,java.lang.Object,java.lang.Object) -> a
    com.google.common.logging.VrBaseOuterClass$VrBase$HeadMount access$000() -> s
    com.google.vr.sdk.deps.cp parser() -> t
com.google.common.logging.VrBaseOuterClass$VrBase$HeadMount$Builder -> a.a.a.a.hc$a:
com.google.common.logging.VrBaseOuterClass$VrBase$HeadMountOrBuilder -> a.a.a.a.ic:
com.google.common.logging.nano.Vr$VREvent -> a.a.a.a.a.a:
    com.google.common.logging.Vr$VREvent$EventSource eventSource -> c
    com.google.common.logging.Vr$VREvent$Keyboard keyboard -> t
    com.google.common.logging.Vr$VREvent$Renderer renderer -> u
    com.google.common.logging.Vr$VREvent$VrHome vrHome -> y
    com.google.common.logging.Vr$VREvent$StreetView streetView -> w
    com.google.common.logging.nano.Vr$VREvent$HeadTracking headTracking -> F
    com.google.common.logging.Vr$VREvent$SensorStats sensorStats -> n
    java.lang.Long durationMs -> g
    com.google.common.logging.nano.Vr$VREvent$Lullaby lullaby -> v
    com.google.common.logging.Vr$VREvent$Application[] installedVrApplications -> h
    com.google.common.logging.Vr$VREvent$VrStreaming vrStreaming -> D
    com.google.common.logging.Vr$VREvent$Vr180Creator vr180Creator -> I
    com.google.common.logging.nano.Vr$VREvent$LoggingOptInState loggingOptInState -> d
    com.google.common.logging.nano.Vr$VREvent$PerformanceStats performanceStats -> m
    com.google.common.logging.Vr$VREvent$PhoneAlignment phoneAlignment -> C
    com.google.common.logging.Vr$VREvent$QrCodeScan qrCodeScan -> j
    com.google.common.logging.Vr$VREvent$EarthVr earthVr -> r
    com.google.common.logging.Vr$VREvent$EmbedVrWidget embedVrWidget -> p
    com.google.common.logging.nano.Vr$VREvent$StandaloneHeadset standaloneHeadset -> G
    com.google.common.logging.Vr$VREvent$Launcher launcher -> s
    com.google.common.logging.Vr$VREvent$Photos photos -> x
    com.google.common.logging.nano.Vr$VREvent$VrCore vrCore -> q
    java.lang.String cohort -> k
    com.google.common.logging.Vr$VREvent$Expeditions expeditions -> E
    com.google.common.logging.Vr$VREvent$GConfigUpdate gConfigUpdate -> A
    com.google.common.logging.Vr$VREvent$SdkConfigurationParams sdkConfiguration -> z
    com.google.common.logging.Vr$VREvent$JumpInspector jumpInspector -> B
    com.google.common.logging.Vr$VREvent$Application application -> f
    com.google.common.logging.nano.Vr$VREvent$Eva eva -> H
    com.google.common.logging.nano.Vr$VREvent$Cyclops cyclops -> i
    com.google.common.logging.Vr$VREvent$Bucket lifetimeCountBucket -> l
    com.google.common.logging.VrBaseOuterClass$VrBase$HeadMount headMount -> e
    com.google.common.logging.Vr$VREvent$AudioStats audioStats -> o
    com.google.vr.sdk.deps.es mergeFrom$51666RRD5TJMURR7DHIIUS3IDTQ6UOJLCONMSOBEDSNK6RR4CLI4IRJGELQ44UBKCL17APJ6CLP4SOBEDSTIIJ33DTMIUPRFDTJMOP9FE1P6UT3FC9QMCBREC5N6UBQDCLPN6OB7CL762RJF7C______0(com.google.vr.sdk.deps.et) -> a
    void writeTo(com.google.vr.sdk.deps.ek) -> a
    int computeSerializedSize() -> b
    com.google.common.logging.nano.Vr$VREvent mergeFrom$51666RRD5TJMURR7DHIIUS3IDTQ6UOJLCONMSOBEDSNK6RR4CLI4IRJGELQ44UBKCL17APJ6CLP4SOBEDSTIIJ33DTMIUPRFDTJMOP9FCDNMQRBFDONMORR7CTKMSPPFDPGMSRPFAPP28LII8LR6ARJK7C______0(com.google.vr.sdk.deps.et) -> b
    com.google.common.logging.nano.Vr$VREvent parseFrom(byte[]) -> b
    com.google.common.logging.nano.Vr$VREvent clear() -> f
com.google.common.logging.nano.Vr$VREvent$Cyclops -> a.a.a.a.a.a$a:
    com.google.common.logging.Vr$VREvent$Cyclops$ShareStart shareStart -> f
    com.google.common.logging.Vr$VREvent$Cyclops$Share share -> e
    com.google.common.logging.nano.Vr$VREvent$Cyclops$View view -> d
    com.google.common.logging.nano.Vr$VREvent$Cyclops$Capture capture -> c
    com.google.vr.sdk.deps.es mergeFrom$51666RRD5TJMURR7DHIIUS3IDTQ6UOJLCONMSOBEDSNK6RR4CLI4IRJGELQ44UBKCL17APJ6CLP4SOBEDSTIIJ33DTMIUPRFDTJMOP9FE1P6UT3FC9QMCBREC5N6UBQDCLPN6OB7CL762RJF7C______0(com.google.vr.sdk.deps.et) -> a
    void writeTo(com.google.vr.sdk.deps.ek) -> a
    int computeSerializedSize() -> b
    com.google.common.logging.nano.Vr$VREvent$Cyclops mergeFrom$51666RRD5TJMURR7DHIIUS3IDTQ6UOJLCONMSOBEDSNK6RR4CLI4IRJGELQ44UBKCL17APJ6CLP4SOBEDSTIIJ33DTMIUPRFDTJMOP9FCDNMQRBFDONMORR7CTKMSPPFDPGMSRPFAPP28LII8LR6ARJK4H1NIORCDTO76EO_0(com.google.vr.sdk.deps.et) -> b
    com.google.common.logging.nano.Vr$VREvent$Cyclops clear() -> f
com.google.common.logging.nano.Vr$VREvent$Cyclops$Capture -> a.a.a.a.a.a$a$a:
    java.lang.Boolean withSound -> e
    java.lang.Long processingTimeMs -> i
    java.lang.Boolean captureWarnings -> f
    java.lang.Long compositionTimeMs -> g
    com.google.common.logging.Vr$VREvent$Cyclops$Capture$Outcome outcome -> c
    java.lang.Float angleDegrees -> d
    java.lang.Long captureTimeMs -> h
    com.google.vr.sdk.deps.es mergeFrom$51666RRD5TJMURR7DHIIUS3IDTQ6UOJLCONMSOBEDSNK6RR4CLI4IRJGELQ44UBKCL17APJ6CLP4SOBEDSTIIJ33DTMIUPRFDTJMOP9FE1P6UT3FC9QMCBREC5N6UBQDCLPN6OB7CL762RJF7C______0(com.google.vr.sdk.deps.et) -> a
    void writeTo(com.google.vr.sdk.deps.ek) -> a
    int computeSerializedSize() -> b
    com.google.common.logging.nano.Vr$VREvent$Cyclops$Capture mergeFrom$51666RRD5TJMURR7DHIIUS3IDTQ6UOJLCONMSOBEDSNK6RR4CLI4IRJGELQ44UBKCL17APJ6CLP4SOBEDSTIIJ33DTMIUPRFDTJMOP9FCDNMQRBFDONMORR7CTKMSPPFDPGMSRPFAPP28LII8LR6ARJK4H1NIORCDTO76923C5O78TBICKTG____0(com.google.vr.sdk.deps.et) -> b
    com.google.common.logging.nano.Vr$VREvent$Cyclops$Capture clear() -> f
com.google.common.logging.nano.Vr$VREvent$Cyclops$View -> a.a.a.a.a.a$a$b:
    java.lang.Boolean withSound -> e
    java.lang.Integer numPanos -> f
    com.google.common.logging.Vr$VREvent$Cyclops$View$Orientation orientation -> c
    java.lang.Boolean interaction -> d
    com.google.vr.sdk.deps.es mergeFrom$51666RRD5TJMURR7DHIIUS3IDTQ6UOJLCONMSOBEDSNK6RR4CLI4IRJGELQ44UBKCL17APJ6CLP4SOBEDSTIIJ33DTMIUPRFDTJMOP9FE1P6UT3FC9QMCBREC5N6UBQDCLPN6OB7CL762RJF7C______0(com.google.vr.sdk.deps.et) -> a
    void writeTo(com.google.vr.sdk.deps.ek) -> a
    int computeSerializedSize() -> b
    com.google.common.logging.nano.Vr$VREvent$Cyclops$View mergeFrom$51666RRD5TJMURR7DHIIUS3IDTQ6UOJLCONMSOBEDSNK6RR4CLI4IRJGELQ44UBKCL17APJ6CLP4SOBEDSTIIJ33DTMIUPRFDTJMOP9FCDNMQRBFDONMORR7CTKMSPPFDPGMSRPFAPP28LII8LR6ARJK4H1NIORCDTO7692MD5INEEO_0(com.google.vr.sdk.deps.et) -> b
    com.google.common.logging.nano.Vr$VREvent$Cyclops$View clear() -> f
com.google.common.logging.nano.Vr$VREvent$Eva -> a.a.a.a.a.a$b:
    com.google.common.logging.nano.Vr$VREvent$Eva$View view -> g
    com.google.common.logging.Vr$VREvent$Eva$SelectionAction selectionAction -> q
    com.google.common.logging.nano.Vr$VREvent$Eva$FileTransfer fileTransfer -> f
    com.google.common.logging.nano.Vr$VREvent$Eva$Capture capture -> d
    com.google.common.logging.nano.Vr$VREvent$Eva$ExportMedia exportMedia -> o
    com.google.common.logging.nano.Vr$VREvent$Eva$Delete delete -> l
    com.google.common.logging.Vr$VREvent$Eva$CameraFirmwareUpdate cameraFirmwareUpdate -> p
    com.google.common.logging.nano.Vr$VREvent$Eva$CameraInfo cameraType -> c
    com.google.common.logging.Vr$VREvent$Eva$CameraStatus cameraStatus -> h
    com.google.common.logging.nano.Vr$VREvent$Eva$Pairing pairing -> e
    com.google.common.logging.Vr$VREvent$Eva$LocalGalleryStats localGalleryStats -> m
    com.google.common.logging.nano.Vr$VREvent$Eva$WigglegramGeneration wigglegramGeneration -> n
    com.google.common.logging.Vr$VREvent$Eva$BluetoothSession bluetoothSession -> i
    com.google.common.logging.nano.Vr$VREvent$Eva$Share share -> k
    com.google.common.logging.Vr$VREvent$Eva$WifiSetupSession wifiSetupSession -> j
    com.google.vr.sdk.deps.es mergeFrom$51666RRD5TJMURR7DHIIUS3IDTQ6UOJLCONMSOBEDSNK6RR4CLI4IRJGELQ44UBKCL17APJ6CLP4SOBEDSTIIJ33DTMIUPRFDTJMOP9FE1P6UT3FC9QMCBREC5N6UBQDCLPN6OB7CL762RJF7C______0(com.google.vr.sdk.deps.et) -> a
    void writeTo(com.google.vr.sdk.deps.ek) -> a
    int computeSerializedSize() -> b
    com.google.common.logging.nano.Vr$VREvent$Eva mergeFrom$51666RRD5TJMURR7DHIIUS3IDTQ6UOJLCONMSOBEDSNK6RR4CLI4IRJGELQ44UBKCL17APJ6CLP4SOBEDSTIIJ33DTMIUPRFDTJMOP9FCDNMQRBFDONMORR7CTKMSPPFDPGMSRPFAPP28LII8LR6ARJK4H2NCO9R0(com.google.vr.sdk.deps.et) -> b
    com.google.common.logging.nano.Vr$VREvent$Eva clear() -> f
com.google.common.logging.nano.Vr$VREvent$Eva$CameraInfo -> a.a.a.a.a.a$b$a:
    com.google.common.logging.Vr$VREvent$Eva$CameraInfo$CameraType cameraType -> c
    java.lang.String manufacturerName -> e
    java.lang.String firmwareVersion -> d
    com.google.vr.sdk.deps.es mergeFrom$51666RRD5TJMURR7DHIIUS3IDTQ6UOJLCONMSOBEDSNK6RR4CLI4IRJGELQ44UBKCL17APJ6CLP4SOBEDSTIIJ33DTMIUPRFDTJMOP9FE1P6UT3FC9QMCBREC5N6UBQDCLPN6OB7CL762RJF7C______0(com.google.vr.sdk.deps.et) -> a
    void writeTo(com.google.vr.sdk.deps.ek) -> a
    int computeSerializedSize() -> b
    com.google.common.logging.nano.Vr$VREvent$Eva$CameraInfo mergeFrom$51666RRD5TJMURR7DHIIUS3IDTQ6UOJLCONMSOBEDSNK6RR4CLI4IRJGELQ44UBKCL17APJ6CLP4SOBEDSTIIJ33DTMIUPRFDTJMOP9FCDNMQRBFDONMORR7CTKMSPPFDPGMSRPFAPP28LII8LR6ARJK4H2NCO948DGMQPBIC54MSPJF7C______0(com.google.vr.sdk.deps.et) -> b
    com.google.common.logging.nano.Vr$VREvent$Eva$CameraInfo clear() -> f
com.google.common.logging.nano.Vr$VREvent$Eva$Capture -> a.a.a.a.a.a$b$b:
    com.google.common.logging.Vr$VREvent$Eva$Capture$CaptureType captureType -> c
    com.google.common.logging.Vr$VREvent$Eva$Capture$LiveStreamStats liveStreamStats -> f
    com.google.common.logging.Vr$VREvent$Eva$VideoInfo videoInfo -> e
    com.google.common.logging.nano.Vr$VREvent$Eva$Resolution resolution -> d
    com.google.vr.sdk.deps.es mergeFrom$51666RRD5TJMURR7DHIIUS3IDTQ6UOJLCONMSOBEDSNK6RR4CLI4IRJGELQ44UBKCL17APJ6CLP4SOBEDSTIIJ33DTMIUPRFDTJMOP9FE1P6UT3FC9QMCBREC5N6UBQDCLPN6OB7CL762RJF7C______0(com.google.vr.sdk.deps.et) -> a
    void writeTo(com.google.vr.sdk.deps.ek) -> a
    int computeSerializedSize() -> b
    com.google.common.logging.nano.Vr$VREvent$Eva$Capture mergeFrom$51666RRD5TJMURR7DHIIUS3IDTQ6UOJLCONMSOBEDSNK6RR4CLI4IRJGELQ44UBKCL17APJ6CLP4SOBEDSTIIJ33DTMIUPRFDTJMOP9FCDNMQRBFDONMORR7CTKMSPPFDPGMSRPFAPP28LII8LR6ARJK4H2NCO948DGN0T3LE9IJM___0(com.google.vr.sdk.deps.et) -> b
    com.google.common.logging.nano.Vr$VREvent$Eva$Capture clear() -> f
com.google.common.logging.nano.Vr$VREvent$Eva$Delete -> a.a.a.a.a.a$b$c:
    com.google.common.logging.Vr$VREvent$Eva$View$ViewSource source -> d
    com.google.common.logging.Vr$VREvent$Eva$View$MediaType mediaType -> c
    java.lang.Long sizeBytes -> e
    com.google.vr.sdk.deps.es mergeFrom$51666RRD5TJMURR7DHIIUS3IDTQ6UOJLCONMSOBEDSNK6RR4CLI4IRJGELQ44UBKCL17APJ6CLP4SOBEDSTIIJ33DTMIUPRFDTJMOP9FE1P6UT3FC9QMCBREC5N6UBQDCLPN6OB7CL762RJF7C______0(com.google.vr.sdk.deps.et) -> a
    void writeTo(com.google.vr.sdk.deps.ek) -> a
    int computeSerializedSize() -> b
    com.google.common.logging.nano.Vr$VREvent$Eva$Delete mergeFrom$51666RRD5TJMURR7DHIIUS3IDTQ6UOJLCONMSOBEDSNK6RR4CLI4IRJGELQ44UBKCL17APJ6CLP4SOBEDSTIIJ33DTMIUPRFDTJMOP9FCDNMQRBFDONMORR7CTKMSPPFDPGMSRPFAPP28LII8LR6ARJK4H2NCO948HIMOPBKCKTG____0(com.google.vr.sdk.deps.et) -> b
    com.google.common.logging.nano.Vr$VREvent$Eva$Delete clear() -> f
com.google.common.logging.nano.Vr$VREvent$Eva$ExportMedia -> a.a.a.a.a.a$b$d:
    com.google.common.logging.Vr$VREvent$Eva$ExportMedia$FailureType exportMediaFailureType -> e
    com.google.common.logging.Vr$VREvent$Eva$ExportMedia$Action exportMediaAction -> d
    com.google.common.logging.Vr$VREvent$Eva$ExportMedia$Type exportMediaType -> c
    com.google.vr.sdk.deps.es mergeFrom$51666RRD5TJMURR7DHIIUS3IDTQ6UOJLCONMSOBEDSNK6RR4CLI4IRJGELQ44UBKCL17APJ6CLP4SOBEDSTIIJ33DTMIUPRFDTJMOP9FE1P6UT3FC9QMCBREC5N6UBQDCLPN6OB7CL762RJF7C______0(com.google.vr.sdk.deps.et) -> a
    void writeTo(com.google.vr.sdk.deps.ek) -> a
    int computeSerializedSize() -> b
    com.google.common.logging.nano.Vr$VREvent$Eva$ExportMedia mergeFrom$51666RRD5TJMURR7DHIIUS3IDTQ6UOJLCONMSOBEDSNK6RR4CLI4IRJGELQ44UBKCL17APJ6CLP4SOBEDSTIIJ33DTMIUPRFDTJMOP9FCDNMQRBFDONMORR7CTKMSPPFDPGMSRPFAPP28LII8LR6ARJK4H2NCO948LS70RRIEH6MAP39C4TG____0(com.google.vr.sdk.deps.et) -> b
    com.google.common.logging.nano.Vr$VREvent$Eva$ExportMedia clear() -> f
com.google.common.logging.nano.Vr$VREvent$Eva$FileTransfer -> a.a.a.a.a.a$b$e:
    com.google.common.logging.nano.Vr$VREvent$Eva$Resolution resolution -> h
    com.google.common.logging.Vr$VREvent$Eva$FileTransfer$TransferInterface transferInterface -> d
    com.google.common.logging.Vr$VREvent$Eva$FileTransfer$Outcome outcome -> c
    com.google.common.logging.Vr$VREvent$Eva$VideoInfo videoInfo -> i
    com.google.common.logging.Vr$VREvent$Eva$FileTransfer$FileType fileType -> g
    java.lang.Long fileSize -> e
    java.lang.Long transferTimeMs -> f
    com.google.vr.sdk.deps.es mergeFrom$51666RRD5TJMURR7DHIIUS3IDTQ6UOJLCONMSOBEDSNK6RR4CLI4IRJGELQ44UBKCL17APJ6CLP4SOBEDSTIIJ33DTMIUPRFDTJMOP9FE1P6UT3FC9QMCBREC5N6UBQDCLPN6OB7CL762RJF7C______0(com.google.vr.sdk.deps.et) -> a
    void writeTo(com.google.vr.sdk.deps.ek) -> a
    int computeSerializedSize() -> b
    com.google.common.logging.nano.Vr$VREvent$Eva$FileTransfer mergeFrom$51666RRD5TJMURR7DHIIUS3IDTQ6UOJLCONMSOBEDSNK6RR4CLI4IRJGELQ44UBKCL17APJ6CLP4SOBEDSTIIJ33DTMIUPRFDTJMOP9FCDNMQRBFDONMORR7CTKMSPPFDPGMSRPFAPP28LII8LR6ARJK4H2NCO948PKMOPAKE9GMSSR6CLP3M___0(com.google.vr.sdk.deps.et) -> b
    com.google.common.logging.nano.Vr$VREvent$Eva$FileTransfer clear() -> f
com.google.common.logging.nano.Vr$VREvent$Eva$Pairing -> a.a.a.a.a.a$b$f:
    java.lang.Long pairingFlowTimeMs -> d
    java.lang.Long bluetoothPairingTimeMs -> e
    com.google.common.logging.Vr$VREvent$Eva$Pairing$Outcome outcome -> c
    com.google.vr.sdk.deps.es mergeFrom$51666RRD5TJMURR7DHIIUS3IDTQ6UOJLCONMSOBEDSNK6RR4CLI4IRJGELQ44UBKCL17APJ6CLP4SOBEDSTIIJ33DTMIUPRFDTJMOP9FE1P6UT3FC9QMCBREC5N6UBQDCLPN6OB7CL762RJF7C______0(com.google.vr.sdk.deps.et) -> a
    void writeTo(com.google.vr.sdk.deps.ek) -> a
    int computeSerializedSize() -> b
    com.google.common.logging.nano.Vr$VREvent$Eva$Pairing mergeFrom$51666RRD5TJMURR7DHIIUS3IDTQ6UOJLCONMSOBEDSNK6RR4CLI4IRJGELQ44UBKCL17APJ6CLP4SOBEDSTIIJ33DTMIUPRFDTJMOP9FCDNMQRBFDONMORR7CTKMSPPFDPGMSRPFAPP28LII8LR6ARJK4H2NCO94A1GMISJ9DPJJM___0(com.google.vr.sdk.deps.et) -> b
    com.google.common.logging.nano.Vr$VREvent$Eva$Pairing clear() -> f
com.google.common.logging.nano.Vr$VREvent$Eva$Resolution -> a.a.a.a.a.a$b$g:
    java.lang.Integer width -> c
    java.lang.Integer height -> d
    com.google.vr.sdk.deps.es mergeFrom$51666RRD5TJMURR7DHIIUS3IDTQ6UOJLCONMSOBEDSNK6RR4CLI4IRJGELQ44UBKCL17APJ6CLP4SOBEDSTIIJ33DTMIUPRFDTJMOP9FE1P6UT3FC9QMCBREC5N6UBQDCLPN6OB7CL762RJF7C______0(com.google.vr.sdk.deps.et) -> a
    void writeTo(com.google.vr.sdk.deps.ek) -> a
    int computeSerializedSize() -> b
    com.google.common.logging.nano.Vr$VREvent$Eva$Resolution mergeFrom$51666RRD5TJMURR7DHIIUS3IDTQ6UOJLCONMSOBEDSNK6RR4CLI4IRJGELQ44UBKCL17APJ6CLP4SOBEDSTIIJ33DTMIUPRFDTJMOP9FCDNMQRBFDONMORR7CTKMSPPFDPGMSRPFAPP28LII8LR6ARJK4H2NCO94A9IN6RRCELQ6IRRE7C______0(com.google.vr.sdk.deps.et) -> b
    com.google.common.logging.nano.Vr$VREvent$Eva$Resolution clear() -> f
com.google.common.logging.nano.Vr$VREvent$Eva$Share -> a.a.a.a.a.a$b$h:
    com.google.common.logging.Vr$VREvent$Eva$Share$ShareType shareType -> c
    com.google.common.logging.Vr$VREvent$Eva$Share$ShareApp shareApp -> d
    com.google.common.logging.Vr$VREvent$Eva$VideoInfo videoInfo -> f
    com.google.common.logging.nano.Vr$VREvent$Eva$Resolution resolution -> e
    com.google.vr.sdk.deps.es mergeFrom$51666RRD5TJMURR7DHIIUS3IDTQ6UOJLCONMSOBEDSNK6RR4CLI4IRJGELQ44UBKCL17APJ6CLP4SOBEDSTIIJ33DTMIUPRFDTJMOP9FE1P6UT3FC9QMCBREC5N6UBQDCLPN6OB7CL762RJF7C______0(com.google.vr.sdk.deps.et) -> a
    void writeTo(com.google.vr.sdk.deps.ek) -> a
    int computeSerializedSize() -> b
    com.google.common.logging.nano.Vr$VREvent$Eva$Share mergeFrom$51666RRD5TJMURR7DHIIUS3IDTQ6UOJLCONMSOBEDSNK6RR4CLI4IRJGELQ44UBKCL17APJ6CLP4SOBEDSTIIJ33DTMIUPRFDTJMOP9FCDNMQRBFDONMORR7CTKMSPPFDPGMSRPFAPP28LII8LR6ARJK4H2NCO94ADK62SJ57C______0(com.google.vr.sdk.deps.et) -> b
    com.google.common.logging.nano.Vr$VREvent$Eva$Share clear() -> f
com.google.common.logging.nano.Vr$VREvent$Eva$View -> a.a.a.a.a.a$b$i:
    com.google.common.logging.Vr$VREvent$Eva$View$TriggerAction triggerAction -> j
    java.lang.Integer viewerHeadingRotation -> h
    java.lang.Integer mediaHeadingRotation -> i
    com.google.common.logging.Vr$VREvent$Eva$View$ViewSource viewSource -> g
    com.google.common.logging.Vr$VREvent$Eva$View$ViewType viewType -> d
    com.google.common.logging.Vr$VREvent$Eva$View$MediaType mediaType -> c
    java.lang.Long viewingDurationMs -> e
    java.lang.Long loadingTimeMs -> f
    com.google.vr.sdk.deps.es mergeFrom$51666RRD5TJMURR7DHIIUS3IDTQ6UOJLCONMSOBEDSNK6RR4CLI4IRJGELQ44UBKCL17APJ6CLP4SOBEDSTIIJ33DTMIUPRFDTJMOP9FE1P6UT3FC9QMCBREC5N6UBQDCLPN6OB7CL762RJF7C______0(com.google.vr.sdk.deps.et) -> a
    void writeTo(com.google.vr.sdk.deps.ek) -> a
    int computeSerializedSize() -> b
    com.google.common.logging.nano.Vr$VREvent$Eva$View mergeFrom$51666RRD5TJMURR7DHIIUS3IDTQ6UOJLCONMSOBEDSNK6RR4CLI4IRJGELQ44UBKCL17APJ6CLP4SOBEDSTIIJ33DTMIUPRFDTJMOP9FCDNMQRBFDONMORR7CTKMSPPFDPGMSRPFAPP28LII8LR6ARJK4H2NCO94APKMATPR0(com.google.vr.sdk.deps.et) -> b
    com.google.common.logging.nano.Vr$VREvent$Eva$View clear() -> f
com.google.common.logging.nano.Vr$VREvent$Eva$WigglegramGeneration -> a.a.a.a.a.a$b$j:
    com.google.common.logging.Vr$VREvent$Eva$WigglegramGeneration$Status generationStatus -> c
    java.lang.Long correspondenceMs -> d
    java.lang.Long renderAndEncodeMs -> e
    com.google.vr.sdk.deps.es mergeFrom$51666RRD5TJMURR7DHIIUS3IDTQ6UOJLCONMSOBEDSNK6RR4CLI4IRJGELQ44UBKCL17APJ6CLP4SOBEDSTIIJ33DTMIUPRFDTJMOP9FE1P6UT3FC9QMCBREC5N6UBQDCLPN6OB7CL762RJF7C______0(com.google.vr.sdk.deps.et) -> a
    void writeTo(com.google.vr.sdk.deps.ek) -> a
    int computeSerializedSize() -> b
    com.google.common.logging.nano.Vr$VREvent$Eva$WigglegramGeneration mergeFrom$51666RRD5TJMURR7DHIIUS3IDTQ6UOJLCONMSOBEDSNK6RR4CLI4IRJGELQ44UBKCL17APJ6CLP4SOBEDSTIIJ33DTMIUPRFDTJMOP9FCDNMQRBFDONMORR7CTKMSPPFDPGMSRPFAPP28LII8LR6ARJK4H2NCO94ATKMEPRCCLJN4OBD8TIMSPBIC5Q6IRRE7C______0(com.google.vr.sdk.deps.et) -> b
    com.google.common.logging.nano.Vr$VREvent$Eva$WigglegramGeneration clear() -> f
com.google.common.logging.nano.Vr$VREvent$HeadTracking -> a.a.a.a.a.a$c:
    com.google.common.logging.Vr$VREvent$HeadTracking$FallBackReason sixDofFallbackReason -> d
    com.google.common.logging.nano.Vr$VREvent$HeadTracking$PeriodicReport periodicReport -> h
    java.lang.Float floorHeight -> f
    java.lang.Long headTrackingTimestamp -> g
    com.google.common.logging.nano.Vr$VREvent$HeadTracking$SafetyCylinderConfig safetyCylinderConfig -> i
    int oneof_safety_config_ -> c
    java.lang.Long sixDofFallbackTimestamp -> e
    com.google.vr.sdk.deps.es mergeFrom$51666RRD5TJMURR7DHIIUS3IDTQ6UOJLCONMSOBEDSNK6RR4CLI4IRJGELQ44UBKCL17APJ6CLP4SOBEDSTIIJ33DTMIUPRFDTJMOP9FE1P6UT3FC9QMCBREC5N6UBQDCLPN6OB7CL762RJF7C______0(com.google.vr.sdk.deps.et) -> a
    void writeTo(com.google.vr.sdk.deps.ek) -> a
    int computeSerializedSize() -> b
    com.google.common.logging.nano.Vr$VREvent$HeadTracking mergeFrom$51666RRD5TJMURR7DHIIUS3IDTQ6UOJLCONMSOBEDSNK6RR4CLI4IRJGELQ44UBKCL17APJ6CLP4SOBEDSTIIJ33DTMIUPRFDTJMOP9FCDNMQRBFDONMORR7CTKMSPPFDPGMSRPFAPP28LII8LR6ARJK4H46AOB4AHP62ORBD5N6EEO_0(com.google.vr.sdk.deps.et) -> b
    com.google.common.logging.nano.Vr$VREvent$HeadTracking clear() -> f
com.google.common.logging.nano.Vr$VREvent$HeadTracking$PeriodicReport -> a.a.a.a.a.a$c$a:
    com.google.common.logging.Vr$VREvent$HeadTracking$PeriodicReport$RecenterEvent[] recenterEvent -> e
    java.lang.Long startTimestampMs -> c
    com.google.common.logging.nano.Vr$VREvent$HeadTracking$PeriodicReport$SafeRegionEvent[] safeRegionEvent -> f
    java.lang.Long endTimestampMs -> d
    com.google.vr.sdk.deps.es mergeFrom$51666RRD5TJMURR7DHIIUS3IDTQ6UOJLCONMSOBEDSNK6RR4CLI4IRJGELQ44UBKCL17APJ6CLP4SOBEDSTIIJ33DTMIUPRFDTJMOP9FE1P6UT3FC9QMCBREC5N6UBQDCLPN6OB7CL762RJF7C______0(com.google.vr.sdk.deps.et) -> a
    void writeTo(com.google.vr.sdk.deps.ek) -> a
    int computeSerializedSize() -> b
    com.google.common.logging.nano.Vr$VREvent$HeadTracking$PeriodicReport mergeFrom$51666RRD5TJMURR7DHIIUS3IDTQ6UOJLCONMSOBEDSNK6RR4CLI4IRJGELQ44UBKCL17APJ6CLP4SOBEDSTIIJ33DTMIUPRFDTJMOP9FCDNMQRBFDONMORR7CTKMSPPFDPGMSRPFAPP28LII8LR6ARJK4H46AOB4AHP62ORBD5N6E92GCLP6IRR4D5HL4PBGDTP78EO_0(com.google.vr.sdk.deps.et) -> b
    com.google.common.logging.nano.Vr$VREvent$HeadTracking$PeriodicReport clear() -> f
com.google.common.logging.nano.Vr$VREvent$HeadTracking$PeriodicReport$SafeRegionEvent -> a.a.a.a.a.a$c$a$a:
    java.lang.Boolean entered -> e
    com.google.common.logging.nano.Vr$VREvent$HeadTracking$PeriodicReport$SafeRegionEvent[] _emptyArray -> c
    float[] hrsQuat -> g
    java.lang.Long timestampMs -> d
    float[] hrsPosition -> f
    com.google.vr.sdk.deps.es mergeFrom$51666RRD5TJMURR7DHIIUS3IDTQ6UOJLCONMSOBEDSNK6RR4CLI4IRJGELQ44UBKCL17APJ6CLP4SOBEDSTIIJ33DTMIUPRFDTJMOP9FE1P6UT3FC9QMCBREC5N6UBQDCLPN6OB7CL762RJF7C______0(com.google.vr.sdk.deps.et) -> a
    void writeTo(com.google.vr.sdk.deps.ek) -> a
    int computeSerializedSize() -> b
    com.google.common.logging.nano.Vr$VREvent$HeadTracking$PeriodicReport$SafeRegionEvent mergeFrom$51666RRD5TJMURR7DHIIUS3IDTQ6UOJLCONMSOBEDSNK6RR4CLI4IRJGELQ44UBKCL17APJ6CLP4SOBEDSTIIJ33DTMIUPRFDTJMOP9FCDNMQRBFDONMORR7CTKMSPPFDPGMSRPFAPP28LII8LR6ARJK4H46AOB4AHP62ORBD5N6E92GCLP6IRR4D5HL4PBGDTP7892JC5J6AKJ5CTKMURI5EPIMST1R0(com.google.vr.sdk.deps.et) -> b
    com.google.common.logging.nano.Vr$VREvent$HeadTracking$PeriodicReport$SafeRegionEvent clear() -> f
    com.google.common.logging.nano.Vr$VREvent$HeadTracking$PeriodicReport$SafeRegionEvent[] emptyArray() -> g
com.google.common.logging.nano.Vr$VREvent$HeadTracking$SafetyCylinderConfig -> a.a.a.a.a.a$c$b:
    float[] outerFogColor -> g
    java.lang.Float exitEventRadius -> i
    java.lang.Float anchorWarningDistance -> j
    float[] innerFogColor -> f
    java.lang.Float enterEventRadius -> h
    java.lang.Float collisionSphereRadius -> e
    java.lang.Float innerRadius -> c
    java.lang.Float outerRadius -> d
    com.google.vr.sdk.deps.es mergeFrom$51666RRD5TJMURR7DHIIUS3IDTQ6UOJLCONMSOBEDSNK6RR4CLI4IRJGELQ44UBKCL17APJ6CLP4SOBEDSTIIJ33DTMIUPRFDTJMOP9FE1P6UT3FC9QMCBREC5N6UBQDCLPN6OB7CL762RJF7C______0(com.google.vr.sdk.deps.et) -> a
    void writeTo(com.google.vr.sdk.deps.ek) -> a
    int computeSerializedSize() -> b
    com.google.common.logging.nano.Vr$VREvent$HeadTracking$SafetyCylinderConfig mergeFrom$51666RRD5TJMURR7DHIIUS3IDTQ6UOJLCONMSOBEDSNK6RR4CLI4IRJGELQ44UBKCL17APJ6CLP4SOBEDSTIIJ33DTMIUPRFDTJMOP9FCDNMQRBFDONMORR7CTKMSPPFDPGMSRPFAPP28LII8LR6ARJK4H46AOB4AHP62ORBD5N6E92JC5J6AT3P8DSMOQBECHIN4GRFDPJ6IPPR0(com.google.vr.sdk.deps.et) -> b
    com.google.common.logging.nano.Vr$VREvent$HeadTracking$SafetyCylinderConfig clear() -> f
com.google.common.logging.nano.Vr$VREvent$LoggingOptInState -> a.a.a.a.a.a$d:
    java.lang.Integer numOptInAccounts -> c
    java.lang.Integer accountIndex -> d
    java.lang.Boolean wasOptedIntoSwaa -> e
    com.google.vr.sdk.deps.es mergeFrom$51666RRD5TJMURR7DHIIUS3IDTQ6UOJLCONMSOBEDSNK6RR4CLI4IRJGELQ44UBKCL17APJ6CLP4SOBEDSTIIJ33DTMIUPRFDTJMOP9FE1P6UT3FC9QMCBREC5N6UBQDCLPN6OB7CL762RJF7C______0(com.google.vr.sdk.deps.et) -> a
    void writeTo(com.google.vr.sdk.deps.ek) -> a
    int computeSerializedSize() -> b
    com.google.common.logging.nano.Vr$VREvent$LoggingOptInState mergeFrom$51666RRD5TJMURR7DHIIUS3IDTQ6UOJLCONMSOBEDSNK6RR4CLI4IRJGELQ44UBKCL17APJ6CLP4SOBEDSTIIJ33DTMIUPRFDTJMOP9FCDNMQRBFDONMORR7CTKMSPPFDPGMSRPFAPP28LII8LR6ARJK4H66UPR7D5N6EJRGEH4MSKRKC5Q6AEO_0(com.google.vr.sdk.deps.et) -> b
    com.google.common.logging.nano.Vr$VREvent$LoggingOptInState clear() -> f
com.google.common.logging.nano.Vr$VREvent$Lullaby -> a.a.a.a.a.a$e:
    java.lang.Integer uiElement -> c
    java.lang.Integer index -> d
    com.google.common.logging.Vr$VREvent$Lullaby$LoadTime loadTime -> f
    java.lang.String contentId -> e
    int checkUiElementOrThrow(int) -> a
    com.google.vr.sdk.deps.es mergeFrom$51666RRD5TJMURR7DHIIUS3IDTQ6UOJLCONMSOBEDSNK6RR4CLI4IRJGELQ44UBKCL17APJ6CLP4SOBEDSTIIJ33DTMIUPRFDTJMOP9FE1P6UT3FC9QMCBREC5N6UBQDCLPN6OB7CL762RJF7C______0(com.google.vr.sdk.deps.et) -> a
    void writeTo(com.google.vr.sdk.deps.ek) -> a
    int computeSerializedSize() -> b
    com.google.common.logging.nano.Vr$VREvent$Lullaby mergeFrom$51666RRD5TJMURR7DHIIUS3IDTQ6UOJLCONMSOBEDSNK6RR4CLI4IRJGELQ44UBKCL17APJ6CLP4SOBEDSTIIJ33DTMIUPRFDTJMOP9FCDNMQRBFDONMORR7CTKMSPPFDPGMSRPFAPP28LII8LR6ARJK4H67AR3CC5H7IEO_0(com.google.vr.sdk.deps.et) -> b
    com.google.common.logging.nano.Vr$VREvent$Lullaby clear() -> f
com.google.common.logging.nano.Vr$VREvent$PerformanceStats -> a.a.a.a.a.a$f:
    java.lang.Integer averageFps -> c
    java.lang.Integer memoryConsumptionKilobytes -> e
    java.lang.Float vrMaxSkinTemperatureCelsius -> g
    com.google.common.logging.Vr$VREvent$HistogramBucket[] presentTime -> k
    com.google.common.logging.Vr$VREvent$TimeSeriesData timeSeriesData -> i
    com.google.common.logging.Vr$VREvent$HistogramBucket[] consecutiveDroppedFrames -> n
    java.lang.Integer maxNumLayers -> z
    float[] batteryShutdownTemperature -> v
    java.lang.Float edsFps -> x
    float[] cpuShutdownTemperature -> t
    java.lang.Integer thermalEventFlags -> p
    float[] gpuThrottlingTemperature -> r
    com.google.common.logging.Vr$VREvent$HistogramBucket[] frameTime -> d
    java.lang.Float shutdownSkinTemperatureCelsius -> h
    com.google.common.logging.Vr$VREvent$HistogramBucket[] appRenderTime -> j
    java.lang.Float throttleSkinTemperatureCelsius -> f
    com.google.common.logging.Vr$VREvent$HistogramBucket[] totalRenderTime -> l
    com.google.common.logging.Vr$VREvent$PerformanceStats$RenderTargetSize[] renderTargetSizes -> A
    com.google.common.logging.Vr$VREvent$HistogramBucket[] postFrameTime -> m
    com.google.common.logging.Vr$VREvent$HistogramBucket[] scanlineRacingVsyncOvershootUs -> o
    java.lang.Integer layerSizeRoundingIncrement -> y
    float[] gpuShutdownTemperature -> u
    java.lang.Float averageAppFps -> w
    float[] batteryThrottlingTemperature -> s
    float[] cpuThrottlingTemperature -> q
    com.google.vr.sdk.deps.es mergeFrom$51666RRD5TJMURR7DHIIUS3IDTQ6UOJLCONMSOBEDSNK6RR4CLI4IRJGELQ44UBKCL17APJ6CLP4SOBEDSTIIJ33DTMIUPRFDTJMOP9FE1P6UT3FC9QMCBREC5N6UBQDCLPN6OB7CL762RJF7C______0(com.google.vr.sdk.deps.et) -> a
    void writeTo(com.google.vr.sdk.deps.ek) -> a
    int computeSerializedSize() -> b
    com.google.common.logging.nano.Vr$VREvent$PerformanceStats mergeFrom$51666RRD5TJMURR7DHIIUS3IDTQ6UOJLCONMSOBEDSNK6RR4CLI4IRJGELQ44UBKCL17APJ6CLP4SOBEDSTIIJ33DTMIUPRFDTJMOP9FCDNMQRBFDONMORR7CTKMSPPFDPGMSRPFAPP28LII8LR6ARJK4H86ASJ6DTP6QOBECDIL6T31EHPJM___0(com.google.vr.sdk.deps.et) -> b
    com.google.common.logging.nano.Vr$VREvent$PerformanceStats clear() -> f
com.google.common.logging.nano.Vr$VREvent$StandaloneHeadset -> a.a.a.a.a.a$g:
    com.google.common.logging.Vr$VREvent$StandaloneHeadset$HeadSetOnOffStats onOffStats -> e
    com.google.common.logging.Vr$VREvent$StandaloneHeadset$MemoryStats memoryStats -> d
    com.google.common.logging.Vr$VREvent$StandaloneHeadset$PowerState powerState -> c
    com.google.common.logging.Vr$VREvent$StandaloneHeadset$IdleMetrics idleMetrics -> f
    com.google.vr.sdk.deps.es mergeFrom$51666RRD5TJMURR7DHIIUS3IDTQ6UOJLCONMSOBEDSNK6RR4CLI4IRJGELQ44UBKCL17APJ6CLP4SOBEDSTIIJ33DTMIUPRFDTJMOP9FE1P6UT3FC9QMCBREC5N6UBQDCLPN6OB7CL762RJF7C______0(com.google.vr.sdk.deps.et) -> a
    void writeTo(com.google.vr.sdk.deps.ek) -> a
    int computeSerializedSize() -> b
    com.google.common.logging.nano.Vr$VREvent$StandaloneHeadset mergeFrom$51666RRD5TJMURR7DHIIUS3IDTQ6UOJLCONMSOBEDSNK6RR4CLI4IRJGELQ44UBKCL17APJ6CLP4SOBEDSTIIJ33DTMIUPRFDTJMOP9FCDNMQRBFDONMORR7CTKMSPPFDPGMSRPFAPP28LII8LR6ARJK4H9N8OBECHGMORRECL46AOB4EDIN8EO_0(com.google.vr.sdk.deps.et) -> b
    com.google.common.logging.nano.Vr$VREvent$StandaloneHeadset clear() -> f
com.google.common.logging.nano.Vr$VREvent$VrCore -> a.a.a.a.a.a$h:
    com.google.common.logging.nano.Vr$VREvent$VrCore$Controller controller -> i
    java.lang.Integer errorCode -> d
    com.google.common.logging.Vr$VREvent$VrCore$Permission permission -> e
    java.lang.Integer clientApiVersion -> g
    java.lang.Boolean isInDemoMode -> k
    java.lang.Long vrSessionId -> c
    com.google.common.logging.Vr$VREvent$VrCore$LockScreenEvent lockScreenEvent -> n
    com.google.common.logging.Vr$VREvent$VrCore$CaptureEvent captureEvent -> l
    com.google.common.logging.Vr$VREvent$VrCore$CompositionType compositionType -> o
    com.google.common.logging.Vr$VREvent$Application previousForegroundApplication -> h
    com.google.common.logging.Vr$VREvent$Application foregroundApplication -> f
    com.google.common.logging.Vr$VREvent$VrCore$DashboardEvent dashboardEvent -> j
    java.lang.Integer controllerHandedness -> m
    int checkErrorCodeOrThrow(int) -> a
    com.google.vr.sdk.deps.es mergeFrom$51666RRD5TJMURR7DHIIUS3IDTQ6UOJLCONMSOBEDSNK6RR4CLI4IRJGELQ44UBKCL17APJ6CLP4SOBEDSTIIJ33DTMIUPRFDTJMOP9FE1P6UT3FC9QMCBREC5N6UBQDCLPN6OB7CL762RJF7C______0(com.google.vr.sdk.deps.et) -> a
    void writeTo(com.google.vr.sdk.deps.ek) -> a
    int computeSerializedSize() -> b
    com.google.common.logging.nano.Vr$VREvent$VrCore mergeFrom$51666RRD5TJMURR7DHIIUS3IDTQ6UOJLCONMSOBEDSNK6RR4CLI4IRJGELQ44UBKCL17APJ6CLP4SOBEDSTIIJ33DTMIUPRFDTJMOP9FCDNMQRBFDONMORR7CTKMSPPFDPGMSRPFAPP28LII8LR6ARJK4HB74GRFE9IJM___0(com.google.vr.sdk.deps.et) -> b
    com.google.common.logging.nano.Vr$VREvent$VrCore clear() -> f
com.google.common.logging.nano.Vr$VREvent$VrCore$Controller -> a.a.a.a.a.a$h$a:
    java.lang.String softwareRevision -> g
    java.lang.String availableFirmware -> f
    java.lang.Boolean isConnected -> h
    java.lang.String hardwareRevision -> j
    java.lang.Integer batteryLevel -> i
    java.lang.Integer status -> s
    java.lang.Integer xRailCount -> k
    java.lang.Integer yRailCount -> l
    java.lang.Integer zRailCount -> m
    java.lang.Integer sampleCount -> n
    java.lang.String manufacturer -> c
    com.google.common.logging.Vr$VREvent$VrCore$Controller$SensorType sensorType -> o
    java.lang.Integer axis -> p
    java.lang.String firmware -> e
    java.lang.Integer otaRetries -> q
    java.lang.String model -> d
    java.lang.Integer totalControllerLagCount -> r
    int checkControllerAxisOrThrow(int) -> a
    com.google.vr.sdk.deps.es mergeFrom$51666RRD5TJMURR7DHIIUS3IDTQ6UOJLCONMSOBEDSNK6RR4CLI4IRJGELQ44UBKCL17APJ6CLP4SOBEDSTIIJ33DTMIUPRFDTJMOP9FE1P6UT3FC9QMCBREC5N6UBQDCLPN6OB7CL762RJF7C______0(com.google.vr.sdk.deps.et) -> a
    void writeTo(com.google.vr.sdk.deps.ek) -> a
    int computeSerializedSize() -> b
    com.google.common.logging.nano.Vr$VREvent$VrCore$Controller mergeFrom$51666RRD5TJMURR7DHIIUS3IDTQ6UOJLCONMSOBEDSNK6RR4CLI4IRJGELQ44UBKCL17APJ6CLP4SOBEDSTIIJ33DTMIUPRFDTJMOP9FCDNMQRBFDONMORR7CTKMSPPFDPGMSRPFAPP28LII8LR6ARJK4HB74GRFE9II8GRFDPQ74RRCDHIN4EO_0(com.google.vr.sdk.deps.et) -> b
    com.google.common.logging.nano.Vr$VREvent$VrCore$Controller clear() -> f
com.google.gvr.keyboardsupport.KeyboardFragment -> com.google.gvr.keyboardsupport.a:
    com.google.gvr.keyboardsupport.KeyboardFragment$KeyboardCallback keyboardCallback -> a
    void callBackCall() -> a
com.google.gvr.keyboardsupport.KeyboardFragment$KeyboardCallback -> com.google.gvr.keyboardsupport.a$a:
    void onPlayStoreResult() -> a
com.google.gvr.permissionsupport.PermissionsFragment -> com.google.gvr.permissionsupport.a:
    com.google.gvr.permissionsupport.PermissionsFragment$PermissionsCallback permissionsCallback -> a
    void setPermissionResult(boolean) -> a
com.google.gvr.permissionsupport.PermissionsFragment$PermissionsCallback -> com.google.gvr.permissionsupport.a$a:
    void onRequestPermissionResult(boolean) -> a
com.google.gvr.permissionsupport.TransitionVRActivity -> com.google.gvr.permissionsupport.TransitionVRActivity:
    java.lang.String[] permissionArray -> a
    void access$000(com.google.gvr.permissionsupport.TransitionVRActivity) -> a
    void setImmersiveSticky() -> a
com.google.gvr.permissionsupport.TransitionVRActivity$1 -> com.google.gvr.permissionsupport.b:
    com.google.gvr.permissionsupport.TransitionVRActivity this$0 -> a
com.google.vr.cardboard.AndroidNCompat -> com.google.vr.cardboard.d:
    java.lang.String TAG -> a
    int sSdkLevelOverride -> b
    java.lang.String access$000() -> a
    boolean handleVrCoreAbsence(android.content.Context,int) -> a
    boolean isVrModeSupported(android.content.Context) -> a
    boolean setSustainedPerformanceMode(android.app.Activity,boolean) -> a
    boolean setVrModeEnabled(android.app.Activity,boolean,int) -> a
    void setVrThread(int) -> a
    void showWarningDialog(android.content.Context,int,int,android.content.DialogInterface$OnClickListener) -> a
    int checkForVrCorePresence(android.content.Context) -> b
    boolean isAtLeastN() -> b
    boolean setVrModeEnabled(android.app.Activity,boolean) -> b
    boolean isAtLeastNMR1() -> c
    boolean isVrModeHighPerformanceSupported(android.content.Context) -> c
com.google.vr.cardboard.AndroidNCompat$1 -> com.google.vr.cardboard.a:
    android.content.Context val$context -> a
com.google.vr.cardboard.AndroidNCompat$2 -> com.google.vr.cardboard.b:
    android.content.Context val$context -> a
com.google.vr.cardboard.AndroidNCompat$3 -> com.google.vr.cardboard.c:
com.google.vr.cardboard.AndroidPCompat -> com.google.vr.cardboard.e:
    boolean doesWindowExtendIntoCutoutArea(android.view.Window) -> a
    com.google.vr.cardboard.AndroidPCompat$DisplayCutoutCompat getDisplayCutout(android.view.Display) -> a
    boolean isAtLeastP() -> a
com.google.vr.cardboard.AndroidPCompat$DisplayCutoutCompat -> com.google.vr.cardboard.e$a:
    java.lang.Object displayCutout -> b
    java.lang.Class DISPLAY_CUTOUT_CLASS -> a
    com.google.vr.cardboard.AndroidPCompat$DisplayCutoutCompat create(java.lang.Object) -> a
    int getSafeInsetBottom() -> a
    int tryGetInt(java.lang.String) -> a
    int getSafeInsetLeft() -> b
    int getSafeInsetRight() -> c
    int getSafeInsetTop() -> d
    java.lang.Class tryGetDisplayCutoutClass() -> e
com.google.vr.cardboard.CardboardGLSurfaceView$DetachListener -> com.google.vr.cardboard.f:
com.google.vr.cardboard.ConfigUtils -> com.google.vr.cardboard.g:
    java.lang.String TAG -> a
    java.io.File getConfigFile(java.lang.String) -> a
    com.google.vr.sdk.proto.nano.CardboardDevice$DeviceParams readDeviceParamsFromExternalStorage() -> a
    com.google.vr.sdk.deps.cg readFromExternalStorage(com.google.vr.sdk.deps.ch,java.lang.String,int,boolean) -> a
    com.google.vr.sdk.deps.es readFromExternalStorage(java.lang.Class,java.lang.String,int,boolean) -> a
    byte[] readFromExternalStorage(java.lang.String,int,boolean) -> a
    byte[] readFromInputStream(java.io.InputStream,int) -> a
    boolean writeDeviceParamsToExternalStorage(com.google.vr.sdk.proto.nano.CardboardDevice$DeviceParams) -> a
    boolean writeToExternalStorage(com.google.vr.sdk.deps.es,java.lang.String,int) -> a
    boolean writeToExternalStorage(byte[],java.lang.String,int) -> a
    boolean writeToOutputStream(byte[],java.io.OutputStream,int) -> a
    com.google.vr.sdk.proto.Display$DisplayParams readDisplayParamsFromExternalStorage() -> b
    boolean removeDeviceParamsFromExternalStorage() -> c
com.google.vr.cardboard.ContentProviderVrParamsProvider -> com.google.vr.cardboard.h:
    android.net.Uri recentHeadsetsSettingUri -> g
    android.net.Uri sdkConfigurationParamsSettingUri -> f
    android.net.Uri displayParamsSettingUri -> e
    android.content.ContentProviderClient client -> b
    java.lang.String TAG -> a
    android.net.Uri userPrefsUri -> d
    android.net.Uri deviceParamsSettingUri -> c
    com.google.vr.sdk.proto.nano.CardboardDevice$DeviceParams readDeviceParams() -> a
    byte[] readParamBytes(android.net.Uri,java.lang.String) -> a
    com.google.vr.sdk.deps.cg readParams(com.google.vr.sdk.deps.ch,android.net.Uri,java.lang.String) -> a
    com.google.vr.sdk.deps.es readParams(com.google.vr.sdk.deps.es,android.net.Uri,java.lang.String) -> a
    com.google.common.logging.Vr$VREvent$SdkConfigurationParams readSdkConfigurationParams(com.google.vr.sdk.proto.SdkConfiguration$SdkConfigurationRequest) -> a
    boolean writeDeviceParams(com.google.vr.sdk.proto.nano.CardboardDevice$DeviceParams) -> a
    boolean writeParams(com.google.vr.sdk.deps.es,android.net.Uri) -> a
    com.google.vr.sdk.proto.Display$DisplayParams readDisplayParams() -> b
    com.google.vr.sdk.proto.Preferences$UserPrefs readUserPrefs() -> c
com.google.vr.cardboard.ContextUtils -> com.google.vr.cardboard.i:
    android.app.Activity getActivity(android.content.Context) -> a
    android.content.ComponentName getComponentName(android.content.Context) -> b
com.google.vr.cardboard.DisplaySynchronizer -> com.google.vr.cardboard.DisplaySynchronizer:
    android.view.Display display -> d
    long lastDisplayRotationUpdateTimeNanos -> g
    long nativeDisplaySynchronizer -> b
    int displayRotationDegrees -> f
    long DISPLAY_ROTATION_REFRESH_INTERVAL_NANOS -> a
    android.util.DisplayMetrics displayMetrics -> e
    com.google.vr.cardboard.FrameMonitor frameMonitor -> c
    void disableFrameMonitor() -> a
    void setDisplay(android.view.Display) -> a
    long getNativeDisplaySynchronizer() -> b
    void onConfigurationChanged() -> c
    void onPause() -> d
    void onResume() -> e
    void shutdown() -> f
    void checkNativeDisplaySynchronizer() -> g
    void invalidateDisplayProperties() -> h
com.google.vr.cardboard.DisplayUtils -> com.google.vr.cardboard.j:
    float getBorderSizeMeters(com.google.vr.sdk.proto.Display$DisplayParams) -> a
    int getCutoutMarginLandscapePixels(android.content.Context,android.view.Display,com.google.vr.cardboard.AndroidPCompat) -> a
    android.view.Display getDefaultDisplay(android.content.Context) -> a
    android.util.DisplayMetrics getDisplayMetricsLandscape(android.view.Display) -> a
    android.util.DisplayMetrics getDisplayMetricsLandscapeWithOverride(android.view.Display,com.google.vr.sdk.proto.Display$DisplayParams) -> a
    float getMetersPerPixelFromDotsPerInch(float) -> a
    boolean isSameDisplay(android.view.Display,android.view.Display) -> a
    java.lang.String getExternalDisplayName(android.content.Context) -> b
com.google.vr.cardboard.EglFactory -> com.google.vr.cardboard.k:
    javax.microedition.khronos.egl.EGLContext sharedContext -> f
    int eglContextClientVersion -> e
    boolean usePriority -> a
    boolean useProtected -> b
    boolean useDebug -> c
    boolean errorReportingEnabled -> d
    void setEGLContextClientVersion(int) -> a
    void setErrorReportingEnabled(boolean) -> a
    void setSharedContext(javax.microedition.khronos.egl.EGLContext) -> a
    boolean supportsProtectedContent(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay) -> a
    void setUseDebug(boolean) -> b
    void setUsePriorityContext(boolean) -> c
    void setUseProtectedBuffers(boolean) -> d
com.google.vr.cardboard.EglReadyListener -> com.google.vr.cardboard.EglReadyListener:
    java.lang.Object listenerLock -> f
    java.lang.Object contextInfoLock -> d
    com.google.vr.cardboard.EglReadyListener$EventListener listener -> e
    javax.microedition.khronos.egl.EGLContext eglContext -> a
    int eglContextFlags -> b
    int glVersion -> c
    void clearContext() -> a
    int parseVersionString(java.lang.String) -> a
    void setEventListener(com.google.vr.cardboard.EglReadyListener$EventListener) -> a
    javax.microedition.khronos.egl.EGLContext getEGLContext() -> b
    int getEGLContextFlags() -> c
    int getGLVersion() -> d
    void releaseEventListener() -> e
com.google.vr.cardboard.EglReadyListener$EventListener -> com.google.vr.cardboard.EglReadyListener$a:
    void onEglReady() -> a
com.google.vr.cardboard.ExternalSurfaceManager -> com.google.vr.cardboard.ExternalSurfaceManager:
    com.google.vr.cardboard.ExternalSurfaceManager$ExternalSurfaceData surfaceData -> e
    java.lang.Object surfaceDataUpdateLock -> d
    com.google.vr.cardboard.ExternalSurfaceManager$SurfaceTextureFactory surfaceTextureFactory -> c
    int nextID -> f
    com.google.vr.cardboard.ExternalSurfaceManager$UpdateSurfaceCallback updateSurfaceCallback -> b
    java.lang.String TAG -> a
    boolean isAttachedToGlContext -> g
    void access$000(long,int,int,long,float[]) -> a
    void access$200(long) -> a
    void consumerUpdateManagedSurfaceHelper(com.google.vr.cardboard.ExternalSurfaceManager$ExternalSurfaceConsumer) -> a
    int createExternalSurfaceImpl(int,int,com.google.vr.cardboard.ExternalSurfaceManager$ExternalSurfaceCallback) -> a
    void lambda$consumerUpdateManagedSurfaces$0$ExternalSurfaceManager(com.google.vr.cardboard.ExternalSurfaceManager$ExternalSurface) -> a
    void lambda$consumerUpdateManagedSurfacesSequentially$1$ExternalSurfaceManager(com.google.vr.cardboard.ExternalSurfaceManager$ExternalSurface) -> b
com.google.vr.cardboard.ExternalSurfaceManager$$Lambda$0 -> com.google.vr.cardboard.l:
    com.google.vr.cardboard.ExternalSurfaceManager arg$1 -> a
    void accept(com.google.vr.cardboard.ExternalSurfaceManager$ExternalSurface) -> a
com.google.vr.cardboard.ExternalSurfaceManager$$Lambda$1 -> com.google.vr.cardboard.m:
    com.google.vr.cardboard.ExternalSurfaceManager arg$1 -> a
    void accept(com.google.vr.cardboard.ExternalSurfaceManager$ExternalSurface) -> a
com.google.vr.cardboard.ExternalSurfaceManager$1 -> com.google.vr.cardboard.n:
    long val$nativeSurfaceManager -> a
    void updateSurface(int,int,long,float[]) -> a
com.google.vr.cardboard.ExternalSurfaceManager$2 -> com.google.vr.cardboard.o:
    android.graphics.SurfaceTexture createSurfaceTexture(int) -> a
com.google.vr.cardboard.ExternalSurfaceManager$AndroidHandlerCallback -> com.google.vr.cardboard.ExternalSurfaceManager$a:
    java.lang.Runnable frameListener -> b
    android.os.Handler handler -> c
    java.lang.Runnable surfaceListener -> a
    void cancelPosts() -> a
    void onSurfaceAvailable() -> b
com.google.vr.cardboard.ExternalSurfaceManager$ExternalSurface -> com.google.vr.cardboard.ExternalSurfaceManager$b:
    boolean isShutdown -> m
    int surfaceTextureWidth -> h
    com.google.vr.cardboard.ExternalSurfaceManager$ExternalSurfaceCallback callback -> b
    int surfaceTextureHeight -> i
    boolean isAttached -> l
    com.google.vr.cardboard.ExternalSurfaceManager$SurfaceTextureFactory surfaceTextureFactory -> c
    float[] transformMatrix -> d
    java.lang.Object onFrameAvailableShutdownLock -> n
    int id -> a
    java.util.concurrent.atomic.AtomicInteger frameAvailableCallbackCount -> e
    int[] glTextureId -> g
    java.util.concurrent.atomic.AtomicBoolean released -> f
    android.graphics.SurfaceTexture surfaceTexture -> j
    android.view.Surface surface -> k
    java.util.concurrent.atomic.AtomicBoolean access$100(com.google.vr.cardboard.ExternalSurfaceManager$ExternalSurface) -> a
    android.view.Surface getSurface() -> a
    void maybeAttachToCurrentGLContext(int) -> a
    void shutdown(com.google.vr.cardboard.ExternalSurfaceManager$UpdateSurfaceCallback) -> a
    java.util.concurrent.atomic.AtomicInteger access$300(com.google.vr.cardboard.ExternalSurfaceManager$ExternalSurface) -> b
    void maybeAttachToCurrentGLContext() -> b
    void updateSurfaceTexture(com.google.vr.cardboard.ExternalSurfaceManager$UpdateSurfaceCallback) -> b
    java.lang.Object access$400(com.google.vr.cardboard.ExternalSurfaceManager$ExternalSurface) -> c
    void maybeDetachFromCurrentGLContext() -> c
    void updateSurfaceTextureSequentially(com.google.vr.cardboard.ExternalSurfaceManager$UpdateSurfaceCallback) -> c
    boolean access$500(com.google.vr.cardboard.ExternalSurfaceManager$ExternalSurface) -> d
    com.google.vr.cardboard.ExternalSurfaceManager$ExternalSurfaceCallback access$600(com.google.vr.cardboard.ExternalSurfaceManager$ExternalSurface) -> e
com.google.vr.cardboard.ExternalSurfaceManager$ExternalSurface$1 -> com.google.vr.cardboard.p:
    com.google.vr.cardboard.ExternalSurfaceManager$ExternalSurface this$0 -> a
com.google.vr.cardboard.ExternalSurfaceManager$ExternalSurfaceCallback -> com.google.vr.cardboard.ExternalSurfaceManager$c:
    void cancelPosts() -> a
    void onSurfaceAvailable() -> b
com.google.vr.cardboard.ExternalSurfaceManager$ExternalSurfaceConsumer -> com.google.vr.cardboard.ExternalSurfaceManager$d:
    void accept(com.google.vr.cardboard.ExternalSurfaceManager$ExternalSurface) -> a
com.google.vr.cardboard.ExternalSurfaceManager$ExternalSurfaceData -> com.google.vr.cardboard.ExternalSurfaceManager$e:
    java.util.HashMap surfacesToRelease -> b
    java.util.HashMap surfaces -> a
com.google.vr.cardboard.ExternalSurfaceManager$NativeCallback -> com.google.vr.cardboard.ExternalSurfaceManager$f:
    android.os.Handler surfaceMainHandler -> c
    long nativeFrameCallbackPtr -> b
    java.lang.Runnable surfaceListener -> a
    void cancelPosts() -> a
    void lambda$new$0$ExternalSurfaceManager$NativeCallback(long) -> a
    void onSurfaceAvailable() -> b
com.google.vr.cardboard.ExternalSurfaceManager$NativeCallback$$Lambda$0 -> com.google.vr.cardboard.q:
    long arg$1 -> a
com.google.vr.cardboard.ExternalSurfaceManager$SurfaceTextureFactory -> com.google.vr.cardboard.ExternalSurfaceManager$g:
    android.graphics.SurfaceTexture createSurfaceTexture(int) -> a
com.google.vr.cardboard.ExternalSurfaceManager$UpdateSurfaceCallback -> com.google.vr.cardboard.ExternalSurfaceManager$h:
    void updateSurface(int,int,long,float[]) -> a
com.google.vr.cardboard.FrameMonitor -> com.google.vr.cardboard.r:
    android.os.Handler handler -> d
    boolean isResumed -> f
    java.lang.String TAG -> a
    android.view.Choreographer$FrameCallback callback -> b
    android.os.HandlerThread choreographerOwnerThread -> c
    android.view.Choreographer choreographer -> e
    void init() -> a
    void onPause() -> b
    void onResume() -> c
    void shutdown() -> d
com.google.vr.cardboard.IsEmulator -> com.google.vr.cardboard.s:
    boolean isEmulator() -> a
com.google.vr.cardboard.LegacyVrParamsProvider -> com.google.vr.cardboard.t:
    android.content.Context context -> a
    com.google.vr.sdk.proto.nano.CardboardDevice$DeviceParams readDeviceParams() -> a
    com.google.common.logging.Vr$VREvent$SdkConfigurationParams readSdkConfigurationParams(com.google.vr.sdk.proto.SdkConfiguration$SdkConfigurationRequest) -> a
    boolean writeDeviceParams(com.google.vr.sdk.proto.nano.CardboardDevice$DeviceParams) -> a
    com.google.vr.sdk.proto.Display$DisplayParams readDisplayParams() -> b
    com.google.vr.sdk.proto.Preferences$UserPrefs readUserPrefs() -> c
com.google.vr.cardboard.MutableEglConfigChooser -> com.google.vr.cardboard.u:
    boolean IS_EMULATOR -> a
    boolean forceMutableBuffer -> b
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[],boolean) -> a
    int findConfigAttrib(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int) -> a
com.google.vr.cardboard.PackageUtils -> com.google.vr.cardboard.v:
    boolean isGooglePackage(java.lang.String) -> a
    boolean isSystemPackage(android.content.Context,java.lang.String) -> a
com.google.vr.cardboard.PpiOverrides -> com.google.vr.cardboard.w:
    java.util.List PPI_OVERRIDES -> c
    java.lang.String TAG -> a
    java.util.ArrayList supportedDisplaySizes -> b
    com.google.vr.sdk.proto.Display$DisplayParams getPpiOverride(android.content.Context) -> a
    boolean getPpiOverride(java.util.List,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.google.vr.sdk.proto.Display$DisplayParams$Builder) -> a
    java.util.ArrayList getSupportedDisplaySizes(android.view.Display) -> a
    java.lang.String hashString(java.lang.String) -> a
com.google.vr.cardboard.PpiOverrides$PpiOverride -> com.google.vr.cardboard.w$a:
    java.lang.Float bottomBezelHeight -> g
    java.lang.String manufacturer -> a
    java.lang.Float xPpi -> e
    java.lang.Float yPpi -> f
    java.lang.String model -> c
    java.lang.String device -> b
    java.lang.String hardware -> d
    boolean isMatching(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
com.google.vr.cardboard.R$dimen -> com.google.vr.cardboard.x:
com.google.vr.cardboard.R$id -> com.google.vr.cardboard.y:
com.google.vr.cardboard.R$layout -> com.google.vr.cardboard.z:
com.google.vr.cardboard.R$string -> com.google.vr.cardboard.A:
com.google.vr.cardboard.R$style -> com.google.vr.cardboard.B:
com.google.vr.cardboard.ScanlineRacingRenderer -> com.google.vr.cardboard.D:
    com.google.vr.ndk.base.GvrApi gvrApi -> a
    com.google.vr.ndk.base.GvrSurfaceView gvrSurfaceView -> b
    com.google.vr.ndk.base.GvrSurfaceView access$000(com.google.vr.cardboard.ScanlineRacingRenderer) -> a
    void onPause() -> a
    void setSurfaceSize(int,int) -> a
    void setSurfaceView(com.google.vr.ndk.base.GvrSurfaceView) -> a
    void onSurfaceDestroyed() -> b
com.google.vr.cardboard.ScanlineRacingRenderer$1 -> com.google.vr.cardboard.C:
    com.google.vr.cardboard.ScanlineRacingRenderer this$0 -> c
    int val$surfaceHeightPixels -> b
    int val$surfaceWidthPixels -> a
com.google.vr.cardboard.StoragePermissionUtils -> com.google.vr.cardboard.E:
    java.lang.String TAG -> a
    void requestStoragePermission(android.content.Context) -> a
com.google.vr.cardboard.ThreadUtils -> com.google.vr.cardboard.F:
    android.os.Handler uiHandler -> a
    void runOnUiThread(java.lang.Runnable) -> a
    boolean runningOnUiThread() -> a
com.google.vr.cardboard.TransitionView -> com.google.vr.cardboard.L:
    java.lang.Runnable transitionListener -> d
    android.view.OrientationEventListener orientationEventListener -> b
    java.lang.Runnable backButtonListener -> f
    boolean rotationChecked -> c
    android.widget.ImageButton backButton -> e
    int orientation -> a
    void access$000(com.google.vr.cardboard.TransitionView,boolean) -> a
    int access$102(com.google.vr.cardboard.TransitionView,int) -> a
    boolean access$200(com.google.vr.cardboard.TransitionView) -> a
    boolean access$400(int) -> a
    void fadeOutAndRemove(boolean) -> a
    void rotateViewIfNeeded() -> a
    void access$300(com.google.vr.cardboard.TransitionView) -> b
    boolean access$500(int) -> b
    void startOrientationMonitor() -> b
    java.lang.Runnable access$600(com.google.vr.cardboard.TransitionView) -> c
    void inflateContentView(int) -> c
    void stopOrientationMonitor() -> c
    java.lang.Runnable access$700(com.google.vr.cardboard.TransitionView) -> d
    boolean isLandscapeLeft(int) -> d
    void updateBackButtonVisibility() -> d
    boolean isLandscapeRight(int) -> e
    boolean isPortrait(int) -> f
com.google.vr.cardboard.TransitionView$1 -> com.google.vr.cardboard.G:
    com.google.vr.cardboard.TransitionView this$0 -> a
com.google.vr.cardboard.TransitionView$2 -> com.google.vr.cardboard.H:
    com.google.vr.cardboard.TransitionView this$0 -> a
com.google.vr.cardboard.TransitionView$3 -> com.google.vr.cardboard.I:
    com.google.vr.cardboard.TransitionView this$0 -> a
com.google.vr.cardboard.TransitionView$4 -> com.google.vr.cardboard.J:
    com.google.vr.cardboard.TransitionView this$0 -> a
com.google.vr.cardboard.TransitionView$5 -> com.google.vr.cardboard.K:
    com.google.vr.cardboard.TransitionView this$0 -> a
com.google.vr.cardboard.UiLayer -> com.google.vr.cardboard.Z:
    android.content.Context context -> a
    android.widget.RelativeLayout rootInnerLayout -> i
    android.widget.RelativeLayout alignmentMarker -> g
    boolean isEnabled -> j
    boolean isSettingsButtonEnabled -> k
    boolean isAlignmentMarkerEnabled -> l
    boolean transitionViewEnabled -> q
    java.lang.String viewerName -> r
    android.widget.FrameLayout rootOuterLayout -> b
    java.lang.Runnable buttonClickCallbackOverride -> m
    float alignmentMarkerScale -> s
    android.view.View settingsButtonHolder -> c
    int currentLayoutId -> t
    com.google.vr.cardboard.TransitionView transitionView -> h
    android.view.View backButtonHolder -> e
    android.widget.ImageButton settingsButton -> d
    java.lang.Runnable transitionListener -> p
    java.lang.Runnable settingsButtonListener -> o
    android.widget.ImageButton backButton -> f
    java.lang.Runnable backButtonListener -> n
    android.content.Context access$000(com.google.vr.cardboard.UiLayer) -> a
    void access$1400(com.google.vr.cardboard.UiLayer,int) -> a
    int access$400(boolean) -> a
    boolean getAlignmentMarkerEnabled() -> a
    void inflateViewsWithLayoutId(int) -> a
    void scaleAlignmentMarkerLayoutParams(android.content.Context,float,android.widget.RelativeLayout$LayoutParams) -> a
    void setAlignmentMarkerScale(float) -> a
    void setBackButtonListener(java.lang.Runnable) -> a
    void setViewerName(java.lang.String) -> a
    java.lang.Runnable access$100(com.google.vr.cardboard.UiLayer) -> b
    boolean getBackButtonEnabled() -> b
    void setButtonClickCallbackOverride(java.lang.Runnable) -> b
    void setEnabled(boolean) -> b
    com.google.vr.cardboard.TransitionView access$1000(com.google.vr.cardboard.UiLayer) -> c
    android.view.ViewGroup getView() -> c
    void setSettingsButtonEnabled(boolean) -> c
    void setSettingsButtonListener(java.lang.Runnable) -> c
    android.widget.RelativeLayout access$1100(com.google.vr.cardboard.UiLayer) -> d
    boolean isEnabled() -> d
    void setTransitionViewEnabled(boolean) -> d
    void setTransitionViewListener(java.lang.Runnable) -> d
    com.google.vr.cardboard.TransitionView access$1200(com.google.vr.cardboard.UiLayer) -> e
    int computeVisibility(boolean) -> e
    boolean isTransitionViewVisible() -> e
    int access$1300(com.google.vr.cardboard.UiLayer) -> f
    com.google.vr.cardboard.TransitionView getTransitionView() -> f
    java.lang.Runnable access$200(com.google.vr.cardboard.UiLayer) -> g
    java.lang.Runnable access$300(com.google.vr.cardboard.UiLayer) -> h
    android.widget.FrameLayout access$500(com.google.vr.cardboard.UiLayer) -> i
    android.widget.ImageButton access$600(com.google.vr.cardboard.UiLayer) -> j
    android.view.View access$700(com.google.vr.cardboard.UiLayer) -> k
    android.widget.ImageButton access$800(com.google.vr.cardboard.UiLayer) -> l
    android.view.View access$900(com.google.vr.cardboard.UiLayer) -> m
com.google.vr.cardboard.UiLayer$1 -> com.google.vr.cardboard.Q:
    com.google.vr.cardboard.UiLayer this$0 -> a
com.google.vr.cardboard.UiLayer$10 -> com.google.vr.cardboard.M:
    float val$scale -> a
    com.google.vr.cardboard.UiLayer this$0 -> b
com.google.vr.cardboard.UiLayer$11 -> com.google.vr.cardboard.N:
    com.google.vr.cardboard.UiLayer this$0 -> b
    boolean val$enabled -> a
com.google.vr.cardboard.UiLayer$12 -> com.google.vr.cardboard.O:
    com.google.vr.cardboard.UiLayer this$0 -> b
    java.lang.Runnable val$listener -> a
com.google.vr.cardboard.UiLayer$13 -> com.google.vr.cardboard.P:
    java.lang.String val$viewerName -> a
    com.google.vr.cardboard.UiLayer this$0 -> b
com.google.vr.cardboard.UiLayer$2 -> com.google.vr.cardboard.S:
    com.google.vr.cardboard.UiLayer this$0 -> a
com.google.vr.cardboard.UiLayer$3 -> com.google.vr.cardboard.T:
    com.google.vr.cardboard.UiLayer this$0 -> a
com.google.vr.cardboard.UiLayer$4 -> com.google.vr.cardboard.U:
    com.google.vr.cardboard.UiLayer this$0 -> a
com.google.vr.cardboard.UiLayer$5 -> com.google.vr.cardboard.V:
    com.google.vr.cardboard.UiLayer this$0 -> a
com.google.vr.cardboard.UiLayer$6 -> com.google.vr.cardboard.W:
    com.google.vr.cardboard.UiLayer this$0 -> b
    boolean val$enabled -> a
com.google.vr.cardboard.UiLayer$7 -> com.google.vr.cardboard.X:
    com.google.vr.cardboard.UiLayer this$0 -> b
    boolean val$enabled -> a
com.google.vr.cardboard.UiLayer$8 -> com.google.vr.cardboard.Y:
    com.google.vr.cardboard.UiLayer this$0 -> b
    java.lang.Runnable val$listener -> a
com.google.vr.cardboard.UiLayer$RootOuterLayout -> com.google.vr.cardboard.Z$a:
    android.content.res.Configuration currentConfig -> a
    com.google.vr.cardboard.UiLayer this$0 -> b
    void handlePotentialConfigurationChange(android.content.res.Configuration) -> a
com.google.vr.cardboard.UiUtils -> com.google.vr.cardboard.ea:
    android.app.AlertDialog$Builder dialogBuilderForTesting -> b
    com.google.vr.cardboard.StoragePermissionUtils permissionUtils -> a
    void launchOrInstallCardboard(android.content.Context) -> a
    android.app.AlertDialog showDaydreamHelpCenterDialog(android.content.Context,int,int,java.lang.Runnable) -> a
    android.app.AlertDialog showImmersiveDialog(android.content.Context,android.app.AlertDialog) -> a
    android.app.AlertDialog$Builder createAlertDialogBuilder(android.content.Context) -> b
    void showInstallDialog(android.content.Context) -> c
com.google.vr.cardboard.UiUtils$1 -> com.google.vr.cardboard.aa:
    android.content.Context val$context -> a
com.google.vr.cardboard.UiUtils$2 -> com.google.vr.cardboard.ba:
com.google.vr.cardboard.UiUtils$3 -> com.google.vr.cardboard.ca:
    java.lang.Runnable val$onCancelledCallback -> a
com.google.vr.cardboard.UiUtils$4 -> com.google.vr.cardboard.da:
    android.content.Context val$context -> a
com.google.vr.cardboard.VrContextWrapper -> com.google.vr.cardboard.fa:
    boolean autoFadeEnabled() -> a
    android.content.ComponentName getVrComponent() -> b
com.google.vr.cardboard.VrCoreLibraryLoader -> com.google.vr.cardboard.VrCoreLibraryLoader:
    void checkVrCoreGvrLibraryAvailable(android.content.Context,com.google.vr.ndk.base.Version) -> a
com.google.vr.cardboard.VrParamsProvider -> com.google.vr.cardboard.ga:
    com.google.vr.sdk.proto.nano.CardboardDevice$DeviceParams readDeviceParams() -> a
    com.google.common.logging.Vr$VREvent$SdkConfigurationParams readSdkConfigurationParams(com.google.vr.sdk.proto.SdkConfiguration$SdkConfigurationRequest) -> a
    boolean writeDeviceParams(com.google.vr.sdk.proto.nano.CardboardDevice$DeviceParams) -> a
    com.google.vr.sdk.proto.Display$DisplayParams readDisplayParams() -> b
    com.google.vr.sdk.proto.Preferences$UserPrefs readUserPrefs() -> c
com.google.vr.cardboard.VrParamsProviderFactory -> com.google.vr.cardboard.ha:
    com.google.vr.cardboard.VrParamsProvider providerForTesting -> a
    com.google.vr.cardboard.VrParamsProvider create(android.content.Context) -> a
    boolean isContentProviderAvailable(android.content.Context) -> b
    com.google.vr.cardboard.VrParamsProviderFactory$ContentProviderClientHandle tryToGetContentProviderClientHandle(android.content.Context) -> c
    java.util.List getValidContentProviderAuthorities(android.content.Context) -> d
com.google.vr.cardboard.VrParamsProviderFactory$ContentProviderClientHandle -> com.google.vr.cardboard.ha$a:
    android.content.ContentProviderClient client -> a
    java.lang.String authority -> b
com.google.vr.cardboard.VrParamsProviderJni -> com.google.vr.cardboard.VrParamsProviderJni:
    void updateNativeDisplayParamsPointer(long,android.util.DisplayMetrics,float,int) -> a
com.google.vr.cardboard.VrSettingsProviderContract -> com.google.vr.cardboard.ia:
    android.net.Uri createUri(java.lang.String,java.lang.String) -> a
com.google.vr.ndk.base.AbstractDaydreamTouchListener -> com.google.vr.ndk.base.a:
    boolean lastMotionEventInHeadset -> m
    boolean enabled -> n
    float[] pixelTranslation -> l
    float borderSizeMeters -> f
    int mostTouchesSeen -> h
    float yMetersPerPixel -> e
    float xMetersPerPixel -> d
    android.util.DisplayMetrics displayMetrics -> c
    int angleSamplesReceived -> b
    boolean useRotationalAlignmentCorrection -> r
    double[] currentMarkerBestDists -> k
    float[][] markersInPixels -> g
    int[] touchBestMarker -> i
    java.lang.String logTag -> a
    float[] displayCutoutTranslation -> s
    float rotation -> q
    int[] markerBestTouch -> j
    float[] lastTranslation -> o
    float[] translation -> p
    float getRotationRadians(android.view.MotionEvent) -> a
    void getTranslationInScreenSpace(float[]) -> a
    boolean handleTouch(android.view.MotionEvent,float,float) -> a
    void initWithDisplayParams(android.util.DisplayMetrics,com.google.vr.sdk.proto.Display$DisplayParams,com.google.vr.cardboard.AndroidPCompat$DisplayCutoutCompat) -> a
    boolean isDaydreamImageAlignmentEnabled() -> a
    void logEvent(int,com.google.common.logging.nano.Vr$VREvent) -> a
    void setDeviceParams(com.google.vr.sdk.proto.nano.CardboardDevice$DeviceParams) -> a
    void setEnabled(boolean) -> a
    void setLensOffset(float,float,float) -> a
    boolean processMotionEvent(android.view.MotionEvent,float,float) -> b
    boolean viewerNeedsTouchProcessing() -> b
    void logPhoneAlignment(android.view.MotionEvent,float,float) -> c
    void resetTrackingState() -> c
com.google.vr.ndk.base.AndroidCompat -> com.google.vr.ndk.base.b:
    void setSustainedPerformanceMode(android.app.Activity,boolean) -> a
    boolean setVrModeEnabled(android.app.Activity,boolean) -> b
com.google.vr.ndk.base.CardboardEmulator -> com.google.vr.ndk.base.c:
    boolean resumed -> b
    com.google.vr.vrcore.controller.api.ControllerServiceBridge controllerServiceBridge -> a
    com.google.vr.vrcore.controller.api.ControllerServiceBridge createServiceBridge(android.content.Context,com.google.vr.vrcore.controller.api.ControllerServiceBridge$Callbacks) -> a
    void onPause() -> a
    void onResume() -> b
com.google.vr.ndk.base.CardboardEmulator$ControllerCallbacks -> com.google.vr.ndk.base.c$a:
    java.lang.Runnable cardboardTriggerCallback -> a
    void onControllerEventPacket(com.google.vr.vrcore.controller.api.ControllerEventPacket) -> a
    void onControllerEventPacket2(com.google.vr.vrcore.controller.api.ControllerEventPacket2) -> a
    void onControllerRecentered(com.google.vr.vrcore.controller.api.ControllerOrientationEvent) -> a
    void onControllerStateChanged(int,int) -> a
    void onServiceDisconnected() -> a
    void onServiceInitFailed(int) -> a
    void onServiceConnected(int) -> b
    void onServiceUnavailable() -> b
    void onServiceFailed() -> c
com.google.vr.ndk.base.Constants -> com.google.vr.ndk.base.d:
    android.content.ComponentName FEATURE_REQUEST_ACTIVITY -> a
com.google.vr.ndk.base.DaydreamApi -> com.google.vr.ndk.base.i:
    com.google.vr.vrcore.common.api.IVrCoreSdkService vrCoreSdkService -> a
    android.content.Context context -> c
    com.google.vr.vrcore.common.api.IDaydreamManager daydreamManager -> b
    int vrCoreApiVersion -> f
    java.util.ArrayList queuedRunnables -> e
    android.content.ServiceConnection connection -> g
    boolean closed -> d
    com.google.vr.vrcore.common.api.IVrCoreSdkService access$000(com.google.vr.ndk.base.DaydreamApi) -> a
    com.google.vr.vrcore.common.api.IVrCoreSdkService access$002(com.google.vr.ndk.base.DaydreamApi,com.google.vr.vrcore.common.api.IVrCoreSdkService) -> a
    com.google.vr.vrcore.common.api.IDaydreamManager access$102(com.google.vr.ndk.base.DaydreamApi,com.google.vr.vrcore.common.api.IDaydreamManager) -> a
    com.google.vr.ndk.base.DaydreamApi create(android.content.Context) -> a
    android.content.Intent createVrIntent(android.content.ComponentName) -> a
    void exitFromVr(android.app.Activity,int,android.content.Intent) -> a
    void exitFromVr(android.app.Activity,int,android.content.Intent,java.lang.String) -> a
    boolean init() -> a
    void runWhenServiceConnected(java.lang.Runnable) -> a
    android.content.Intent setupVrIntent(android.content.Intent) -> a
    com.google.vr.vrcore.common.api.IDaydreamManager access$100(com.google.vr.ndk.base.DaydreamApi) -> b
    void checkNotClosed() -> b
    java.util.ArrayList access$200(com.google.vr.ndk.base.DaydreamApi) -> c
    int access$300(com.google.vr.ndk.base.DaydreamApi) -> d
    android.content.Context access$400(com.google.vr.ndk.base.DaydreamApi) -> e
    android.content.ServiceConnection access$500(com.google.vr.ndk.base.DaydreamApi) -> f
com.google.vr.ndk.base.DaydreamApi$1 -> com.google.vr.ndk.base.f:
    com.google.vr.ndk.base.DaydreamApi this$0 -> a
com.google.vr.ndk.base.DaydreamApi$12 -> com.google.vr.ndk.base.e:
    com.google.vr.ndk.base.DaydreamApi this$0 -> a
com.google.vr.ndk.base.DaydreamApi$7 -> com.google.vr.ndk.base.g:
    android.app.PendingIntent val$pendingVrExitIntent -> a
com.google.vr.ndk.base.DaydreamApi$8 -> com.google.vr.ndk.base.h:
    com.google.vr.ndk.base.DaydreamApi this$0 -> d
    android.app.PendingIntent val$pendingVrExitIntent -> b
    java.lang.Runnable val$onFailureRunnable -> a
    java.lang.String val$exitPromptText -> c
com.google.vr.ndk.base.DaydreamCompatibility -> com.google.vr.ndk.base.j:
    int supportedHeadsets -> a
    int getSupportedHeadsets() -> a
    boolean requiresDaydream() -> b
    boolean supportsDaydream() -> c
    int toDeprecated() -> d
    boolean supportsCardboard() -> e
com.google.vr.ndk.base.DaydreamUtils -> com.google.vr.ndk.base.k:
    boolean sDaydreamPhoneOverrideForTesting -> a
    boolean canResolveIntent(android.content.pm.PackageManager,android.content.ComponentName,android.content.Intent) -> a
    boolean checkHeadsetCompatibility(android.content.pm.PackageManager,android.content.ComponentName,java.lang.String) -> a
    com.google.vr.ndk.base.DaydreamCompatibility getComponentDaydreamCompatibility(android.content.Context,android.content.ComponentName) -> a
    com.google.vr.ndk.base.DaydreamCompatibility getComponentDaydreamCompatibility(android.content.pm.PackageManager,android.content.ComponentName) -> a
    boolean isDaydreamPhone(android.content.Context) -> a
com.google.vr.ndk.base.DaydreamUtilsWrapper -> com.google.vr.ndk.base.l:
    com.google.vr.ndk.base.DaydreamCompatibility getComponentDaydreamCompatibility(android.content.Context) -> a
    boolean isDaydreamActivity(android.app.Activity) -> a
    boolean isDaydreamComponent(android.content.Context) -> b
    boolean isDaydreamPhone(android.content.Context) -> c
    boolean isDaydreamRequiredComponent(android.content.Context) -> d
com.google.vr.ndk.base.DefaultNativeLibraryLoader -> com.google.vr.ndk.base.m:
    boolean shouldIgnoreDefaultLibrary -> a
    void maybeLoadDefaultLibrary() -> a
com.google.vr.ndk.base.ExtensionManager -> com.google.vr.ndk.base.n:
    void initialize(android.view.ViewGroup,com.google.vr.ndk.base.GvrApi) -> a
    void reportTelemetry(com.google.vr.vrcore.logging.api.IVrCoreLoggingService) -> a
    void onResume() -> b
    void onPause() -> c
com.google.vr.ndk.base.ExternalSurface -> com.google.vr.ndk.base.q:
    long nativeExternalSurface -> b
    java.lang.String TAG -> a
    java.lang.String access$000() -> a
    int getId() -> b
    android.view.Surface getSurface() -> c
    void shutdown() -> d
com.google.vr.ndk.base.ExternalSurface$1 -> com.google.vr.ndk.base.o:
    com.google.vr.ndk.base.ExternalSurface this$0 -> b
    com.google.vr.ndk.base.GvrLayout$ExternalSurfaceListener val$listener -> a
com.google.vr.ndk.base.ExternalSurface$2 -> com.google.vr.ndk.base.p:
    com.google.vr.ndk.base.GvrLayout$ExternalSurfaceListener val$listener -> a
com.google.vr.ndk.base.FadeOverlayView -> com.google.vr.ndk.base.t:
    java.lang.Runnable fadeUpdateRunnable -> h
    long fadeStartTimeMillis -> b
    boolean flushAutoFadeOnVisible -> e
    float fadeStartOpacity -> c
    boolean visible -> f
    long fadeDurationMillis -> d
    boolean autoFadeEnabled -> g
    android.os.Handler autoFadeHandler -> i
    int fadeType -> a
    void access$000(com.google.vr.ndk.base.FadeOverlayView) -> a
    void flushAutoFade() -> a
    void startFade(int,long,int) -> a
    void onInvisible() -> b
    void onVisible() -> c
    void endFade() -> d
    void removeFadeCallbacks() -> e
    void updateFade() -> f
com.google.vr.ndk.base.FadeOverlayView$1 -> com.google.vr.ndk.base.r:
    com.google.vr.ndk.base.FadeOverlayView this$0 -> a
com.google.vr.ndk.base.FadeOverlayView$2 -> com.google.vr.ndk.base.s:
    com.google.vr.ndk.base.FadeOverlayView this$0 -> a
com.google.vr.ndk.base.GvrApi -> com.google.vr.ndk.base.GvrApi:
    java.util.ArrayList swapChainRefs -> h
    long nativeGvrContext -> c
    com.google.vr.cardboard.VrParamsProvider vrParamsProvider -> f
    boolean IS_ROBOLECTRIC_BUILD -> a
    com.google.vr.ndk.base.GvrApi$PoseTracker sPoseTrackerForTesting -> b
    android.content.Context context -> e
    com.google.vr.cardboard.DisplaySynchronizer displaySynchronizer -> g
    boolean ownsNativeGvrContext -> d
    com.google.vr.cardboard.DisplaySynchronizer createDefaultDisplaySynchronizer(android.content.Context) -> a
    com.google.vr.ndk.base.ExternalSurface createExternalSurface(com.google.vr.ndk.base.GvrLayout$ExternalSurfaceListener,android.os.Handler) -> a
    void dumpDebugData() -> a
    boolean isFeatureSupported(int) -> a
    void requestContextSharing(com.google.vr.cardboard.EglReadyListener) -> a
    void requestFeatures(android.content.Context,long,com.google.vr.ndk.base.UserPrefs$RuntimeFeature[],com.google.vr.ndk.base.UserPrefs$RuntimeFeature[],android.app.PendingIntent) -> a
    void resumeTrackingSetState(byte[]) -> a
    boolean setAsyncReprojectionEnabled(boolean) -> a
    void setIdleListener(com.google.vr.ndk.base.GvrApi$IdleListener) -> a
    void setLensOffset(float,float,float) -> a
    boolean getAsyncReprojectionEnabled() -> b
    void setIgnoreManualTrackerPauseResume(boolean) -> b
    boolean usingDynamicLibrary(android.content.Context) -> b
    long getNativeGvrContext() -> c
    void setApplicationState(android.content.Context) -> c
    com.google.common.logging.Vr$VREvent$SdkConfigurationParams getSdkConfigurationParams() -> d
    int getViewerType() -> e
    boolean isOpenGLKHRDebugEnabled() -> f
    void onPauseReprojectionThread() -> g
    void onSurfaceChangedReprojectionThread() -> h
    void onSurfaceCreatedReprojectionThread() -> i
    void pause() -> j
    byte[] pauseTrackingGetState() -> k
    void recenterTracking() -> l
    android.graphics.Point renderReprojectionThread() -> m
    void resume() -> n
    void shutdown() -> o
    boolean usingShimLibrary() -> p
    boolean usingVrDisplayService() -> q
com.google.vr.ndk.base.GvrLayout -> com.google.vr.ndk.base.u:
    com.google.vr.vrcore.library.api.IGvrLayout impl -> a
    com.google.vr.ndk.base.ExternalSurface videoSurface -> d
    com.google.vr.ndk.base.GvrApi gvrApi -> c
    com.google.vr.ndk.base.GvrUiLayout uiLayout -> b
    boolean enableAsyncReprojectionVideoSurface(com.google.vr.ndk.base.GvrLayout$ExternalSurfaceListener,android.os.Handler,boolean) -> a
    void onPause() -> a
    boolean setAsyncReprojectionEnabled(boolean) -> a
    void onResume() -> b
    void shutdown() -> c
    void init() -> d
com.google.vr.ndk.base.GvrLayout$ExternalSurfaceListener -> com.google.vr.ndk.base.u$a:
com.google.vr.ndk.base.GvrLayoutFactory -> com.google.vr.ndk.base.v:
    com.google.vr.vrcore.library.api.IGvrLayout create(android.content.Context) -> a
    com.google.vr.vrcore.library.api.IGvrLayout createFromCurrentPackage(android.content.Context) -> b
    com.google.vr.vrcore.library.api.IGvrLayout tryCreateFromVrCorePackage(android.content.Context) -> c
com.google.vr.ndk.base.GvrLayoutImpl -> com.google.vr.ndk.base.C:
    com.google.vr.cardboard.EglReadyListener eglReadyListener -> j
    boolean autoFadeEnabled -> m
    com.google.vr.ndk.base.ExternalSurface videoSurface -> v
    com.google.vr.ndk.base.DaydreamUtilsWrapper daydreamUtils -> b
    java.lang.Runnable showRenderingViewsRunnable -> x
    boolean isResumed -> u
    boolean stereoModeEnabled -> w
    android.widget.FrameLayout presentationLayout -> c
    com.google.vr.ndk.base.GvrLayoutImpl$FrameFlushWorkaround frameFlushWorkaround -> z
    com.google.vr.ndk.base.FadeOverlayView fadeOverlayView -> l
    com.google.vr.ndk.base.CardboardEmulator cardboardEmulator -> q
    com.google.vr.cardboard.EglFactory eglFactory -> k
    com.google.vr.ndk.base.GvrLayoutImpl$PresentationHelper presentationHelper -> n
    com.google.vr.cardboard.DisplaySynchronizer displaySynchronizer -> e
    boolean attachedToWindow -> A
    com.google.vr.ndk.base.VrCoreSdkClient vrCoreSdkClient -> o
    com.google.vr.ndk.base.GvrLayoutImpl$PresentationFactory sOptionalPresentationFactory -> a
    int asyncReprojectionFlags -> g
    com.google.vr.ndk.base.SdkDaydreamTouchListener daydreamTouchListener -> p
    com.google.vr.ndk.base.ExtensionManager extensionManager -> r
    com.google.vr.ndk.base.GvrUiLayoutImpl uiLayout -> d
    com.google.vr.cardboard.AndroidPCompat androidPCompat -> s
    com.google.vr.ndk.base.GvrLayoutImpl$ScreenOnManager screenOnManager -> y
    com.google.vr.cardboard.ScanlineRacingRenderer scanlineRacingRenderer -> i
    com.google.vr.ndk.base.GvrApi gvrApi -> t
    com.google.vr.ndk.base.GvrLayoutImpl$AsyncReprojectionSurfaceView scanlineRacingView -> h
    android.view.View presentationView -> f
    void access$000(com.google.vr.ndk.base.GvrLayoutImpl,int) -> a
    com.google.vr.ndk.base.VrCoreSdkClient access$100(com.google.vr.ndk.base.GvrLayoutImpl) -> a
    com.google.vr.ndk.base.GvrLayoutImpl$PresentationFactory access$500() -> a
    com.google.vr.ndk.base.VrCoreSdkClient createVrCoreSdkClient(android.content.Context,com.google.vr.ndk.base.GvrApi,com.google.vr.ndk.base.DaydreamUtilsWrapper,com.google.vr.ndk.base.FadeOverlayView) -> a
    boolean enableAsyncReprojection(int) -> a
    boolean enableCardboardTriggerEmulation(java.lang.Runnable) -> a
    void init(com.google.vr.ndk.base.ExtensionManager) -> a
    void initWithInjectedObjects(com.google.vr.ndk.base.GvrApi,com.google.vr.cardboard.DisplaySynchronizer,com.google.vr.cardboard.EglReadyListener,com.google.vr.ndk.base.FadeOverlayView,com.google.vr.ndk.base.DaydreamUtilsWrapper,com.google.vr.ndk.base.ExtensionManager,com.google.vr.ndk.base.GvrUiLayoutImpl,com.google.vr.cardboard.AndroidPCompat) -> a
    void lambda$setStereoModeEnabled$0$GvrLayoutImpl(boolean) -> a
    void setPresentationView(android.view.View) -> a
    void setReentryIntent(android.app.PendingIntent) -> a
    com.google.vr.cardboard.ScanlineRacingRenderer access$200(com.google.vr.ndk.base.GvrLayoutImpl) -> b
    com.google.vr.ndk.base.SdkDaydreamTouchListener createDaydreamTouchListener() -> b
    boolean setOnDonNotNeededListener(java.lang.Runnable) -> b
    void setStereoModeEnabled(boolean) -> b
    void updateRenderingViewsVisibility(int) -> b
    com.google.vr.ndk.base.GvrUiLayoutImpl access$300(com.google.vr.ndk.base.GvrLayoutImpl) -> c
    com.google.vr.ndk.base.GvrApi getGvrApi() -> c
    void setStereoModeEnabledImpl(boolean) -> c
    com.google.vr.ndk.base.GvrUiLayoutImpl getUiLayoutImpl() -> d
    com.google.vr.ndk.base.VrCoreSdkClient getVrCoreSdkClient() -> e
    boolean isPresenting() -> f
    void onBackPressed() -> g
    void onPause() -> h
    void onResume() -> i
    void shutdown() -> j
    void addScanlineRacingView() -> k
    boolean isContextSharingEnabled() -> l
    boolean isDeviceDetectionEnabled() -> m
    boolean isDimUiEnabled() -> n
    com.google.vr.ndk.base.GvrLayoutImpl$PresentationHelper tryCreatePresentationHelper() -> o
    void updateFadeVisibility() -> p
    void updateMarginsForDisplayCutout() -> q
    void updateUiLayout() -> r
com.google.vr.ndk.base.GvrLayoutImpl$$Lambda$0 -> com.google.vr.ndk.base.w:
    com.google.vr.ndk.base.GvrLayoutImpl arg$1 -> a
    boolean arg$2 -> b
com.google.vr.ndk.base.GvrLayoutImpl$1 -> com.google.vr.ndk.base.x:
    com.google.vr.ndk.base.GvrLayoutImpl this$0 -> a
com.google.vr.ndk.base.GvrLayoutImpl$2 -> com.google.vr.ndk.base.y:
    com.google.vr.ndk.base.GvrLayoutImpl this$0 -> a
com.google.vr.ndk.base.GvrLayoutImpl$3 -> com.google.vr.ndk.base.z:
    com.google.vr.ndk.base.GvrLayoutImpl this$0 -> a
com.google.vr.ndk.base.GvrLayoutImpl$4 -> com.google.vr.ndk.base.A:
    com.google.vr.ndk.base.GvrLayoutImpl this$0 -> a
com.google.vr.ndk.base.GvrLayoutImpl$AsyncReprojectionSurfaceView -> com.google.vr.ndk.base.C$a:
    com.google.vr.cardboard.ScanlineRacingRenderer scanlineRacingRenderer -> n
    com.google.vr.cardboard.ScanlineRacingRenderer access$400(com.google.vr.ndk.base.GvrLayoutImpl$AsyncReprojectionSurfaceView) -> a
    void setRenderer(com.google.vr.cardboard.ScanlineRacingRenderer) -> a
com.google.vr.ndk.base.GvrLayoutImpl$AsyncReprojectionSurfaceView$1 -> com.google.vr.ndk.base.B:
    com.google.vr.ndk.base.GvrLayoutImpl$AsyncReprojectionSurfaceView this$0 -> a
com.google.vr.ndk.base.GvrLayoutImpl$FrameFlushWorkaround -> com.google.vr.ndk.base.C$b:
    android.view.Choreographer choreographer -> a
    int framesRemaining -> b
    void onResume() -> a
com.google.vr.ndk.base.GvrLayoutImpl$PresentationFactory -> com.google.vr.ndk.base.C$c:
    android.app.Presentation create(android.content.Context,android.view.Display) -> a
com.google.vr.ndk.base.GvrLayoutImpl$PresentationHelper -> com.google.vr.ndk.base.C$d:
    android.hardware.display.DisplayManager displayManager -> c
    android.widget.RelativeLayout$LayoutParams layout -> a
    android.content.Context context -> b
    android.widget.FrameLayout originalParent -> e
    java.lang.String externalDisplayName -> h
    android.app.Presentation presentation -> i
    com.google.vr.cardboard.DisplaySynchronizer displaySynchronizer -> d
    java.util.List listeners -> g
    android.view.View view -> f
    void detachViewFromParent(android.view.View) -> a
    boolean isPresenting() -> a
    boolean isValidExternalDisplay(android.view.Display) -> a
    void onDetachedFromWindow() -> b
    void setDisplay(android.view.Display) -> b
    void onPause() -> c
    void onResume() -> d
    void shutdown() -> e
    boolean hasCurrentPresentationExpired() -> f
com.google.vr.ndk.base.GvrLayoutImpl$PresentationListener -> com.google.vr.ndk.base.C$e:
    void onPresentationStarted(android.view.Display) -> a
    void onPresentationStopped() -> a
com.google.vr.ndk.base.GvrLayoutImpl$ScreenOnManager -> com.google.vr.ndk.base.C$f:
    long lastResumeTimeMillis -> e
    long QUIET_PERIOD_AFTER_RESUME_MILLIS -> a
    boolean isEnabled -> b
    boolean isResumed -> c
    boolean isIdle -> d
    android.view.View parentView -> f
    boolean access$1000(com.google.vr.ndk.base.GvrLayoutImpl$ScreenOnManager) -> a
    boolean access$1002(com.google.vr.ndk.base.GvrLayoutImpl$ScreenOnManager,boolean) -> a
    long access$900() -> a
    void setEnabled(boolean) -> a
    boolean access$600(com.google.vr.ndk.base.GvrLayoutImpl$ScreenOnManager) -> b
    boolean access$602(com.google.vr.ndk.base.GvrLayoutImpl$ScreenOnManager,boolean) -> b
    void onPause() -> b
    void access$700(com.google.vr.ndk.base.GvrLayoutImpl$ScreenOnManager) -> c
    void onResume() -> c
    long access$800(com.google.vr.ndk.base.GvrLayoutImpl$ScreenOnManager) -> d
    void updateSetScreenOn() -> d
com.google.vr.ndk.base.GvrLayoutImpl$ScreenOnManager$1 -> com.google.vr.ndk.base.D:
    com.google.vr.ndk.base.GvrLayoutImpl$ScreenOnManager this$0 -> b
    boolean val$newIsEnabled -> a
com.google.vr.ndk.base.GvrLayoutImpl$ScreenOnManager$2 -> com.google.vr.ndk.base.E:
    com.google.vr.ndk.base.GvrLayoutImpl$ScreenOnManager this$0 -> b
    boolean val$newIsIdle -> a
com.google.vr.ndk.base.GvrLayoutImplWrapper -> com.google.vr.ndk.base.F:
    com.google.vr.ndk.base.GvrLayoutImpl impl -> b
    boolean enableAsyncReprojection(int) -> b
    void onResume() -> b
    void setStereoModeEnabled(boolean) -> b
    void onPause() -> c
    boolean enableCardboardTriggerEmulation(com.google.vr.vrcore.library.api.IObjectWrapper) -> d
    com.google.vr.vrcore.library.api.IObjectWrapper getRootView() -> d
    boolean setOnDonNotNeededListener(com.google.vr.vrcore.library.api.IObjectWrapper) -> e
    void setReentryIntent(com.google.vr.vrcore.library.api.IObjectWrapper) -> f
    void setPresentationView(com.google.vr.vrcore.library.api.IObjectWrapper) -> g
    long getNativeGvrContext() -> h
    void onBackPressed() -> o
    com.google.vr.vrcore.library.api.IGvrUiLayout getUiLayout() -> r
com.google.vr.ndk.base.GvrSurfaceView -> com.google.vr.ndk.base.H:
    android.opengl.GLSurfaceView$EGLConfigChooser mEGLConfigChooser -> e
    android.opengl.GLSurfaceView$EGLWindowSurfaceFactory mEGLWindowSurfaceFactory -> g
    android.opengl.GLSurfaceView$EGLContextFactory mEGLContextFactory -> f
    int mEGLContextClientVersion -> j
    boolean mPreserveEGLContextOnPause -> k
    int mDebugFlags -> i
    boolean mPreserveGlThreadOnDetachedFromWindow -> l
    com.google.vr.cardboard.EglReadyListener mAppContextListener -> m
    android.opengl.GLSurfaceView$Renderer mRenderer -> c
    java.lang.ref.WeakReference mThisWeakRef -> a
    com.google.vr.ndk.base.GvrSurfaceView$GLThread mGLThread -> b
    com.google.vr.ndk.base.GvrSurfaceView$GLWrapper mGLWrapper -> h
    boolean mDetached -> d
    android.opengl.GLSurfaceView$Renderer access$1000(com.google.vr.ndk.base.GvrSurfaceView) -> a
    boolean isDetachedFromWindow() -> a
    void onPause(java.lang.Runnable) -> a
    int access$200(com.google.vr.ndk.base.GvrSurfaceView) -> b
    void onPause() -> b
    void onSurfaceDestroyed(java.lang.Runnable) -> b
    com.google.vr.cardboard.EglReadyListener access$300(com.google.vr.ndk.base.GvrSurfaceView) -> c
    void onResume() -> c
    android.opengl.GLSurfaceView$EGLContextFactory access$400(com.google.vr.ndk.base.GvrSurfaceView) -> d
    void requestExitAndWait() -> d
    android.opengl.GLSurfaceView$EGLConfigChooser access$500(com.google.vr.ndk.base.GvrSurfaceView) -> e
    void checkRenderThreadState() -> e
    android.opengl.GLSurfaceView$EGLWindowSurfaceFactory access$600(com.google.vr.ndk.base.GvrSurfaceView) -> f
    void init() -> f
    com.google.vr.ndk.base.GvrSurfaceView$GLWrapper access$700(com.google.vr.ndk.base.GvrSurfaceView) -> g
    int access$800(com.google.vr.ndk.base.GvrSurfaceView) -> h
    boolean access$900(com.google.vr.ndk.base.GvrSurfaceView) -> i
com.google.vr.ndk.base.GvrSurfaceView$1 -> com.google.vr.ndk.base.G:
com.google.vr.ndk.base.GvrSurfaceView$BaseConfigChooser -> com.google.vr.ndk.base.H$a:
    int[] mConfigSpec -> a
    com.google.vr.ndk.base.GvrSurfaceView this$0 -> b
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> a
    int[] filterConfigSpec(int[]) -> a
com.google.vr.ndk.base.GvrSurfaceView$ComponentSizeChooser -> com.google.vr.ndk.base.H$b:
    int[] mValue -> c
    int mDepthSize -> h
    int mStencilSize -> i
    int mBlueSize -> f
    int mAlphaSize -> g
    int mRedSize -> d
    int mGreenSize -> e
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> a
    int findConfigAttrib(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int) -> a
com.google.vr.ndk.base.GvrSurfaceView$DefaultContextFactory -> com.google.vr.ndk.base.H$c:
    com.google.vr.ndk.base.GvrSurfaceView this$0 -> a
com.google.vr.ndk.base.GvrSurfaceView$DefaultWindowSurfaceFactory -> com.google.vr.ndk.base.H$d:
com.google.vr.ndk.base.GvrSurfaceView$EglHelper -> com.google.vr.ndk.base.H$e:
    javax.microedition.khronos.egl.EGL10 mEgl -> b
    javax.microedition.khronos.egl.EGLContext mPendingEglContext -> g
    javax.microedition.khronos.egl.EGLDisplay mPendingEglDisplay -> h
    javax.microedition.khronos.egl.EGLConfig mEglConfig -> e
    javax.microedition.khronos.egl.EGLContext mEglContext -> f
    java.lang.ref.WeakReference mGvrSurfaceViewWeakRef -> a
    javax.microedition.khronos.egl.EGLSurface mEglSurface -> d
    javax.microedition.khronos.egl.EGLDisplay mEglDisplay -> c
    javax.microedition.khronos.opengles.GL createGL() -> a
    java.lang.String formatEglError(java.lang.String,int) -> a
    java.lang.String getErrorString(int) -> a
    void logEglErrorAsWarning(java.lang.String,java.lang.String,int) -> a
    void setEglSurfaceAttrib(int,int) -> a
    void throwEglException(java.lang.String) -> a
    boolean createSurface() -> b
    java.lang.String getHex(int) -> b
    void throwEglException(java.lang.String,int) -> b
    void destroySurface() -> c
    void finish() -> d
    void renewPendingEglContext() -> e
    void start() -> f
    int swap() -> g
    void createPendingEglContext() -> h
    void destroySurfaceImp() -> i
    void initialize() -> j
com.google.vr.ndk.base.GvrSurfaceView$GLThread -> com.google.vr.ndk.base.H$f:
    int mRenderMode -> n
    int mRequestedSwapMode -> o
    int mWidth -> l
    int mHeight -> m
    boolean mRequestRender -> p
    boolean mHaveEglSurface -> i
    boolean mFinishedCreatingEglSurface -> j
    boolean mShouldReleaseEglContext -> k
    boolean mWantRenderNotification -> q
    com.google.vr.ndk.base.GvrSurfaceView$GLThread$GLThreadManager mGLThreadManager -> w
    boolean mRenderComplete -> r
    boolean mSizeChanged -> t
    com.google.vr.ndk.base.GvrSurfaceView$EglHelper mEglHelper -> u
    java.lang.ref.WeakReference mGvrSurfaceViewWeakRef -> v
    boolean mHasSurface -> e
    boolean mSurfaceIsBad -> f
    boolean mWaitingForSurface -> g
    boolean mHaveEglContext -> h
    boolean mShouldExit -> a
    java.util.ArrayList mEventQueue -> s
    boolean mExited -> b
    boolean mRequestPaused -> c
    boolean mPaused -> d
    boolean access$1102(com.google.vr.ndk.base.GvrSurfaceView$GLThread,boolean) -> a
    void onEglReady() -> a
    void onPause(java.lang.Runnable) -> a
    void onWindowResize(int,int) -> a
    void setRenderMode(int) -> a
    boolean ableToDraw() -> b
    void setSwapMode(int) -> b
    void surfaceDestroyed(java.lang.Runnable) -> b
    int getRenderMode() -> c
    int getSwapMode() -> d
    void onResume() -> e
    void requestExitAndWait() -> f
    void requestRenderAndWait() -> g
    void surfaceCreated() -> h
    void guardedRun() -> i
    boolean readyToDraw() -> j
    void stopEglContextLocked() -> k
    void stopEglSurfaceLocked() -> l
com.google.vr.ndk.base.GvrSurfaceView$GLThread$GLThreadManager -> com.google.vr.ndk.base.H$f$a:
    void releaseEglContextLocked(com.google.vr.ndk.base.GvrSurfaceView$GLThread) -> a
    void threadExiting(com.google.vr.ndk.base.GvrSurfaceView$GLThread) -> b
com.google.vr.ndk.base.GvrSurfaceView$GLWrapper -> com.google.vr.ndk.base.H$g:
com.google.vr.ndk.base.GvrSurfaceView$LogWriter -> com.google.vr.ndk.base.H$h:
    java.lang.StringBuilder mBuilder -> a
    void flushBuilder() -> a
com.google.vr.ndk.base.GvrSurfaceView$SimpleEGLConfigChooser -> com.google.vr.ndk.base.H$i:
com.google.vr.ndk.base.GvrUiLayout -> com.google.vr.ndk.base.I:
    com.google.vr.vrcore.library.api.IGvrUiLayout impl -> a
    void setCloseButtonListener(java.lang.Runnable) -> a
    void setTransitionViewEnabled(boolean) -> a
com.google.vr.ndk.base.GvrUiLayoutImpl -> com.google.vr.ndk.base.P:
    java.lang.Runnable beginDimmingUiLayerRunnable -> d
    java.lang.Runnable delayDimmingUiLayerAfterVisibleRunnable -> c
    com.google.vr.cardboard.UiLayer uiLayer -> e
    android.animation.ObjectAnimator uiLayerDimmingAnimation -> b
    com.google.vr.ndk.base.GvrUiLayoutImpl$CloseButtonListenerWrapper closeButtonListener -> f
    boolean daydreamModeEnabled -> g
    java.lang.Runnable access$000(android.content.Context,com.google.vr.ndk.base.DaydreamUtilsWrapper) -> a
    void delayDimmingUiLayer(long) -> a
    void setSettingsButtonListener(com.google.vr.vrcore.library.api.IObjectWrapper) -> a
    void setTransitionViewEnabled(boolean) -> a
    java.lang.Runnable createDefaultCloseButtonListener(android.content.Context,com.google.vr.ndk.base.DaydreamUtilsWrapper) -> b
    void setTransitionViewListener(com.google.vr.vrcore.library.api.IObjectWrapper) -> b
    void setViewerName(java.lang.String) -> b
    void setCloseButtonListener(com.google.vr.vrcore.library.api.IObjectWrapper) -> c
    void setSettingsButtonEnabled(boolean) -> c
    com.google.vr.vrcore.library.api.IObjectWrapper getRootView() -> d
    void setDaydreamModeEnabled(boolean) -> d
    void bridge$lambda$0$GvrUiLayoutImpl() -> s
    void cancelDimmingUiLayer() -> t
    void delayDimmingUiLayerAfterVisible() -> u
    android.view.ViewGroup getRoot() -> v
    void invokeCloseButtonListener() -> w
    void lambda$setDimmedUiTouchOverride$0$GvrUiLayoutImpl() -> x
    void beginDimmingUiLayer() -> y
    void setDimmedUiTouchOverride() -> z
com.google.vr.ndk.base.GvrUiLayoutImpl$$Lambda$0 -> com.google.vr.ndk.base.J:
    com.google.vr.ndk.base.GvrUiLayoutImpl arg$1 -> a
com.google.vr.ndk.base.GvrUiLayoutImpl$$Lambda$1 -> com.google.vr.ndk.base.K:
    com.google.vr.ndk.base.GvrUiLayoutImpl arg$1 -> a
com.google.vr.ndk.base.GvrUiLayoutImpl$$Lambda$2 -> com.google.vr.ndk.base.L:
    com.google.vr.ndk.base.GvrUiLayoutImpl arg$1 -> a
com.google.vr.ndk.base.GvrUiLayoutImpl$1 -> com.google.vr.ndk.base.M:
    android.content.Context val$context -> a
    android.content.Intent val$homeIntent -> b
com.google.vr.ndk.base.GvrUiLayoutImpl$2 -> com.google.vr.ndk.base.N:
    android.content.Intent val$homeIntent -> b
    android.app.Activity val$activity -> a
com.google.vr.ndk.base.GvrUiLayoutImpl$3 -> com.google.vr.ndk.base.O:
    android.app.Activity val$activity -> a
com.google.vr.ndk.base.GvrUiLayoutImpl$CloseButtonListenerWrapper -> com.google.vr.ndk.base.P$a:
    android.content.Context context -> a
    java.lang.Runnable activeCloseButtonListener -> d
    java.lang.Runnable passiveCloseButtonListener -> c
    java.lang.Runnable defaultCloseButtonListener -> b
    boolean invokingCloseButton -> e
    void setClientCloseButtonListener(java.lang.Runnable) -> a
com.google.vr.ndk.base.SdkConfigurationReader -> com.google.vr.ndk.base.Q:
    com.google.common.logging.Vr$VREvent$SdkConfigurationParams DEFAULT_PARAMS -> c
    com.google.common.logging.Vr$VREvent$SdkConfigurationParams sParams -> b
    com.google.common.logging.Vr$VREvent$SdkConfigurationParams REQUESTED_PARAMS -> a
    com.google.common.logging.Vr$VREvent$SdkConfigurationParams getParams(android.content.Context) -> a
    com.google.common.logging.Vr$VREvent$SdkConfigurationParams readParamsFromProvider(com.google.vr.cardboard.VrParamsProvider) -> a
com.google.vr.ndk.base.SdkDaydreamTouchListener -> com.google.vr.ndk.base.T:
    com.google.vr.cardboard.VrParamsProvider vrParamsProvider -> t
    com.google.vr.ndk.base.GvrLayoutImpl gvrLayout -> u
    boolean isDaydreamImageAlignmentEnabled -> w
    com.google.vr.ndk.base.GvrApi gvrApi -> v
    com.google.vr.cardboard.VrParamsProvider access$200(com.google.vr.ndk.base.SdkDaydreamTouchListener) -> a
    void access$300(com.google.vr.ndk.base.SdkDaydreamTouchListener,android.util.DisplayMetrics,com.google.vr.sdk.proto.Display$DisplayParams,com.google.vr.cardboard.AndroidPCompat$DisplayCutoutCompat) -> a
    boolean isDaydreamImageAlignmentEnabled() -> a
    void logEvent(int,com.google.common.logging.nano.Vr$VREvent) -> a
    void setLensOffset(float,float,float) -> a
    void init(android.util.DisplayMetrics,com.google.vr.sdk.proto.Display$DisplayParams,com.google.vr.cardboard.AndroidPCompat$DisplayCutoutCompat) -> b
    void refreshViewerProfile() -> c
    void shutdown() -> d
com.google.vr.ndk.base.SdkDaydreamTouchListener$1 -> com.google.vr.ndk.base.S:
com.google.vr.ndk.base.SdkDaydreamTouchListener$FinishInitializationTask -> com.google.vr.ndk.base.T$a:
    android.view.Display display -> a
    com.google.vr.ndk.base.SdkDaydreamTouchListener this$0 -> b
    com.google.vr.sdk.proto.Display$DisplayParams doInBackground(java.lang.Void[]) -> a
    void onPostExecute(com.google.vr.sdk.proto.Display$DisplayParams) -> a
    void onProgressUpdate(java.lang.Void[]) -> b
com.google.vr.ndk.base.SdkDaydreamTouchListener$RefreshViewerProfileTask -> com.google.vr.ndk.base.T$b:
    com.google.vr.ndk.base.SdkDaydreamTouchListener this$0 -> a
    com.google.vr.sdk.proto.nano.CardboardDevice$DeviceParams doInBackground(java.lang.Void[]) -> a
    void onPostExecute(com.google.vr.sdk.proto.nano.CardboardDevice$DeviceParams) -> a
    void onProgressUpdate(java.lang.Void[]) -> b
com.google.vr.ndk.base.SwapChain -> com.google.vr.ndk.base.U:
    long nativeSwapChain -> b
    java.lang.String TAG -> a
    void shutdown() -> a
com.google.vr.ndk.base.TraceCompat -> com.google.vr.ndk.base.V:
    void beginSection(java.lang.String) -> a
    void endSection() -> a
com.google.vr.ndk.base.UserPrefs -> com.google.vr.ndk.base.W:
    long nativeUserPrefs -> a
    boolean isFeatureEnabled(com.google.vr.ndk.base.UserPrefs$RuntimeFeature) -> a
com.google.vr.ndk.base.UserPrefs$RuntimeFeature -> com.google.vr.ndk.base.W$a:
    java.lang.String prefKey -> f
    com.google.vr.ndk.base.UserPrefs$RuntimeFeature GVR_BETA_FEATURE_SEE_THROUGH -> b
    com.google.vr.ndk.base.UserPrefs$RuntimeFeature[] $VALUES -> c
    int id -> d
    com.google.vr.ndk.base.UserPrefs$RuntimeFeature GVR_BETA_FEATURE_DAYDREAM_6DOF_CONTROLLER -> a
    java.lang.String tag -> e
    com.google.vr.ndk.base.UserPrefs$RuntimeFeature fromId(int) -> a
    com.google.vr.ndk.base.UserPrefs$RuntimeFeature[] fromIds(int[]) -> a
com.google.vr.ndk.base.Version -> com.google.vr.ndk.base.X:
    com.google.vr.ndk.base.Version MIN -> b
    com.google.vr.ndk.base.Version CURRENT -> a
    int minorVersion -> d
    int patchVersion -> e
    int majorVersion -> c
    boolean isAtLeast(com.google.vr.ndk.base.Version) -> a
    com.google.vr.ndk.base.Version parse(java.lang.String) -> a
com.google.vr.ndk.base.VrCoreSdkClient -> com.google.vr.ndk.base.ba:
    android.content.Context context -> a
    com.google.vr.vrcore.common.api.IDaydreamManager daydreamManager -> m
    com.google.vr.ndk.base.VrCoreSdkClient$DaydreamListenerImpl daydreamListener -> g
    android.app.AlertDialog helpCenterDialog -> o
    android.content.ComponentName componentName -> c
    java.lang.Runnable onDonNotNeededListener -> r
    boolean isBound -> i
    boolean isResumed -> j
    boolean isEnabled -> k
    android.content.ServiceConnection serviceConnection -> s
    com.google.vr.ndk.base.GvrApi gvrApi -> b
    com.google.vr.vrcore.logging.api.IVrCoreLoggingService loggingService -> n
    java.lang.Runnable closeVrRunnable -> e
    com.google.vr.vrcore.common.api.IVrCoreSdkService vrCoreSdkService -> l
    android.app.PendingIntent optionalReentryIntent -> q
    com.google.vr.ndk.base.DaydreamUtilsWrapper daydreamUtils -> d
    boolean shouldBind -> h
    int vrCoreClientApiVersion -> p
    com.google.vr.ndk.base.FadeOverlayView fadeOverlayView -> f
    void access$000(com.google.vr.ndk.base.VrCoreSdkClient) -> a
    void access$1000(com.google.vr.ndk.base.VrCoreSdkClient,com.google.vr.vrcore.common.api.HeadTrackingState) -> a
    com.google.vr.vrcore.common.api.IVrCoreSdkService access$102(com.google.vr.ndk.base.VrCoreSdkClient,com.google.vr.vrcore.common.api.IVrCoreSdkService) -> a
    com.google.vr.vrcore.logging.api.IVrCoreLoggingService access$1102(com.google.vr.ndk.base.VrCoreSdkClient,com.google.vr.vrcore.logging.api.IVrCoreLoggingService) -> a
    void access$1400(com.google.vr.ndk.base.GvrApi,com.google.vr.vrcore.common.api.HeadTrackingState) -> a
    com.google.vr.vrcore.common.api.IDaydreamManager access$202(com.google.vr.ndk.base.VrCoreSdkClient,com.google.vr.vrcore.common.api.IDaydreamManager) -> a
    com.google.vr.vrcore.common.api.HeadTrackingState getHeadTrackingState() -> a
    boolean hasCompatibleSdkService(android.content.Context) -> a
    int prepareVr(com.google.vr.vrcore.common.api.HeadTrackingState) -> a
    void setEnabled(boolean) -> a
    void setOnDonNotNeededListener(java.lang.Runnable) -> a
    void setReentryIntent(android.app.PendingIntent) -> a
    com.google.vr.vrcore.common.api.IVrCoreSdkService access$100(com.google.vr.ndk.base.VrCoreSdkClient) -> b
    int access$600(com.google.vr.ndk.base.VrCoreSdkClient,com.google.vr.vrcore.common.api.HeadTrackingState) -> b
    com.google.vr.vrcore.logging.api.IVrCoreLoggingService getLoggingService() -> b
    void resumeTracking(com.google.vr.ndk.base.GvrApi,com.google.vr.vrcore.common.api.HeadTrackingState) -> b
    void resumeTracking(com.google.vr.vrcore.common.api.HeadTrackingState) -> b
    com.google.vr.vrcore.common.api.IDaydreamManager access$200(com.google.vr.ndk.base.VrCoreSdkClient) -> c
    void onExitingFromVr() -> c
    void access$300(com.google.vr.ndk.base.VrCoreSdkClient) -> d
    void onPause() -> d
    android.content.ComponentName access$400(com.google.vr.ndk.base.VrCoreSdkClient) -> e
    boolean onResume() -> e
    com.google.vr.ndk.base.VrCoreSdkClient$DaydreamListenerImpl access$500(com.google.vr.ndk.base.VrCoreSdkClient) -> f
    boolean doBind() -> f
    java.lang.Runnable access$700(com.google.vr.ndk.base.VrCoreSdkClient) -> g
    void doUnbind() -> g
    void access$800(com.google.vr.ndk.base.VrCoreSdkClient) -> h
    void handleBindFailed() -> h
    boolean access$900(com.google.vr.ndk.base.VrCoreSdkClient) -> i
    void handleNoDaydreamManager() -> i
    void handlePrepareVrFailed() -> j
    void warnIfIncompatibleClient() -> k
com.google.vr.ndk.base.VrCoreSdkClient$1 -> com.google.vr.ndk.base.Y:
    com.google.vr.ndk.base.VrCoreSdkClient this$0 -> a
com.google.vr.ndk.base.VrCoreSdkClient$DaydreamListenerImpl -> com.google.vr.ndk.base.ba$a:
    android.os.Handler safeguardHandler -> e
    java.lang.ref.WeakReference closeVrRunnableWeak -> d
    java.lang.ref.WeakReference fadeOverlayViewWeak -> c
    java.lang.ref.WeakReference gvrApiWeak -> b
    void access$1200(com.google.vr.ndk.base.VrCoreSdkClient$DaydreamListenerImpl,int,long,int) -> a
    void access$1300(com.google.vr.ndk.base.VrCoreSdkClient$DaydreamListenerImpl,com.google.vr.vrcore.common.api.HeadTrackingState) -> a
    void applyColorfulFade(int,long,int) -> a
    void applyFade(int,long) -> a
    void deprecated_setLensOffsets(float,float,float,float) -> a
    void resumeHeadTracking(com.google.vr.vrcore.common.api.HeadTrackingState) -> a
    void setLensOffset(float,float,float) -> a
    void applyColorfulFadeImpl(int,long,int) -> b
    void rescheduleSafeguard(int,long) -> b
    void resumeHeadTrackingImpl(com.google.vr.vrcore.common.api.HeadTrackingState) -> b
    void cancelSafeguard(int) -> d
    void recenterHeadTracking() -> f
    com.google.vr.vrcore.common.api.HeadTrackingState requestStopTracking() -> k
    void dumpDebugData() -> n
    void invokeCloseAction() -> p
    int getTargetApiVersion() -> q
    void resetSafeguards() -> s
com.google.vr.ndk.base.VrCoreSdkClient$DaydreamListenerImpl$1 -> com.google.vr.ndk.base.Z:
    com.google.vr.ndk.base.VrCoreSdkClient$DaydreamListenerImpl this$0 -> a
com.google.vr.ndk.base.VrCoreSdkClient$DaydreamListenerImpl$2 -> com.google.vr.ndk.base.aa:
    com.google.vr.ndk.base.FadeOverlayView val$fadeOverlayView -> a
    int val$color -> d
    long val$durationMillis -> c
    int val$fadeType -> b
com.google.vr.sdk.base.CardboardViewApi -> com.google.vr.sdk.base.a:
com.google.vr.sdk.base.CardboardViewNativeImpl -> com.google.vr.sdk.base.CardboardViewNativeImpl:
    java.lang.Runnable cardboardBackListener -> c
    java.lang.Runnable cardboardTriggerListener -> b
    java.lang.String TAG -> a
    long nativeCardboardView -> d
    void runOnCardboardBackListener() -> a
com.google.vr.sdk.base.Eye -> com.google.vr.sdk.base.Eye:
    boolean projectionChanged -> e
    com.google.vr.sdk.base.FieldOfView fov -> d
    float[] eyeView -> b
    int type -> a
    com.google.vr.sdk.base.Viewport viewport -> c
com.google.vr.sdk.base.FieldOfView -> com.google.vr.sdk.base.b:
    float top -> d
    float bottom -> c
    float right -> b
    float left -> a
    void setAngles(float,float,float,float) -> a
com.google.vr.sdk.base.HeadTransform -> com.google.vr.sdk.base.HeadTransform:
    float[] headView -> a
com.google.vr.sdk.base.Viewport -> com.google.vr.sdk.base.Viewport:
    int height -> d
    int y -> b
    int width -> c
    int x -> a
com.google.vr.sdk.deps.a -> a.a.b.a.a.a:
    android.os.IBinder mRemote -> a
    java.lang.String mDescriptor -> b
    android.os.Parcel transactAndReadException(int,android.os.Parcel) -> a
    void transactAndReadExceptionReturnVoid(int,android.os.Parcel) -> b
    void transactOneway(int,android.os.Parcel) -> c
    android.os.Parcel obtainAndWriteInterfaceToken() -> s
com.google.vr.sdk.deps.aa -> a.a.b.a.a.b:
    boolean t() -> s
    int u() -> t
com.google.vr.sdk.deps.ab -> a.a.b.a.a.c:
    void z() -> A
    boolean t() -> s
    int u() -> t
    long s() -> u
    byte A() -> v
    int v() -> w
    long w() -> x
    int x() -> y
    long y() -> z
com.google.vr.sdk.deps.af -> a.a.b.a.a.d:
    java.lang.Object b(java.lang.Class,com.google.vr.sdk.deps.ak) -> a
    void b(java.util.List,com.google.vr.sdk.deps.db,com.google.vr.sdk.deps.ak) -> a
    void i(java.util.List) -> a
    java.lang.Object a(java.lang.Class,com.google.vr.sdk.deps.ak) -> b
    void a(java.util.List) -> b
    void a(java.util.List,com.google.vr.sdk.deps.db,com.google.vr.sdk.deps.ak) -> b
    void h(java.util.List) -> c
    long r() -> c
    void q(java.util.List) -> d
    void g(java.util.List) -> e
    boolean c() -> f
    void p(java.util.List) -> f
    long f() -> g
    void f(java.util.List) -> g
    int j() -> h
    void o(java.util.List) -> h
    void e(java.util.List) -> i
    int s() -> i
    boolean k() -> j
    void m(java.util.List) -> j
    void n(java.util.List) -> k
    long t() -> k
    void d(java.util.List) -> m
    void k(java.util.List) -> n
    void c(java.util.List) -> o
    long g() -> p
    void j(java.util.List) -> p
    void b(java.util.List) -> q
    int p() -> q
    int h() -> r
    int q() -> s
    long i() -> t
com.google.vr.sdk.deps.ag -> a.a.b.a.a.e:
    com.google.vr.sdk.deps.eg a -> c
    java.util.logging.Logger b -> a
    boolean c -> b
    int b(com.google.vr.sdk.deps.cg) -> a
    int b(com.google.vr.sdk.deps.cg,com.google.vr.sdk.deps.db) -> a
    int b(com.google.vr.sdk.deps.o) -> a
    int b(java.lang.String) -> a
    void b(int) -> a
    int c(com.google.vr.sdk.deps.cg) -> b
    void c(int) -> b
    void d(int) -> c
    void e(int) -> d
    int f(int) -> e
    int g(int) -> f
    int h(int) -> g
    int i(int) -> h
    int j(int) -> i
    int k(int) -> j
    int l(int) -> k
com.google.vr.sdk.deps.ag$b -> a.a.b.a.a.e$a:
    int d -> f
    int e -> g
    int c -> e
    byte[] b -> d
    void b(int) -> a
    void a(com.google.vr.sdk.deps.o) -> b
    void a(java.lang.String) -> b
    void c(int) -> b
    void a(com.google.vr.sdk.deps.cg) -> c
    void e(int) -> d
com.google.vr.sdk.deps.ag$c -> a.a.b.a.a.e$b:
    java.nio.ByteBuffer b -> h
    int c -> i
com.google.vr.sdk.deps.ag$d -> a.a.b.a.a.e$c:
com.google.vr.sdk.deps.ag$e -> a.a.b.a.a.e$d:
    java.nio.ByteBuffer c -> e
    java.nio.ByteBuffer b -> d
    void b(int) -> a
    void a(com.google.vr.sdk.deps.cg,com.google.vr.sdk.deps.db) -> b
    void a(com.google.vr.sdk.deps.o) -> b
    void a(java.lang.String) -> b
    void c(int) -> b
    void a(com.google.vr.sdk.deps.cg) -> c
    void e(int) -> d
com.google.vr.sdk.deps.ag$f -> a.a.b.a.a.e$e:
    long h -> j
    long g -> i
    long d -> f
    long f -> h
    long e -> g
    java.nio.ByteBuffer c -> e
    java.nio.ByteBuffer b -> d
    void b(int) -> a
    void a(com.google.vr.sdk.deps.cg,com.google.vr.sdk.deps.db) -> b
    void a(com.google.vr.sdk.deps.o) -> b
    void a(java.lang.String) -> b
    void c(int) -> b
    void a(com.google.vr.sdk.deps.cg) -> c
    void e(int) -> d
com.google.vr.sdk.deps.ah -> a.a.b.a.a.f:
    com.google.vr.sdk.deps.ah a -> b
    double[] b -> c
    int c -> d
com.google.vr.sdk.deps.ai -> a.a.b.a.a.g:
com.google.vr.sdk.deps.aj -> a.a.b.a.a.h:
com.google.vr.sdk.deps.ak -> a.a.b.a.a.i:
    java.util.Map d -> c
    com.google.vr.sdk.deps.ak c -> a
    com.google.vr.sdk.deps.ak a -> b
com.google.vr.sdk.deps.ak$a -> a.a.b.a.a.i$a:
com.google.vr.sdk.deps.al -> a.a.b.a.a.j:
com.google.vr.sdk.deps.am -> a.a.b.a.a.k:
com.google.vr.sdk.deps.an -> a.a.b.a.a.l:
    com.google.vr.sdk.deps.aq c() -> f
com.google.vr.sdk.deps.ao -> a.a.b.a.a.m:
    com.google.vr.sdk.deps.ao d -> a
    com.google.vr.sdk.deps.de a -> b
    boolean b -> c
    boolean c -> d
com.google.vr.sdk.deps.ap -> a.a.b.a.a.n:
    com.google.vr.sdk.deps.ef c() -> f
    com.google.vr.sdk.deps.cl f() -> g
com.google.vr.sdk.deps.aq -> a.a.b.a.a.o:
    com.google.vr.sdk.deps.aq O -> L
    com.google.vr.sdk.deps.aq a -> i
    com.google.vr.sdk.deps.aq L -> H
    com.google.vr.sdk.deps.aq n -> e
    com.google.vr.sdk.deps.aq H -> D
    com.google.vr.sdk.deps.aq j -> a
    com.google.vr.sdk.deps.aq D -> y
    int Z -> ba
    com.google.vr.sdk.deps.aq h -> X
    com.google.vr.sdk.deps.aq z -> u
    com.google.vr.sdk.deps.aq W -> T
    com.google.vr.sdk.deps.aq w -> q
    com.google.vr.sdk.deps.aq S -> P
    com.google.vr.sdk.deps.aq c -> m
    com.google.vr.sdk.deps.aq M -> I
    com.google.vr.sdk.deps.aq b -> j
    com.google.vr.sdk.deps.aq I -> E
    com.google.vr.sdk.deps.aq o -> f
    com.google.vr.sdk.deps.aq F -> A
    com.google.vr.sdk.deps.aq k -> b
    com.google.vr.sdk.deps.ar aa -> ca
    com.google.vr.sdk.deps.aq i -> Y
    com.google.vr.sdk.deps.aq E -> z
    com.google.vr.sdk.deps.aq X -> U
    com.google.vr.sdk.deps.aq A -> v
    com.google.vr.sdk.deps.aq T -> Q
    com.google.vr.sdk.deps.aq d -> r
    com.google.vr.sdk.deps.aq P -> M
    com.google.vr.sdk.deps.aq t -> n
    com.google.vr.sdk.deps.aq r -> k
    com.google.vr.sdk.deps.aq f -> J
    com.google.vr.sdk.deps.aq p -> g
    com.google.vr.sdk.deps.aq[] ac -> aa
    com.google.vr.sdk.deps.aq J -> F
    com.google.vr.sdk.deps.aq l -> c
    com.google.vr.sdk.deps.aq e -> B
    com.google.vr.sdk.deps.aq B -> w
    com.google.vr.sdk.deps.aq Y -> V
    com.google.vr.sdk.deps.aq x -> s
    com.google.vr.sdk.deps.aq U -> R
    com.google.vr.sdk.deps.aq u -> o
    com.google.vr.sdk.deps.aq Q -> N
    com.google.vr.sdk.deps.aq N -> K
    com.google.vr.sdk.deps.aq s -> l
    com.google.vr.sdk.deps.aq K -> G
    com.google.vr.sdk.deps.aq q -> h
    com.google.vr.sdk.deps.aq G -> C
    com.google.vr.sdk.deps.aq m -> d
    com.google.vr.sdk.deps.aq[] ab -> Z
    com.google.vr.sdk.deps.aq g -> W
    com.google.vr.sdk.deps.aq C -> x
    com.google.vr.sdk.deps.aq V -> S
    com.google.vr.sdk.deps.aq y -> t
    com.google.vr.sdk.deps.aq R -> O
    com.google.vr.sdk.deps.aq v -> p
com.google.vr.sdk.deps.ar -> a.a.b.a.a.p:
    boolean e -> f
    com.google.vr.sdk.deps.ar[] f -> e
com.google.vr.sdk.deps.as -> a.a.b.a.a.q:
    float[] b -> c
    int c -> d
    com.google.vr.sdk.deps.as a -> b
com.google.vr.sdk.deps.at -> a.a.b.a.a.r:
com.google.vr.sdk.deps.au -> a.a.b.a.a.s:
com.google.vr.sdk.deps.av -> a.a.b.a.a.t:
    java.util.Map defaultInstanceMap -> b
    com.google.vr.sdk.deps.ds unknownFields -> c
    int memoizedSerializedSize -> d
    java.lang.Object dynamicMethod(com.google.vr.sdk.deps.av$d) -> a
    java.lang.Object dynamicMethod(com.google.vr.sdk.deps.av$d,java.lang.Object) -> a
    java.lang.Object dynamicMethod(com.google.vr.sdk.deps.av$d,java.lang.Object,java.lang.Object) -> a
    com.google.vr.sdk.deps.av getDefaultInstance(java.lang.Class) -> a
    java.lang.Object invokeOrDie(java.lang.reflect.Method,java.lang.Object,java.lang.Object[]) -> a
    boolean isInitialized(com.google.vr.sdk.deps.av,boolean) -> a
    com.google.vr.sdk.deps.bi mutableCopy(com.google.vr.sdk.deps.bi) -> a
    java.lang.Object newMessageInfo(com.google.vr.sdk.deps.cg,java.lang.String,java.lang.Object[]) -> a
    com.google.vr.sdk.deps.av parsePartialFrom(com.google.vr.sdk.deps.av,com.google.vr.sdk.deps.aa,com.google.vr.sdk.deps.ak) -> a
    void registerDefaultInstance(java.lang.Class,com.google.vr.sdk.deps.av) -> a
    void setMemoizedSerializedSize(int) -> a
    void writeTo(com.google.vr.sdk.deps.ag) -> a
    com.google.vr.sdk.deps.av getDefaultInstanceForType() -> b
    com.google.vr.sdk.deps.cg getDefaultInstanceForType() -> b
    boolean isInitialized() -> d
    com.google.vr.sdk.deps.av$a toBuilder() -> e
    com.google.vr.sdk.deps.ch toBuilder() -> e
    int getSerializedSize() -> g
    com.google.vr.sdk.deps.av$a newBuilderForType() -> h
    com.google.vr.sdk.deps.ch newBuilderForType() -> h
    int getMemoizedSerializedSize() -> i
    java.lang.Object buildMessageInfo() -> l
    com.google.vr.sdk.deps.av$a createBuilder() -> m
    com.google.vr.sdk.deps.bd emptyFloatList() -> n
    com.google.vr.sdk.deps.be emptyIntList() -> o
    com.google.vr.sdk.deps.bi emptyProtobufList() -> p
    com.google.vr.sdk.deps.cp getParserForType() -> q
    void makeImmutable() -> r
com.google.vr.sdk.deps.av$a -> a.a.b.a.a.t$a:
    com.google.vr.sdk.deps.av defaultInstance -> a
    com.google.vr.sdk.deps.av instance -> b
    boolean isBuilt -> c
    void copyOnWrite() -> a
    com.google.vr.sdk.deps.av$a internalMergeFrom(com.google.vr.sdk.deps.av) -> a
    com.google.vr.sdk.deps.f internalMergeFrom(com.google.vr.sdk.deps.e) -> a
    com.google.vr.sdk.deps.av$a mergeFrom(byte[],int,int) -> a
    com.google.vr.sdk.deps.av$a mergeFrom(byte[],int,int,com.google.vr.sdk.deps.ak) -> a
    com.google.vr.sdk.deps.f mergeFrom(byte[],int,int) -> a
    void mergeFromInstance(com.google.vr.sdk.deps.av,com.google.vr.sdk.deps.av) -> a
    com.google.vr.sdk.deps.av getDefaultInstanceForType() -> b
    com.google.vr.sdk.deps.cg getDefaultInstanceForType() -> b
    com.google.vr.sdk.deps.av$a mergeFrom(com.google.vr.sdk.deps.av) -> b
    com.google.vr.sdk.deps.av buildPartial() -> c
    com.google.vr.sdk.deps.cg buildPartial() -> c
com.google.vr.sdk.deps.av$b -> a.a.b.a.a.t$b:
    com.google.vr.sdk.deps.ao a -> e
com.google.vr.sdk.deps.av$c -> a.a.b.a.a.t$c:
    com.google.vr.sdk.deps.ef c() -> f
    com.google.vr.sdk.deps.cl f() -> g
com.google.vr.sdk.deps.av$d -> a.a.b.a.a.t$d:
com.google.vr.sdk.deps.aw -> a.a.b.a.a.u:
    com.google.vr.sdk.deps.aw a -> b
    int[] b -> c
    int c -> d
com.google.vr.sdk.deps.ax -> a.a.b.a.a.v:
com.google.vr.sdk.deps.ay -> a.a.b.a.a.w:
com.google.vr.sdk.deps.az -> a.a.b.a.a.x:
com.google.vr.sdk.deps.b -> a.a.b.a.a.y:
    com.google.vr.sdk.deps.d globalInterceptor -> a
    boolean dispatchTransaction(int,android.os.Parcel,android.os.Parcel,int) -> a
    boolean routeToSuperOrEnforceInterface(int,android.os.Parcel,android.os.Parcel,int) -> b
com.google.vr.sdk.deps.ba -> a.a.b.a.a.z:
    int getNumber() -> c
com.google.vr.sdk.deps.bb -> a.a.b.a.a.A:
    com.google.vr.sdk.deps.ba findValueByNumber(int) -> a
com.google.vr.sdk.deps.bc -> a.a.b.a.a.B:
    boolean isInRange(int) -> a
com.google.vr.sdk.deps.bd -> a.a.b.a.a.C:
com.google.vr.sdk.deps.be -> a.a.b.a.a.D:
com.google.vr.sdk.deps.bg -> a.a.b.a.a.E:
com.google.vr.sdk.deps.bh -> a.a.b.a.a.F:
com.google.vr.sdk.deps.bi -> a.a.b.a.a.G:
com.google.vr.sdk.deps.bj -> a.a.b.a.a.H:
    com.google.vr.sdk.deps.bj i() -> h
    com.google.vr.sdk.deps.bj j() -> i
com.google.vr.sdk.deps.bk -> a.a.b.a.a.I:
com.google.vr.sdk.deps.bl -> a.a.b.a.a.J:
    java.lang.Class k -> l
    com.google.vr.sdk.deps.bl[] l -> k
com.google.vr.sdk.deps.bm -> a.a.b.a.a.K:
    com.google.vr.sdk.deps.cg a() -> c
com.google.vr.sdk.deps.bn -> a.a.b.a.a.L:
com.google.vr.sdk.deps.bo -> a.a.b.a.a.M:
com.google.vr.sdk.deps.bp -> a.a.b.a.a.N:
    int b() -> a
    com.google.vr.sdk.deps.o c() -> b
com.google.vr.sdk.deps.bq -> a.a.b.a.a.O:
    java.util.List b -> c
    com.google.vr.sdk.deps.bq a -> b
com.google.vr.sdk.deps.br -> a.a.b.a.a.P:
com.google.vr.sdk.deps.bs -> a.a.b.a.a.Q:
com.google.vr.sdk.deps.bt -> a.a.b.a.a.S:
    java.lang.Class a -> c
com.google.vr.sdk.deps.bu -> a.a.b.a.a.T:
com.google.vr.sdk.deps.bv -> a.a.b.a.a.U:
    long[] b -> c
    int c -> d
    com.google.vr.sdk.deps.bv a -> b
com.google.vr.sdk.deps.bw -> a.a.b.a.a.V:
    com.google.vr.sdk.deps.cf a -> b
    com.google.vr.sdk.deps.cf b -> a
com.google.vr.sdk.deps.bx -> a.a.b.a.a.W:
com.google.vr.sdk.deps.by -> a.a.b.a.a.X:
com.google.vr.sdk.deps.bz -> a.a.b.a.a.Y:
com.google.vr.sdk.deps.c -> a.a.b.a.a.Z:
com.google.vr.sdk.deps.ca -> a.a.b.a.a.aa:
    byte[] f -> b
    int j -> f
    int h -> d
    int i -> e
    boolean e -> a
    int g -> c
    void F() -> A
    boolean v() -> B
    int w() -> C
    long x() -> D
    byte y() -> E
    int z() -> F
    java.lang.Object b(java.lang.Class,com.google.vr.sdk.deps.ak) -> a
    void b(java.util.List,com.google.vr.sdk.deps.db,com.google.vr.sdk.deps.ak) -> a
    void i(java.util.List) -> a
    java.lang.Object a(java.lang.Class,com.google.vr.sdk.deps.ak) -> b
    void a(java.util.List) -> b
    void a(java.util.List,com.google.vr.sdk.deps.db,com.google.vr.sdk.deps.ak) -> b
    void h(java.util.List) -> c
    long r() -> c
    void q(java.util.List) -> d
    void g(java.util.List) -> e
    boolean c() -> f
    void p(java.util.List) -> f
    long f() -> g
    void f(java.util.List) -> g
    int j() -> h
    void o(java.util.List) -> h
    void e(java.util.List) -> i
    int s() -> i
    boolean k() -> j
    void m(java.util.List) -> j
    void n(java.util.List) -> k
    long t() -> k
    void d(java.util.List) -> m
    void k(java.util.List) -> n
    void c(java.util.List) -> o
    long g() -> p
    void j(java.util.List) -> p
    void b(java.util.List) -> q
    int p() -> q
    int h() -> r
    int q() -> s
    long i() -> t
    long A() -> v
    int B() -> w
    long C() -> x
    void D() -> y
    void E() -> z
com.google.vr.sdk.deps.cb -> a.a.b.a.a.ba:
    com.google.vr.sdk.deps.cb b -> a
    boolean a -> b
    void c() -> d
    boolean d() -> e
    void e() -> f
com.google.vr.sdk.deps.cc -> a.a.b.a.a.ca:
com.google.vr.sdk.deps.cd -> a.a.b.a.a.da:
com.google.vr.sdk.deps.ce -> a.a.b.a.a.ea:
    com.google.vr.sdk.deps.cg c() -> f
com.google.vr.sdk.deps.cf -> a.a.b.a.a.fa:
com.google.vr.sdk.deps.cg -> a.a.b.a.a.ga:
    void writeTo(com.google.vr.sdk.deps.ag) -> a
    com.google.vr.sdk.deps.ch toBuilder() -> e
    com.google.vr.sdk.deps.o toByteString() -> f
    int getSerializedSize() -> g
    com.google.vr.sdk.deps.ch newBuilderForType() -> h
com.google.vr.sdk.deps.ch -> a.a.b.a.a.ha:
    com.google.vr.sdk.deps.ch mergeFrom(com.google.vr.sdk.deps.cg) -> a
    com.google.vr.sdk.deps.ch mergeFrom(byte[]) -> a
    com.google.vr.sdk.deps.cg buildPartial() -> c
com.google.vr.sdk.deps.ci -> a.a.b.a.a.ia:
    com.google.vr.sdk.deps.cg getDefaultInstanceForType() -> b
    boolean isInitialized() -> d
com.google.vr.sdk.deps.cj -> a.a.b.a.a.ja:
    void b(java.lang.Object,java.lang.Object) -> a
    boolean a(java.lang.Object,java.lang.Object) -> b
    boolean e(java.lang.Object) -> c
    com.google.vr.sdk.deps.ds c(java.lang.Object) -> e
com.google.vr.sdk.deps.ck -> a.a.b.a.a.ka:
    void b(java.lang.Object,java.lang.Object) -> a
    boolean a(java.lang.Object,java.lang.Object) -> b
    boolean e(java.lang.Object) -> c
com.google.vr.sdk.deps.cl -> a.a.b.a.a.la:
com.google.vr.sdk.deps.cm -> a.a.b.a.a.ma:
com.google.vr.sdk.deps.cn -> a.a.b.a.a.na:
com.google.vr.sdk.deps.cp -> a.a.b.a.a.oa:
    java.lang.Object b(com.google.vr.sdk.deps.aa,com.google.vr.sdk.deps.ak) -> a
com.google.vr.sdk.deps.cq -> a.a.b.a.a.pa:
com.google.vr.sdk.deps.cr -> a.a.b.a.a.qa:
com.google.vr.sdk.deps.cs -> a.a.b.a.a.ra:
com.google.vr.sdk.deps.ct -> a.a.b.a.a.sa:
    java.util.List b -> c
    com.google.vr.sdk.deps.ct a -> b
com.google.vr.sdk.deps.cu -> a.a.b.a.a.ta:
    java.lang.String d() -> c
    java.lang.Object[] e() -> d
    com.google.vr.sdk.deps.cg c() -> f
com.google.vr.sdk.deps.cv -> a.a.b.a.a.ua:
    java.lang.Object b(java.lang.Class,com.google.vr.sdk.deps.ak) -> a
    void b(java.util.List,com.google.vr.sdk.deps.db,com.google.vr.sdk.deps.ak) -> a
    void i(java.util.List) -> a
    java.lang.Object a(java.lang.Class,com.google.vr.sdk.deps.ak) -> b
    void a(java.util.List) -> b
    void a(java.util.List,com.google.vr.sdk.deps.db,com.google.vr.sdk.deps.ak) -> b
    void h(java.util.List) -> c
    long r() -> c
    void q(java.util.List) -> d
    void g(java.util.List) -> e
    boolean c() -> f
    void p(java.util.List) -> f
    long f() -> g
    void f(java.util.List) -> g
    int j() -> h
    void o(java.util.List) -> h
    void e(java.util.List) -> i
    int s() -> i
    boolean k() -> j
    void m(java.util.List) -> j
    void n(java.util.List) -> k
    long t() -> k
    void d(java.util.List) -> m
    void k(java.util.List) -> n
    void c(java.util.List) -> o
    long g() -> p
    void j(java.util.List) -> p
    void b(java.util.List) -> q
    int p() -> q
    int h() -> r
    int q() -> s
    long i() -> t
com.google.vr.sdk.deps.d -> a.a.b.a.a.va:
com.google.vr.sdk.deps.db -> a.a.b.a.a.wa:
    void b(java.lang.Object,java.lang.Object) -> a
    boolean a(java.lang.Object,java.lang.Object) -> b
    boolean e(java.lang.Object) -> c
com.google.vr.sdk.deps.dc -> a.a.b.a.a.xa:
com.google.vr.sdk.deps.dd -> a.a.b.a.a.ya:
com.google.vr.sdk.deps.de -> a.a.b.a.a.za:
com.google.vr.sdk.deps.df -> a.a.b.a.a.Aa:
com.google.vr.sdk.deps.dg -> a.a.b.a.a.Ba:
com.google.vr.sdk.deps.dh -> a.a.b.a.a.Ca:
    com.google.vr.sdk.deps.de a -> b
com.google.vr.sdk.deps.di -> a.a.b.a.a.Da:
com.google.vr.sdk.deps.dj -> a.a.b.a.a.Ea:
com.google.vr.sdk.deps.dk -> a.a.b.a.a.Fa:
com.google.vr.sdk.deps.dl -> a.a.b.a.a.Ga:
com.google.vr.sdk.deps.dm -> a.a.b.a.a.Ha:
com.google.vr.sdk.deps.dn -> a.a.b.a.a.Ia:
com.google.vr.sdk.deps.do -> a.a.b.a.a.Ja:
    int[] d() -> c
    com.google.vr.sdk.deps.an[] e() -> d
    com.google.vr.sdk.deps.cg c() -> f
com.google.vr.sdk.deps.dp -> a.a.b.a.a.Ka:
com.google.vr.sdk.deps.dq -> a.a.b.a.a.La:
com.google.vr.sdk.deps.dr -> a.a.b.a.a.Ma:
com.google.vr.sdk.deps.ds -> a.a.b.a.a.Na:
com.google.vr.sdk.deps.dt -> a.a.b.a.a.Oa:
com.google.vr.sdk.deps.du -> a.a.b.a.a.Pa:
com.google.vr.sdk.deps.dv -> a.a.b.a.a.Qa:
com.google.vr.sdk.deps.dw -> a.a.b.a.a.Ra:
com.google.vr.sdk.deps.dw$a -> a.a.b.a.a.Ra$a:
com.google.vr.sdk.deps.dw$b -> a.a.b.a.a.Ra$b:
com.google.vr.sdk.deps.dw$c -> a.a.b.a.a.Ra$c:
com.google.vr.sdk.deps.dw$d -> a.a.b.a.a.Ra$d:
com.google.vr.sdk.deps.dx -> a.a.b.a.a.Sa:
com.google.vr.sdk.deps.dy -> a.a.b.a.a.Ta:
com.google.vr.sdk.deps.dz -> a.a.b.a.a.Ua:
com.google.vr.sdk.deps.e -> a.a.b.a.a.Va:
    int memoizedHashCode -> a
    int getSerializedSize(com.google.vr.sdk.deps.db) -> a
    java.lang.String getSerializingExceptionMessage(java.lang.String) -> a
    void setMemoizedSerializedSize(int) -> a
    void writeToInternal(com.google.vr.sdk.deps.ag) -> b
    com.google.vr.sdk.deps.o toByteString() -> f
    int getMemoizedSerializedSize() -> i
    int getSerializedSizeInternal() -> j
    byte[] toByteArray() -> k
    java.lang.Class getClassInternal() -> l
com.google.vr.sdk.deps.ea -> a.a.b.a.a.Wa:
com.google.vr.sdk.deps.eb -> a.a.b.a.a.Xa:
com.google.vr.sdk.deps.ec -> a.a.b.a.a.Ya:
com.google.vr.sdk.deps.ed -> a.a.b.a.a.Za:
com.google.vr.sdk.deps.ee -> a.a.b.a.a._a:
    com.google.vr.sdk.deps.ee[] u -> s
    com.google.vr.sdk.deps.ef s -> t
    int t -> u
com.google.vr.sdk.deps.ef -> a.a.b.a.a.ab:
com.google.vr.sdk.deps.eg -> a.a.b.a.a.bb:
com.google.vr.sdk.deps.eh -> a.a.b.a.a.cb:
com.google.vr.sdk.deps.ek -> a.a.b.a.a.db:
    int c(int,int) -> b
    void e(int,int) -> c
com.google.vr.sdk.deps.el -> a.a.b.a.a.eb:
com.google.vr.sdk.deps.em -> a.a.b.a.a.fb:
    com.google.vr.sdk.deps.eo unknownFieldData -> b
    boolean storeUnknownField$51666RRD5TJMURR7DHIIUS3IDTQ6UOJLCONMSOBEDSNK6RR4CLI4IRJGELQ44UBKCL17APJ6CLP4SOBEDSTKIAAQ0(com.google.vr.sdk.deps.et,int) -> a
    void storeUnknownFieldData(int,com.google.vr.sdk.deps.eu) -> a
    void writeTo(com.google.vr.sdk.deps.ek) -> a
    int computeSerializedSize() -> b
com.google.vr.sdk.deps.en -> a.a.b.a.a.gb:
com.google.vr.sdk.deps.eo -> a.a.b.a.a.hb:
    com.google.vr.sdk.deps.ep c(int) -> b
    int d(int) -> c
    void c() -> d
    int e(int) -> d
com.google.vr.sdk.deps.ep -> a.a.b.a.a.ib:
    com.google.vr.sdk.deps.ep c() -> b
com.google.vr.sdk.deps.eq -> a.a.b.a.a.jb:
com.google.vr.sdk.deps.er -> a.a.b.a.a.kb:
com.google.vr.sdk.deps.es -> a.a.b.a.a.lb:
    int cachedSize -> a
    com.google.vr.sdk.deps.es mergeFrom(com.google.vr.sdk.deps.es,byte[]) -> a
    com.google.vr.sdk.deps.es mergeFrom(com.google.vr.sdk.deps.es,byte[],int,int) -> a
    com.google.vr.sdk.deps.es mergeFrom$51666RRD5TJMURR7DHIIUS3IDTQ6UOJLCONMSOBEDSNK6RR4CLI4IRJGELQ44UBKCL17APJ6CLP4SOBEDSTIIJ33DTMIUPRFDTJMOP9FE1P6UT3FC9QMCBREC5N6UBQDCLPN6OB7CL762RJF7C______0(com.google.vr.sdk.deps.et) -> a
    byte[] toByteArray(com.google.vr.sdk.deps.es) -> a
    void writeTo(com.google.vr.sdk.deps.ek) -> a
    int computeSerializedSize() -> b
    void toByteArray(com.google.vr.sdk.deps.es,byte[],int,int) -> b
    int getCachedSize() -> d
    int getSerializedSize() -> e
com.google.vr.sdk.deps.et -> a.a.b.a.a.mb:
    float d() -> c
    long e() -> d
    int f() -> e
    boolean g() -> f
    java.lang.String h() -> g
    int j() -> h
    long k() -> i
    int l() -> j
    long m() -> k
    boolean n() -> l
    int o() -> m
    byte p() -> n
    com.google.vr.sdk.deps.aa q() -> o
    void r() -> p
com.google.vr.sdk.deps.eu -> a.a.b.a.a.nb:
com.google.vr.sdk.deps.ev -> a.a.b.a.a.ob:
    double[] f -> b
    float[] e -> a
    byte[] g -> c
com.google.vr.sdk.deps.f -> a.a.b.a.a.pb:
    com.google.vr.sdk.deps.f internalMergeFrom(com.google.vr.sdk.deps.e) -> a
    com.google.vr.sdk.deps.ch mergeFrom(com.google.vr.sdk.deps.cg) -> a
    com.google.vr.sdk.deps.ch mergeFrom(byte[]) -> a
    com.google.vr.sdk.deps.f mergeFrom(com.google.vr.sdk.deps.cg) -> a
    com.google.vr.sdk.deps.f mergeFrom(byte[]) -> a
    com.google.vr.sdk.deps.f mergeFrom(byte[],int,int) -> a
    com.google.vr.sdk.deps.dq newUninitializedMessageException(com.google.vr.sdk.deps.cg) -> b
com.google.vr.sdk.deps.i -> a.a.b.a.a.qb:
    java.lang.Object b(com.google.vr.sdk.deps.aa,com.google.vr.sdk.deps.ak) -> a
    com.google.vr.sdk.deps.av a(com.google.vr.sdk.deps.aa,com.google.vr.sdk.deps.ak) -> b
com.google.vr.sdk.deps.j -> a.a.b.a.a.rb:
com.google.vr.sdk.deps.k -> a.a.b.a.a.sb:
com.google.vr.sdk.deps.m -> a.a.b.a.a.tb:
    com.google.vr.sdk.deps.m a -> b
    boolean[] b -> c
    int c -> d
com.google.vr.sdk.deps.n -> a.a.b.a.a.ub:
com.google.vr.sdk.deps.o -> a.a.b.a.a.vb:
    int b(int,int,int) -> a
    void b(byte[],int,int,int) -> a
    int c(int,int,int) -> b
    int i() -> f
com.google.vr.sdk.deps.p -> a.a.b.a.a.wb:
com.google.vr.sdk.deps.q -> a.a.b.a.a.xb:
com.google.vr.sdk.deps.r -> a.a.b.a.a.yb:
com.google.vr.sdk.deps.s -> a.a.b.a.a.zb:
com.google.vr.sdk.deps.t -> a.a.b.a.a.Ab:
    int d -> f
    int c -> e
    void b(byte[],int,int,int) -> a
    int j() -> g
com.google.vr.sdk.deps.u -> a.a.b.a.a.Bb:
com.google.vr.sdk.deps.v -> a.a.b.a.a.Cb:
com.google.vr.sdk.deps.w -> a.a.b.a.a.Db:
com.google.vr.sdk.deps.x -> a.a.b.a.a.Eb:
com.google.vr.sdk.deps.y -> a.a.b.a.a.Fb:
    byte[] b -> d
    int b(int,int,int) -> a
    void b(byte[],int,int,int) -> a
    int j() -> g
com.google.vr.sdk.deps.z -> a.a.b.a.a.Gb:
com.google.vr.sdk.proto.CardboardDevice$1 -> a.a.b.a.b.a:
    int[] $SwitchMap$com$google$protobuf$GeneratedMessageLite$MethodToInvoke -> a
com.google.vr.sdk.proto.CardboardDevice$CardboardInternalParams -> a.a.b.a.b.c:
    java.lang.String accelerometer_ -> i
    com.google.vr.sdk.deps.cp PARSER -> g
    com.google.vr.sdk.proto.CardboardDevice$CardboardInternalParams DEFAULT_INSTANCE -> f
    java.lang.String gyroscope_ -> j
    com.google.vr.sdk.deps.be eyeOrientations_ -> h
    com.google.vr.sdk.deps.bg eyeOrientations_converter_ -> e
    java.lang.Object dynamicMethod(com.google.vr.sdk.deps.av$d,java.lang.Object,java.lang.Object) -> a
    com.google.vr.sdk.proto.CardboardDevice$CardboardInternalParams access$4400() -> s
    com.google.vr.sdk.deps.cp parser() -> t
com.google.vr.sdk.proto.CardboardDevice$CardboardInternalParams$1 -> a.a.b.a.b.b:
com.google.vr.sdk.proto.CardboardDevice$CardboardInternalParams$Builder -> a.a.b.a.b.c$a:
com.google.vr.sdk.proto.CardboardDevice$CardboardInternalParams$OrientationType -> a.a.b.a.b.c$b:
    com.google.vr.sdk.deps.bb internalValueMap -> i
    com.google.vr.sdk.proto.CardboardDevice$CardboardInternalParams$OrientationType CCW_270_DEGREES_MIRRORED -> h
    com.google.vr.sdk.proto.CardboardDevice$CardboardInternalParams$OrientationType CCW_180_DEGREES_MIRRORED -> g
    com.google.vr.sdk.proto.CardboardDevice$CardboardInternalParams$OrientationType CCW_90_DEGREES_MIRRORED -> f
    int value -> k
    com.google.vr.sdk.proto.CardboardDevice$CardboardInternalParams$OrientationType CCW_0_DEGREES_MIRRORED -> e
    com.google.vr.sdk.proto.CardboardDevice$CardboardInternalParams$OrientationType CCW_270_DEGREES -> d
    com.google.vr.sdk.proto.CardboardDevice$CardboardInternalParams$OrientationType CCW_180_DEGREES -> c
    com.google.vr.sdk.proto.CardboardDevice$CardboardInternalParams$OrientationType CCW_90_DEGREES -> b
    com.google.vr.sdk.proto.CardboardDevice$CardboardInternalParams$OrientationType CCW_0_DEGREES -> a
    com.google.vr.sdk.proto.CardboardDevice$CardboardInternalParams$OrientationType[] $VALUES -> j
    com.google.vr.sdk.proto.CardboardDevice$CardboardInternalParams$OrientationType forNumber(int) -> a
    int getNumber() -> c
    com.google.vr.sdk.deps.bc internalGetVerifier() -> h
com.google.vr.sdk.proto.CardboardDevice$CardboardInternalParams$OrientationType$1 -> a.a.b.a.b.d:
    com.google.vr.sdk.deps.ba findValueByNumber(int) -> a
    com.google.vr.sdk.proto.CardboardDevice$CardboardInternalParams$OrientationType findValueByNumber(int) -> a
com.google.vr.sdk.proto.CardboardDevice$CardboardInternalParams$OrientationType$OrientationTypeVerifier -> a.a.b.a.b.c$b$a:
    com.google.vr.sdk.deps.bc INSTANCE -> a
    boolean isInRange(int) -> a
com.google.vr.sdk.proto.CardboardDevice$CardboardInternalParamsOrBuilder -> a.a.b.a.b.e:
com.google.vr.sdk.proto.CardboardDevice$DaydreamInternalParams -> a.a.b.a.b.f:
    com.google.vr.sdk.deps.cp PARSER -> f
    boolean clipFieldOfViewToDisplay_ -> j
    com.google.vr.sdk.proto.CardboardDevice$DaydreamInternalParams DEFAULT_INSTANCE -> e
    int distortionMeshResolution_ -> i
    boolean useRotationalAlignmentCorrection_ -> h
    com.google.vr.sdk.deps.bi alignmentMarkers_ -> g
    java.lang.Object dynamicMethod(com.google.vr.sdk.deps.av$d,java.lang.Object,java.lang.Object) -> a
    com.google.vr.sdk.proto.CardboardDevice$DaydreamInternalParams access$6200() -> s
    int getAlignmentMarkersCount() -> t
    java.util.List getAlignmentMarkersList() -> u
    boolean getUseRotationalAlignmentCorrection() -> v
    com.google.vr.sdk.deps.cp parser() -> w
com.google.vr.sdk.proto.CardboardDevice$DaydreamInternalParams$Builder -> a.a.b.a.b.f$a:
com.google.vr.sdk.proto.CardboardDevice$DaydreamInternalParamsOrBuilder -> a.a.b.a.b.g:
com.google.vr.sdk.proto.CardboardDevice$DeviceParams$ButtonType -> a.a.b.a.b.i:
    com.google.vr.sdk.proto.CardboardDevice$DeviceParams$ButtonType[] $VALUES -> f
    com.google.vr.sdk.deps.bb internalValueMap -> e
    com.google.vr.sdk.proto.CardboardDevice$DeviceParams$ButtonType NONE -> a
    com.google.vr.sdk.proto.CardboardDevice$DeviceParams$ButtonType MAGNET -> b
    int value -> g
    com.google.vr.sdk.proto.CardboardDevice$DeviceParams$ButtonType TOUCH -> c
    com.google.vr.sdk.proto.CardboardDevice$DeviceParams$ButtonType INDIRECT_TOUCH -> d
    com.google.vr.sdk.proto.CardboardDevice$DeviceParams$ButtonType forNumber(int) -> a
    int getNumber() -> c
com.google.vr.sdk.proto.CardboardDevice$DeviceParams$ButtonType$1 -> a.a.b.a.b.h:
    com.google.vr.sdk.deps.ba findValueByNumber(int) -> a
    com.google.vr.sdk.proto.CardboardDevice$DeviceParams$ButtonType findValueByNumber(int) -> a
com.google.vr.sdk.proto.CardboardDevice$DeviceParams$VerticalAlignmentType -> a.a.b.a.b.k:
    com.google.vr.sdk.proto.CardboardDevice$DeviceParams$VerticalAlignmentType TOP -> c
    com.google.vr.sdk.proto.CardboardDevice$DeviceParams$VerticalAlignmentType[] $VALUES -> e
    com.google.vr.sdk.proto.CardboardDevice$DeviceParams$VerticalAlignmentType CENTER -> b
    com.google.vr.sdk.proto.CardboardDevice$DeviceParams$VerticalAlignmentType BOTTOM -> a
    int value -> f
    com.google.vr.sdk.deps.bb internalValueMap -> d
    com.google.vr.sdk.proto.CardboardDevice$DeviceParams$VerticalAlignmentType forNumber(int) -> a
    int getNumber() -> c
com.google.vr.sdk.proto.CardboardDevice$DeviceParams$VerticalAlignmentType$1 -> a.a.b.a.b.j:
    com.google.vr.sdk.deps.ba findValueByNumber(int) -> a
    com.google.vr.sdk.proto.CardboardDevice$DeviceParams$VerticalAlignmentType findValueByNumber(int) -> a
com.google.vr.sdk.proto.CardboardDevice$ScreenAlignmentMarker -> a.a.b.a.b.l:
    com.google.vr.sdk.deps.cp PARSER -> f
    com.google.vr.sdk.proto.CardboardDevice$ScreenAlignmentMarker DEFAULT_INSTANCE -> e
    float vertical_ -> h
    float horizontal_ -> g
    java.lang.Object dynamicMethod(com.google.vr.sdk.deps.av$d,java.lang.Object,java.lang.Object) -> a
    com.google.vr.sdk.proto.CardboardDevice$ScreenAlignmentMarker access$9500() -> s
    float getHorizontal() -> t
    float getVertical() -> u
com.google.vr.sdk.proto.CardboardDevice$ScreenAlignmentMarker$Builder -> a.a.b.a.b.l$a:
com.google.vr.sdk.proto.CardboardDevice$ScreenAlignmentMarkerOrBuilder -> a.a.b.a.b.m:
com.google.vr.sdk.proto.Display$1 -> a.a.b.a.b.n:
    int[] $SwitchMap$com$google$protobuf$GeneratedMessageLite$MethodToInvoke -> a
com.google.vr.sdk.proto.Display$DisplayParams -> a.a.b.a.b.o:
    com.google.vr.sdk.deps.cp PARSER -> f
    float bottomBezelHeight_ -> j
    com.google.vr.sdk.deps.bd dEPRECATEDGyroBias_ -> k
    int dEPRECATEDGyroBiasMemoizedSerializedSize -> l
    float yPpi_ -> i
    float xPpi_ -> h
    com.google.vr.sdk.proto.Display$DisplayParams DEFAULT_INSTANCE -> e
    int bitField0_ -> g
    void access$100(com.google.vr.sdk.proto.Display$DisplayParams,float) -> a
    java.lang.Object dynamicMethod(com.google.vr.sdk.deps.av$d,java.lang.Object,java.lang.Object) -> a
    void setBottomBezelHeight(float) -> a
    void access$300(com.google.vr.sdk.proto.Display$DisplayParams,float) -> b
    void setXPpi(float) -> b
    void access$500(com.google.vr.sdk.proto.Display$DisplayParams,float) -> c
    void setYPpi(float) -> c
    com.google.vr.sdk.proto.Display$DisplayParams access$000() -> s
    float getBottomBezelHeight() -> t
    float getXPpi() -> u
    float getYPpi() -> v
    boolean hasBottomBezelHeight() -> w
    boolean hasXPpi() -> x
    boolean hasYPpi() -> y
    com.google.vr.sdk.proto.Display$DisplayParams$Builder newBuilder() -> z
com.google.vr.sdk.proto.Display$DisplayParams$Builder -> a.a.b.a.b.o$a:
    com.google.vr.sdk.proto.Display$DisplayParams$Builder setBottomBezelHeight(float) -> a
    com.google.vr.sdk.proto.Display$DisplayParams$Builder setXPpi(float) -> b
    com.google.vr.sdk.proto.Display$DisplayParams$Builder setYPpi(float) -> c
    float getXPpi() -> e
    float getYPpi() -> f
com.google.vr.sdk.proto.Display$DisplayParamsOrBuilder -> a.a.b.a.b.p:
com.google.vr.sdk.proto.Preferences$1 -> a.a.b.a.b.q:
    int[] $SwitchMap$com$google$protobuf$GeneratedMessageLite$MethodToInvoke -> a
com.google.vr.sdk.proto.Preferences$DeveloperPrefs -> a.a.b.a.b.r:
    com.google.vr.sdk.deps.cp PARSER -> f
    com.google.vr.sdk.proto.Preferences$DeveloperPrefs DEFAULT_INSTANCE -> e
    boolean openglKhrDebugEnabled_ -> g
    java.lang.Object dynamicMethod(com.google.vr.sdk.deps.av$d,java.lang.Object,java.lang.Object) -> a
    com.google.vr.sdk.proto.Preferences$DeveloperPrefs access$1700() -> s
    com.google.vr.sdk.proto.Preferences$DeveloperPrefs getDefaultInstance() -> t
    boolean getOpenglKhrDebugEnabled() -> u
com.google.vr.sdk.proto.Preferences$DeveloperPrefs$Builder -> a.a.b.a.b.r$a:
com.google.vr.sdk.proto.Preferences$DeveloperPrefs$MotophoPatchMode -> a.a.b.a.b.r$b:
    com.google.vr.sdk.proto.Preferences$DeveloperPrefs$MotophoPatchMode[] $VALUES -> e
    int value -> f
    com.google.vr.sdk.proto.Preferences$DeveloperPrefs$MotophoPatchMode NONE -> a
    com.google.vr.sdk.deps.bb internalValueMap -> d
    com.google.vr.sdk.proto.Preferences$DeveloperPrefs$MotophoPatchMode VELOCITY -> b
    com.google.vr.sdk.proto.Preferences$DeveloperPrefs$MotophoPatchMode IMPULSE -> c
    com.google.vr.sdk.proto.Preferences$DeveloperPrefs$MotophoPatchMode forNumber(int) -> a
    int getNumber() -> c
    com.google.vr.sdk.deps.bc internalGetVerifier() -> h
com.google.vr.sdk.proto.Preferences$DeveloperPrefs$MotophoPatchMode$1 -> a.a.b.a.b.s:
    com.google.vr.sdk.deps.ba findValueByNumber(int) -> a
    com.google.vr.sdk.proto.Preferences$DeveloperPrefs$MotophoPatchMode findValueByNumber(int) -> a
com.google.vr.sdk.proto.Preferences$DeveloperPrefs$MotophoPatchMode$MotophoPatchModeVerifier -> a.a.b.a.b.r$b$a:
    com.google.vr.sdk.deps.bc INSTANCE -> a
    boolean isInRange(int) -> a
com.google.vr.sdk.proto.Preferences$DeveloperPrefsOrBuilder -> a.a.b.a.b.t:
com.google.vr.sdk.proto.Preferences$RuntimeFeature -> a.a.b.a.b.u:
    com.google.vr.sdk.deps.cp PARSER -> f
    int id_ -> g
    com.google.vr.sdk.proto.Preferences$RuntimeFeature DEFAULT_INSTANCE -> e
    java.lang.Object dynamicMethod(com.google.vr.sdk.deps.av$d,java.lang.Object,java.lang.Object) -> a
    com.google.vr.sdk.proto.Preferences$RuntimeFeature access$11800() -> s
com.google.vr.sdk.proto.Preferences$RuntimeFeature$Builder -> a.a.b.a.b.u$a:
com.google.vr.sdk.proto.Preferences$RuntimeFeatureOrBuilder -> a.a.b.a.b.v:
com.google.vr.sdk.proto.Preferences$UserPrefs -> a.a.b.a.b.w:
    com.google.vr.sdk.proto.Preferences$UserPrefs DEFAULT_INSTANCE -> e
    com.google.vr.sdk.deps.cp PARSER -> f
    com.google.vr.sdk.proto.Preferences$DeveloperPrefs developerPrefs_ -> h
    int bitField0_ -> g
    com.google.vr.sdk.deps.bi runtimeFeatures_ -> i
    java.lang.Object dynamicMethod(com.google.vr.sdk.deps.av$d,java.lang.Object,java.lang.Object) -> a
    com.google.vr.sdk.proto.Preferences$UserPrefs access$000() -> s
    com.google.vr.sdk.proto.Preferences$DeveloperPrefs getDeveloperPrefs() -> t
    boolean hasDeveloperPrefs() -> u
    com.google.vr.sdk.proto.Preferences$UserPrefs$Builder newBuilder() -> v
com.google.vr.sdk.proto.Preferences$UserPrefs$Builder -> a.a.b.a.b.w$a:
com.google.vr.sdk.proto.Preferences$UserPrefs$Handedness -> a.a.b.a.b.w$b:
    com.google.vr.sdk.deps.bb internalValueMap -> c
    com.google.vr.sdk.proto.Preferences$UserPrefs$Handedness[] $VALUES -> d
    int value -> e
    com.google.vr.sdk.proto.Preferences$UserPrefs$Handedness LEFT_HANDED -> b
    com.google.vr.sdk.proto.Preferences$UserPrefs$Handedness RIGHT_HANDED -> a
    com.google.vr.sdk.proto.Preferences$UserPrefs$Handedness forNumber(int) -> a
    int getNumber() -> c
    com.google.vr.sdk.deps.bc internalGetVerifier() -> h
com.google.vr.sdk.proto.Preferences$UserPrefs$Handedness$1 -> a.a.b.a.b.x:
    com.google.vr.sdk.deps.ba findValueByNumber(int) -> a
    com.google.vr.sdk.proto.Preferences$UserPrefs$Handedness findValueByNumber(int) -> a
com.google.vr.sdk.proto.Preferences$UserPrefs$Handedness$HandednessVerifier -> a.a.b.a.b.w$b$a:
    com.google.vr.sdk.deps.bc INSTANCE -> a
    boolean isInRange(int) -> a
com.google.vr.sdk.proto.Preferences$UserPrefsOrBuilder -> a.a.b.a.b.y:
com.google.vr.sdk.proto.SdkConfiguration$1 -> a.a.b.a.b.z:
    int[] $SwitchMap$com$google$protobuf$GeneratedMessageLite$MethodToInvoke -> a
com.google.vr.sdk.proto.SdkConfiguration$SdkConfigurationRequest -> a.a.b.a.b.A:
    com.google.vr.sdk.deps.cp PARSER -> f
    java.lang.String sdkVersion_ -> h
    com.google.vr.sdk.proto.SdkConfiguration$SdkConfigurationRequest DEFAULT_INSTANCE -> e
    int bitField0_ -> g
    com.google.common.logging.Vr$VREvent$SdkConfigurationParams requestedParams_ -> i
    void access$100(com.google.vr.sdk.proto.SdkConfiguration$SdkConfigurationRequest,java.lang.String) -> a
    void access$400(com.google.vr.sdk.proto.SdkConfiguration$SdkConfigurationRequest,com.google.common.logging.Vr$VREvent$SdkConfigurationParams) -> a
    java.lang.Object dynamicMethod(com.google.vr.sdk.deps.av$d,java.lang.Object,java.lang.Object) -> a
    void setRequestedParams(com.google.common.logging.Vr$VREvent$SdkConfigurationParams) -> a
    void setSdkVersion(java.lang.String) -> b
    com.google.vr.sdk.proto.SdkConfiguration$SdkConfigurationRequest access$000() -> s
    com.google.vr.sdk.proto.SdkConfiguration$SdkConfigurationRequest$Builder newBuilder() -> t
com.google.vr.sdk.proto.SdkConfiguration$SdkConfigurationRequest$Builder -> a.a.b.a.b.A$a:
    com.google.vr.sdk.proto.SdkConfiguration$SdkConfigurationRequest$Builder setRequestedParams(com.google.common.logging.Vr$VREvent$SdkConfigurationParams) -> a
    com.google.vr.sdk.proto.SdkConfiguration$SdkConfigurationRequest$Builder setSdkVersion(java.lang.String) -> a
com.google.vr.sdk.proto.SdkConfiguration$SdkConfigurationRequestOrBuilder -> a.a.b.a.b.B:
com.google.vr.sdk.proto.nano.CardboardDevice$DeviceParams -> a.a.b.a.b.a.a:
    float[] blueDistortionCoefficients -> m
    boolean hasMagnet_ -> n
    float trayToLensDistance_ -> j
    float[] distortionCoefficients -> k
    float[] greenDistortionCoefficients -> l
    float interLensDistance_ -> g
    float screenToLensDistance_ -> f
    java.lang.Integer verticalAlignment_ -> i
    float[] leftEyeFieldOfViewAngles -> h
    int bitField0_ -> c
    com.google.vr.sdk.proto.CardboardDevice$DaydreamInternalParams daydreamInternal -> q
    java.lang.Integer primaryButton_ -> o
    java.lang.String model_ -> e
    java.lang.String vendor_ -> d
    com.google.vr.sdk.proto.CardboardDevice$CardboardInternalParams internal -> p
    com.google.vr.sdk.deps.es mergeFrom$51666RRD5TJMURR7DHIIUS3IDTQ6UOJLCONMSOBEDSNK6RR4CLI4IRJGELQ44UBKCL17APJ6CLP4SOBEDSTIIJ33DTMIUPRFDTJMOP9FE1P6UT3FC9QMCBREC5N6UBQDCLPN6OB7CL762RJF7C______0(com.google.vr.sdk.deps.et) -> a
    void writeTo(com.google.vr.sdk.deps.ek) -> a
    int computeSerializedSize() -> b
    com.google.vr.sdk.proto.nano.CardboardDevice$DeviceParams mergeFrom$51666RRD5TJMURR7DHIIUS3IDTQ6UOJLCONMSOBEDSNK6RR4CLI4IRJGELQ44UBKCL17APJ6CLP4SOBEDSTIIJ33DTMIUPRFDTJMOP9FEPP2USR4DCNN0SJFEHNIURJ1DPNIUGR1E9I64RR1E9I48PBMD5HMA924CLR6IOR5A1GN4OBDECTG____0(com.google.vr.sdk.deps.et) -> b
    com.google.vr.sdk.proto.nano.CardboardDevice$DeviceParams clear() -> f
    float getTrayToLensDistance() -> g
com.google.vr.vrcore.base.api.BuildUtils -> a.a.b.b.a.a.a:
    java.lang.Boolean isDebug -> a
    boolean isDebugBuild(android.content.Context) -> a
    boolean computeIsDebugBuild(android.content.Context) -> b
com.google.vr.vrcore.base.api.ParcelableProto -> a.a.b.b.a.a.b:
    byte[] data -> a
    byte[] getData() -> a
    void readFromParcel(android.os.Parcel) -> a
    void setData(byte[]) -> a
    int getSizeBytes() -> b
    boolean isEmpty() -> c
    boolean shouldSerializeDataLength() -> d
    boolean shouldSerializeEmptyInsteadOfNullBuffer() -> e
com.google.vr.vrcore.base.api.SignatureUtils -> a.a.b.b.a.a.c:
    android.content.pm.Signature KEYBOARD_RELEASE_SIGNATURE -> f
    android.content.pm.Signature KEYBOARD_DEBUG_SIGNATURE -> e
    android.content.pm.Signature ANDROID_DEBUG_SIGNATURE -> d
    android.content.pm.Signature BLAZE_DEBUG_SIGNATURE -> c
    android.content.pm.Signature VRCORE_DEBUG_SIGNATURE -> b
    android.content.pm.Signature VRCORE_RELEASE_SIGNATURE -> a
    android.content.pm.Signature signatureFromBase64(java.lang.String) -> a
    boolean verifySignature(android.content.pm.PackageInfo,android.content.pm.Signature[]) -> a
com.google.vr.vrcore.base.api.VrCoreNotAvailableException -> a.a.b.b.a.a.d:
    int errorCode -> a
com.google.vr.vrcore.base.api.VrCoreUtils -> a.a.b.b.a.a.e:
    int checkVrCoreAvailability(android.content.Context) -> a
    java.lang.String getConnectionResultString(int) -> a
    boolean isVrCorePackage(java.lang.String) -> a
    int getVrCoreClientApiVersion(android.content.Context) -> b
    java.lang.String getVrCoreSdkLibraryVersion(android.content.Context) -> c
    int checkVrCoreAvailabilityImpl(android.content.Context) -> d
    boolean verifyRemotePackageSignature(android.content.Context) -> e
com.google.vr.vrcore.common.api.HeadTrackingState -> a.a.b.b.b.a.b:
    boolean shouldSerializeDataLength() -> d
    boolean shouldSerializeEmptyInsteadOfNullBuffer() -> e
com.google.vr.vrcore.common.api.HeadTrackingState$1 -> a.a.b.b.b.a.a:
com.google.vr.vrcore.common.api.IDaydreamListener -> a.a.b.b.b.a.c:
    void applyColorfulFade(int,long,int) -> a
    void applyFade(int,long) -> a
    void deprecated_setLensOffsets(float,float,float,float) -> a
    void resumeHeadTracking(com.google.vr.vrcore.common.api.HeadTrackingState) -> a
    void setLensOffset(float,float,float) -> a
    void recenterHeadTracking() -> f
    com.google.vr.vrcore.common.api.HeadTrackingState requestStopTracking() -> k
    void dumpDebugData() -> n
    void invokeCloseAction() -> p
    int getTargetApiVersion() -> q
com.google.vr.vrcore.common.api.IDaydreamListener$Stub -> a.a.b.b.b.a.c$a:
    boolean dispatchTransaction(int,android.os.Parcel,android.os.Parcel,int) -> a
com.google.vr.vrcore.common.api.IDaydreamManager -> a.a.b.b.b.a.d:
    boolean deprecatedExitFromVr(android.app.PendingIntent) -> a
    boolean exitFromVr2(android.os.Bundle) -> a
    int prepareVr(android.content.ComponentName,com.google.vr.vrcore.common.api.HeadTrackingState) -> a
    int prepareVr2(android.content.ComponentName,int,android.app.PendingIntent,com.google.vr.vrcore.common.api.HeadTrackingState) -> a
    int prepareVr3(android.os.Bundle,com.google.vr.vrcore.common.api.HeadTrackingState) -> a
    boolean registerListener(android.content.ComponentName,com.google.vr.vrcore.common.api.IDaydreamListener) -> a
    boolean unregisterListener(android.content.ComponentName) -> a
    void onExitingFromVr() -> i
com.google.vr.vrcore.common.api.IDaydreamManager$Stub -> a.a.b.b.b.a.d$a:
    com.google.vr.vrcore.common.api.IDaydreamManager asInterface(android.os.IBinder) -> a
com.google.vr.vrcore.common.api.IDaydreamManager$Stub$Proxy -> a.a.b.b.b.a.d$a$a:
    boolean deprecatedExitFromVr(android.app.PendingIntent) -> a
    boolean exitFromVr2(android.os.Bundle) -> a
    int prepareVr(android.content.ComponentName,com.google.vr.vrcore.common.api.HeadTrackingState) -> a
    int prepareVr2(android.content.ComponentName,int,android.app.PendingIntent,com.google.vr.vrcore.common.api.HeadTrackingState) -> a
    int prepareVr3(android.os.Bundle,com.google.vr.vrcore.common.api.HeadTrackingState) -> a
    boolean registerListener(android.content.ComponentName,com.google.vr.vrcore.common.api.IDaydreamListener) -> a
    boolean unregisterListener(android.content.ComponentName) -> a
    void onExitingFromVr() -> i
com.google.vr.vrcore.common.api.IVrCoreSdkService -> a.a.b.b.b.a.e:
    boolean initialize(int) -> a
    com.google.vr.vrcore.common.api.IDaydreamManager getDaydreamManager() -> e
    com.google.vr.vrcore.logging.api.IVrCoreLoggingService getLoggingService() -> m
com.google.vr.vrcore.common.api.IVrCoreSdkService$Stub -> a.a.b.b.b.a.e$a:
    com.google.vr.vrcore.common.api.IVrCoreSdkService asInterface(android.os.IBinder) -> a
com.google.vr.vrcore.common.api.IVrCoreSdkService$Stub$Proxy -> a.a.b.b.b.a.e$a$a:
    boolean initialize(int) -> a
    com.google.vr.vrcore.common.api.IDaydreamManager getDaydreamManager() -> e
    com.google.vr.vrcore.logging.api.IVrCoreLoggingService getLoggingService() -> m
com.google.vr.vrcore.controller.api.ControllerAccelEvent -> a.a.b.b.c.a.b:
    float z -> c
    float y -> b
    float x -> a
    int getByteSize() -> a
    void readFromParcel(android.os.Parcel) -> a
com.google.vr.vrcore.controller.api.ControllerAccelEvent$1 -> a.a.b.b.c.a.a:
com.google.vr.vrcore.controller.api.ControllerBatteryEvent -> a.a.b.b.c.a.d:
    boolean charging -> b
    int batteryLevelBucket -> a
    int getByteSize() -> a
    void readFromParcel(android.os.Parcel) -> a
com.google.vr.vrcore.controller.api.ControllerBatteryEvent$1 -> a.a.b.b.c.a.c:
com.google.vr.vrcore.controller.api.ControllerButtonEvent -> a.a.b.b.c.a.f:
    int[] ALL_BUTTONS -> a
    int button -> b
    boolean down -> c
    int getByteSize() -> a
    void readFromParcel(android.os.Parcel) -> a
com.google.vr.vrcore.controller.api.ControllerButtonEvent$1 -> a.a.b.b.c.a.e:
com.google.vr.vrcore.controller.api.ControllerEvent -> a.a.b.b.c.a.g:
    long timestampNanos -> a
    int controllerId -> b
    int getByteSize() -> a
    void readFromParcel(android.os.Parcel) -> a
com.google.vr.vrcore.controller.api.ControllerEventPacket -> a.a.b.b.c.a.k:
    com.google.vr.vrcore.controller.api.ControllerAccelEvent[] accelEvents -> d
    com.google.vr.vrcore.controller.api.ControllerButtonEvent[] buttonEvents -> f
    int touchEventCount -> k
    com.google.vr.vrcore.controller.api.ControllerTouchEvent[] touchEvents -> l
    int orientationEventCount -> i
    com.google.vr.vrcore.controller.api.ControllerOrientationEvent[] orientationEvents -> j
    java.lang.Object poolLock -> b
    int gyroEventCount -> g
    int buttonEventCount -> e
    java.util.ArrayDeque pool -> a
    int accelEventCount -> c
    com.google.vr.vrcore.controller.api.ControllerGyroEvent[] gyroEvents -> h
    int calculateParcelByteLength() -> a
    void checkIsValidEventCount(int) -> a
    void readFromParcel(android.os.Parcel) -> a
    void setControllerIndex(int,int,com.google.vr.vrcore.controller.api.ControllerEvent[]) -> a
    void clear() -> b
    com.google.vr.vrcore.controller.api.ControllerButtonEvent getButtonEvent(int) -> b
    int getButtonEventCount() -> c
    void setEventsControllerIndex(int) -> c
    com.google.vr.vrcore.controller.api.ControllerEventPacket obtain() -> d
    void recycle() -> e
com.google.vr.vrcore.controller.api.ControllerEventPacket$1 -> a.a.b.b.c.a.h:
com.google.vr.vrcore.controller.api.ControllerEventPacket2 -> a.a.b.b.c.a.j:
    com.google.vr.vrcore.controller.api.ControllerBatteryEvent batteryEvent -> f
    com.google.vr.vrcore.controller.api.ControllerTrackingStatusEvent[] trackingStatusEvents -> i
    int trackingStatusEventCount -> h
    long timestampMillis -> g
    java.lang.Object poolLock -> b
    boolean hasBatteryEvent -> e
    com.google.vr.vrcore.controller.api.ControllerPositionEvent[] positionEvents -> d
    java.util.ArrayDeque pool -> a
    int positionEventCount -> c
    int calculateParcelByteLength() -> a
    void readFromParcel(android.os.Parcel) -> a
    void clear() -> b
    void setEventsControllerIndex(int) -> c
    com.google.vr.vrcore.controller.api.ControllerEventPacket2 obtain() -> d
    void recycle() -> e
    long getSystemTimeMillis() -> f
    long getTimestampMillis() -> g
com.google.vr.vrcore.controller.api.ControllerEventPacket2$1 -> a.a.b.b.c.a.i:
com.google.vr.vrcore.controller.api.ControllerGyroEvent -> a.a.b.b.c.a.m:
    float z -> c
    float y -> b
    float x -> a
    int getByteSize() -> a
    void readFromParcel(android.os.Parcel) -> a
com.google.vr.vrcore.controller.api.ControllerGyroEvent$1 -> a.a.b.b.c.a.l:
com.google.vr.vrcore.controller.api.ControllerInitResults -> a.a.b.b.c.a.n:
    java.lang.String toString(int) -> a
com.google.vr.vrcore.controller.api.ControllerListenerOptions -> a.a.b.b.c.a.p:
    boolean enableGestures -> e
    boolean enableOrientation -> a
    boolean enableGyro -> b
    boolean enableAccel -> c
    boolean enableTouch -> d
    void readFromParcel(android.os.Parcel) -> a
com.google.vr.vrcore.controller.api.ControllerListenerOptions$1 -> a.a.b.b.c.a.o:
com.google.vr.vrcore.controller.api.ControllerOrientationEvent -> a.a.b.b.c.a.r:
    float qw -> d
    float qz -> c
    float qy -> b
    float qx -> a
    int getByteSize() -> a
    void readFromParcel(android.os.Parcel) -> a
com.google.vr.vrcore.controller.api.ControllerOrientationEvent$1 -> a.a.b.b.c.a.q:
com.google.vr.vrcore.controller.api.ControllerPositionEvent -> a.a.b.b.c.a.t:
    float z -> c
    float y -> b
    float x -> a
    int getByteSize() -> a
    void readFromParcel(android.os.Parcel) -> a
com.google.vr.vrcore.controller.api.ControllerPositionEvent$1 -> a.a.b.b.c.a.s:
com.google.vr.vrcore.controller.api.ControllerServiceBridge -> a.a.b.b.c.a.x:
    android.content.Context context -> b
    java.util.concurrent.atomic.AtomicInteger UNIQUE_INT -> a
    android.os.Handler mainThreadHandler -> c
    com.google.vr.vrcore.controller.api.ControllerServiceBridge$LocalControllerListener defaultListener -> i
    boolean isBound -> j
    com.google.vr.vrcore.controller.api.ControllerServiceBridge$ControllerServiceListener defaultServiceListener -> f
    android.util.SparseArray controllerListenerMap -> g
    int vrcoreApiVersion -> d
    com.google.vr.vrcore.controller.api.IControllerService service -> h
    java.lang.String listenerKey -> e
    void access$000(com.google.vr.vrcore.controller.api.ControllerServiceBridge,int) -> a
    void access$100(com.google.vr.vrcore.controller.api.ControllerEventPacket2) -> a
    void bridge$lambda$0$ControllerServiceBridge() -> a
    int getVrCoreApiVersion(android.content.Context) -> a
    void handleServiceEvent(int) -> a
    void initializeDefaultListener(com.google.vr.vrcore.controller.api.ControllerServiceBridge$Callbacks,com.google.vr.vrcore.controller.api.ControllerListenerOptions) -> a
    boolean registerListener(int,com.google.vr.vrcore.controller.api.ControllerServiceBridge$LocalControllerListener) -> a
    void clearControllers() -> b
    void logIfControllerPacketLags(com.google.vr.vrcore.controller.api.ControllerEventPacket2) -> b
    void doBind() -> c
    void doUnbind() -> d
    int getNumOfControllers() -> e
    void requestBind() -> f
    void requestUnbind() -> g
    void unregisterListeners() -> h
    java.lang.String createListenerKey() -> i
    void ensureOnMainThread() -> j
    void handleAvailableControllersChanged() -> k
    void setupAndBindDefaultControllerListener() -> l
com.google.vr.vrcore.controller.api.ControllerServiceBridge$$Lambda$0 -> a.a.b.b.c.a.u:
    com.google.vr.vrcore.controller.api.ControllerServiceBridge arg$1 -> a
com.google.vr.vrcore.controller.api.ControllerServiceBridge$$Lambda$1 -> a.a.b.b.c.a.v:
    com.google.vr.vrcore.controller.api.ControllerServiceBridge arg$1 -> a
com.google.vr.vrcore.controller.api.ControllerServiceBridge$$Lambda$3 -> a.a.b.b.c.a.w:
    com.google.vr.vrcore.controller.api.ControllerServiceBridge arg$1 -> a
com.google.vr.vrcore.controller.api.ControllerServiceBridge$Callbacks -> a.a.b.b.c.a.x$a:
    void onControllerEventPacket(com.google.vr.vrcore.controller.api.ControllerEventPacket) -> a
    void onControllerEventPacket2(com.google.vr.vrcore.controller.api.ControllerEventPacket2) -> a
    void onControllerRecentered(com.google.vr.vrcore.controller.api.ControllerOrientationEvent) -> a
    void onControllerStateChanged(int,int) -> a
    void onServiceDisconnected() -> a
    void onServiceInitFailed(int) -> a
    void onServiceConnected(int) -> b
    void onServiceUnavailable() -> b
    void onServiceFailed() -> c
com.google.vr.vrcore.controller.api.ControllerServiceBridge$ControllerListener -> a.a.b.b.c.a.x$b:
    java.lang.ref.WeakReference listener -> b
    int getApiVersion() -> a
    void onControllerEventPacket(com.google.vr.vrcore.controller.api.ControllerEventPacket) -> a
    void onControllerEventPacket2(com.google.vr.vrcore.controller.api.ControllerEventPacket2) -> a
    void onControllerRecentered(com.google.vr.vrcore.controller.api.ControllerOrientationEvent) -> a
    void onControllerStateChanged(int,int) -> a
    com.google.vr.vrcore.controller.api.ControllerListenerOptions getOptions() -> j
com.google.vr.vrcore.controller.api.ControllerServiceBridge$ControllerServiceListener -> a.a.b.b.c.a.x$c:
    java.lang.ref.WeakReference serviceBridge -> b
    int getApiVersion() -> a
    void onControllerServiceEvent(int) -> c
com.google.vr.vrcore.controller.api.ControllerServiceBridge$LocalControllerListener -> a.a.b.b.c.a.x$d:
    com.google.vr.vrcore.controller.api.ControllerServiceBridge$Callbacks callbacks -> a
    com.google.vr.vrcore.controller.api.ControllerListenerOptions options -> b
    int controllerIndex -> c
com.google.vr.vrcore.controller.api.ControllerTouchEvent -> a.a.b.b.c.a.z:
    float y -> d
    float x -> c
    int action -> b
    int fingerId -> a
    int getByteSize() -> a
    void readFromParcel(android.os.Parcel) -> a
com.google.vr.vrcore.controller.api.ControllerTouchEvent$1 -> a.a.b.b.c.a.y:
com.google.vr.vrcore.controller.api.ControllerTrackingStatusEvent -> a.a.b.b.c.a.B:
    int trackingStatusFlags -> a
    int getByteSize() -> a
    void readFromParcel(android.os.Parcel) -> a
com.google.vr.vrcore.controller.api.ControllerTrackingStatusEvent$1 -> a.a.b.b.c.a.A:
com.google.vr.vrcore.controller.api.IControllerListener -> a.a.b.b.c.a.C:
    int getApiVersion() -> a
    void onControllerEventPacket(com.google.vr.vrcore.controller.api.ControllerEventPacket) -> a
    void onControllerEventPacket2(com.google.vr.vrcore.controller.api.ControllerEventPacket2) -> a
    void onControllerRecentered(com.google.vr.vrcore.controller.api.ControllerOrientationEvent) -> a
    void onControllerStateChanged(int,int) -> a
    com.google.vr.vrcore.controller.api.ControllerListenerOptions getOptions() -> j
com.google.vr.vrcore.controller.api.IControllerListener$Stub -> a.a.b.b.c.a.C$a:
    boolean dispatchTransaction(int,android.os.Parcel,android.os.Parcel,int) -> a
com.google.vr.vrcore.controller.api.IControllerService -> a.a.b.b.c.a.D:
    int initialize(int) -> a
    boolean registerListener(int,java.lang.String,com.google.vr.vrcore.controller.api.IControllerListener) -> a
    boolean registerServiceListener(com.google.vr.vrcore.controller.api.IControllerServiceListener) -> a
    boolean unregisterListener(java.lang.String) -> a
    boolean unregisterServiceListener(com.google.vr.vrcore.controller.api.IControllerServiceListener) -> b
    int getNumberOfControllers() -> l
com.google.vr.vrcore.controller.api.IControllerService$Stub -> a.a.b.b.c.a.D$a:
    com.google.vr.vrcore.controller.api.IControllerService asInterface(android.os.IBinder) -> a
com.google.vr.vrcore.controller.api.IControllerService$Stub$Proxy -> a.a.b.b.c.a.D$a$a:
    int initialize(int) -> a
    boolean registerListener(int,java.lang.String,com.google.vr.vrcore.controller.api.IControllerListener) -> a
    boolean registerServiceListener(com.google.vr.vrcore.controller.api.IControllerServiceListener) -> a
    boolean unregisterListener(java.lang.String) -> a
    boolean unregisterServiceListener(com.google.vr.vrcore.controller.api.IControllerServiceListener) -> b
    int getNumberOfControllers() -> l
com.google.vr.vrcore.controller.api.IControllerServiceListener -> a.a.b.b.c.a.E:
    int getApiVersion() -> a
    void onControllerServiceEvent(int) -> c
com.google.vr.vrcore.controller.api.IControllerServiceListener$Stub -> a.a.b.b.c.a.E$a:
    boolean dispatchTransaction(int,android.os.Parcel,android.os.Parcel,int) -> a
com.google.vr.vrcore.library.api.IGvrLayout -> a.a.b.b.d.a.a:
    boolean enableAsyncReprojection(int) -> b
    void onResume() -> b
    void setStereoModeEnabled(boolean) -> b
    void onPause() -> c
    boolean enableCardboardTriggerEmulation(com.google.vr.vrcore.library.api.IObjectWrapper) -> d
    com.google.vr.vrcore.library.api.IObjectWrapper getRootView() -> d
    boolean setOnDonNotNeededListener(com.google.vr.vrcore.library.api.IObjectWrapper) -> e
    void setReentryIntent(com.google.vr.vrcore.library.api.IObjectWrapper) -> f
    void setPresentationView(com.google.vr.vrcore.library.api.IObjectWrapper) -> g
    long getNativeGvrContext() -> h
    void onBackPressed() -> o
    com.google.vr.vrcore.library.api.IGvrUiLayout getUiLayout() -> r
com.google.vr.vrcore.library.api.IGvrLayout$Stub -> a.a.b.b.d.a.a$a:
    com.google.vr.vrcore.library.api.IGvrLayout asInterface(android.os.IBinder) -> a
    boolean dispatchTransaction(int,android.os.Parcel,android.os.Parcel,int) -> a
com.google.vr.vrcore.library.api.IGvrLayout$Stub$Proxy -> a.a.b.b.d.a.a$a$a:
    boolean enableAsyncReprojection(int) -> b
    void onResume() -> b
    void setStereoModeEnabled(boolean) -> b
    void onPause() -> c
    com.google.vr.vrcore.library.api.IObjectWrapper getRootView() -> d
    void setReentryIntent(com.google.vr.vrcore.library.api.IObjectWrapper) -> f
    void setPresentationView(com.google.vr.vrcore.library.api.IObjectWrapper) -> g
    long getNativeGvrContext() -> h
    com.google.vr.vrcore.library.api.IGvrUiLayout getUiLayout() -> r
com.google.vr.vrcore.library.api.IGvrUiLayout -> a.a.b.b.d.a.b:
    void setSettingsButtonListener(com.google.vr.vrcore.library.api.IObjectWrapper) -> a
    void setTransitionViewEnabled(boolean) -> a
    void setTransitionViewListener(com.google.vr.vrcore.library.api.IObjectWrapper) -> b
    void setViewerName(java.lang.String) -> b
    void setCloseButtonListener(com.google.vr.vrcore.library.api.IObjectWrapper) -> c
    void setSettingsButtonEnabled(boolean) -> c
    com.google.vr.vrcore.library.api.IObjectWrapper getRootView() -> d
com.google.vr.vrcore.library.api.IGvrUiLayout$Stub -> a.a.b.b.d.a.b$a:
    com.google.vr.vrcore.library.api.IGvrUiLayout asInterface(android.os.IBinder) -> a
    boolean dispatchTransaction(int,android.os.Parcel,android.os.Parcel,int) -> a
com.google.vr.vrcore.library.api.IGvrUiLayout$Stub$Proxy -> a.a.b.b.d.a.b$a$a:
    void setTransitionViewEnabled(boolean) -> a
    void setCloseButtonListener(com.google.vr.vrcore.library.api.IObjectWrapper) -> c
com.google.vr.vrcore.library.api.IObjectWrapper -> a.a.b.b.d.a.c:
com.google.vr.vrcore.library.api.IObjectWrapper$Stub -> a.a.b.b.d.a.c$a:
    com.google.vr.vrcore.library.api.IObjectWrapper asInterface(android.os.IBinder) -> a
com.google.vr.vrcore.library.api.IObjectWrapper$Stub$Proxy -> a.a.b.b.d.a.c$a$a:
com.google.vr.vrcore.library.api.IVrCreator -> a.a.b.b.d.a.d:
    com.google.vr.vrcore.library.api.IVrNativeLibraryLoader newNativeLibraryLoader(com.google.vr.vrcore.library.api.IObjectWrapper,com.google.vr.vrcore.library.api.IObjectWrapper) -> a
    com.google.vr.vrcore.library.api.IGvrLayout newGvrLayout(com.google.vr.vrcore.library.api.IObjectWrapper,com.google.vr.vrcore.library.api.IObjectWrapper) -> b
com.google.vr.vrcore.library.api.IVrCreator$Stub -> a.a.b.b.d.a.d$a:
    com.google.vr.vrcore.library.api.IVrCreator asInterface(android.os.IBinder) -> a
com.google.vr.vrcore.library.api.IVrCreator$Stub$Proxy -> a.a.b.b.d.a.d$a$a:
    com.google.vr.vrcore.library.api.IVrNativeLibraryLoader newNativeLibraryLoader(com.google.vr.vrcore.library.api.IObjectWrapper,com.google.vr.vrcore.library.api.IObjectWrapper) -> a
    com.google.vr.vrcore.library.api.IGvrLayout newGvrLayout(com.google.vr.vrcore.library.api.IObjectWrapper,com.google.vr.vrcore.library.api.IObjectWrapper) -> b
com.google.vr.vrcore.library.api.IVrNativeLibraryLoader -> a.a.b.b.d.a.e:
    long loadNativeGvrLibrary(int,int,int) -> a
    long loadNativeGvrLibraryWithMinVersion(java.lang.String,java.lang.String) -> a
    long loadNativeDlsymMethod() -> g
com.google.vr.vrcore.library.api.IVrNativeLibraryLoader$Stub -> a.a.b.b.d.a.e$a:
    com.google.vr.vrcore.library.api.IVrNativeLibraryLoader asInterface(android.os.IBinder) -> a
com.google.vr.vrcore.library.api.IVrNativeLibraryLoader$Stub$Proxy -> a.a.b.b.d.a.e$a$a:
    long loadNativeGvrLibrary(int,int,int) -> a
    long loadNativeGvrLibraryWithMinVersion(java.lang.String,java.lang.String) -> a
    long loadNativeDlsymMethod() -> g
com.google.vr.vrcore.library.api.ObjectWrapper -> a.a.b.b.d.a.f:
    java.lang.Object wrappedObject -> b
    java.lang.Object unwrap(com.google.vr.vrcore.library.api.IObjectWrapper,java.lang.Class) -> a
    com.google.vr.vrcore.library.api.IObjectWrapper wrap(java.lang.Object) -> a
com.google.vr.vrcore.library.api.VrCoreLoader -> a.a.b.b.d.a.g:
    android.content.Context sRemoteContext -> a
    com.google.vr.vrcore.library.api.IVrCreator sCreator -> c
    int sRemoteContextApiVersion -> b
    android.content.Context getRemoteContext(android.content.Context) -> a
    android.os.IBinder newBinderInstance(java.lang.ClassLoader,java.lang.String) -> a
    int getRemoteContextClientApiVersion(android.content.Context) -> b
    com.google.vr.vrcore.library.api.IVrCreator getRemoteCreator(android.content.Context) -> c
com.google.vr.vrcore.logging.api.IVrCoreLoggingService -> a.a.b.b.e.a.a:
    void log(com.google.vr.vrcore.logging.api.VREventParcelable) -> a
com.google.vr.vrcore.logging.api.IVrCoreLoggingService$Stub -> a.a.b.b.e.a.a$a:
    com.google.vr.vrcore.logging.api.IVrCoreLoggingService asInterface(android.os.IBinder) -> a
com.google.vr.vrcore.logging.api.IVrCoreLoggingService$Stub$Proxy -> a.a.b.b.e.a.a$a$a:
    void log(com.google.vr.vrcore.logging.api.VREventParcelable) -> a
com.google.vr.vrcore.logging.api.VREventParcelable -> a.a.b.b.e.a.c:
    com.google.common.logging.nano.Vr$VREvent event -> b
    int eventCode -> a
com.google.vr.vrcore.logging.api.VREventParcelable$1 -> a.a.b.b.e.a.b:
